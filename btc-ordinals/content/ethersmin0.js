const __$G="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},version="6.13.3";function checkType(e,t,r){const n=t.split("|").map((e=>e.trim()));for(let r=0;r<n.length;r++)switch(t){case"any":return;case"bigint":case"boolean":case"number":case"string":if(typeof e===t)return}const s=new Error(`invalid value for type ${t}`);throw s.code="INVALID_ARGUMENT",s.argument=`value.${r}`,s.value=e,s}async function resolveProperties(e){const t=Object.keys(e);return(await Promise.all(t.map((t=>Promise.resolve(e[t]))))).reduce(((e,r,n)=>(e[t[n]]=r,e)),{})}function defineProperties(e,t,r){for(let n in t){let s=t[n];const i=r?r[n]:null;i&&checkType(s,i,n),Object.defineProperty(e,n,{enumerable:!0,value:s,writable:!1})}}function stringify$1(e){if(null==e)return"null";if(Array.isArray(e))return"[ "+e.map(stringify$1).join(", ")+" ]";if(e instanceof Uint8Array){const t="0123456789abcdef";let r="0x";for(let n=0;n<e.length;n++)r+=t[e[n]>>4],r+=t[15&e[n]];return r}if("object"==typeof e&&"function"==typeof e.toJSON)return stringify$1(e.toJSON());switch(typeof e){case"boolean":case"symbol":case"number":return e.toString();case"bigint":return BigInt(e).toString();case"string":return JSON.stringify(e);case"object":{const t=Object.keys(e);return t.sort(),"{ "+t.map((t=>`${stringify$1(t)}: ${stringify$1(e[t])}`)).join(", ")+" }"}}return"[ COULD NOT SERIALIZE ]"}function isError(e,t){return e&&e.code===t}function isCallException(e){return isError(e,"CALL_EXCEPTION")}function makeError(e,t,r){let n,s=e;{const n=[];if(r){if("message"in r||"code"in r||"name"in r)throw new Error(`value will overwrite populated values: ${stringify$1(r)}`);for(const e in r){if("shortMessage"===e)continue;const t=r[e];n.push(e+"="+stringify$1(t))}}n.push(`code=${t}`),n.push(`version=${version}`),n.length&&(e+=" ("+n.join(", ")+")")}switch(t){case"INVALID_ARGUMENT":n=new TypeError(e);break;case"NUMERIC_FAULT":case"BUFFER_OVERRUN":n=new RangeError(e);break;default:n=new Error(e)}return defineProperties(n,{code:t}),r&&Object.assign(n,r),null==n.shortMessage&&defineProperties(n,{shortMessage:s}),n}function assert(e,t,r,n){if(!e)throw makeError(t,r,n)}function assertArgument(e,t,r,n){assert(e,t,"INVALID_ARGUMENT",{argument:r,value:n})}function assertArgumentCount(e,t,r){null==r&&(r=""),r&&(r=": "+r),assert(e>=t,"missing arguemnt"+r,"MISSING_ARGUMENT",{count:e,expectedCount:t}),assert(e<=t,"too many arguments"+r,"UNEXPECTED_ARGUMENT",{count:e,expectedCount:t})}const _normalizeForms=["NFD","NFC","NFKD","NFKC"].reduce(((e,t)=>{try{if("test"!=="test".normalize(t))throw new Error("bad");if("NFD"===t){const e=String.fromCharCode(233).normalize("NFD");if(e!==String.fromCharCode(101,769))throw new Error("broken")}e.push(t)}catch(e){}return e}),[]);function assertNormalize(e){assert(_normalizeForms.indexOf(e)>=0,"platform missing String.prototype.normalize","UNSUPPORTED_OPERATION",{operation:"String.prototype.normalize",info:{form:e}})}function assertPrivate(e,t,r){if(null==r&&(r=""),e!==t){let e=r,t="new";r&&(e+=".",t+=" "+r),assert(!1,`private constructor; use ${e}from* methods`,"UNSUPPORTED_OPERATION",{operation:t})}}function _getBytes(e,t,r){if(e instanceof Uint8Array)return r?new Uint8Array(e):e;if("string"==typeof e&&e.match(/^0x(?:[0-9a-f][0-9a-f])*$/i)){const t=new Uint8Array((e.length-2)/2);let r=2;for(let n=0;n<t.length;n++)t[n]=parseInt(e.substring(r,r+2),16),r+=2;return t}assertArgument(!1,"invalid BytesLike value",t||"value",e)}function getBytes(e,t){return _getBytes(e,t,!1)}function getBytesCopy(e,t){return _getBytes(e,t,!0)}function isHexString(e,t){return!("string"!=typeof e||!e.match(/^0x[0-9A-Fa-f]*$/))&&(("number"!=typeof t||e.length===2+2*t)&&(!0!==t||e.length%2==0))}function isBytesLike(e){return isHexString(e,!0)||e instanceof Uint8Array}const HexCharacters="0123456789abcdef";function hexlify(e){const t=getBytes(e);let r="0x";for(let e=0;e<t.length;e++){const n=t[e];r+=HexCharacters[(240&n)>>4]+HexCharacters[15&n]}return r}function concat(e){return"0x"+e.map((e=>hexlify(e).substring(2))).join("")}function dataLength(e){return isHexString(e,!0)?(e.length-2)/2:getBytes(e).length}function dataSlice(e,t,r){const n=getBytes(e);return null!=r&&r>n.length&&assert(!1,"cannot slice beyond data bounds","BUFFER_OVERRUN",{buffer:n,length:n.length,offset:r}),hexlify(n.slice(null==t?0:t,null==r?n.length:r))}function stripZerosLeft(e){let t=hexlify(e).substring(2);for(;t.startsWith("00");)t=t.substring(2);return"0x"+t}function zeroPad(e,t,r){const n=getBytes(e);assert(t>=n.length,"padding exceeds data length","BUFFER_OVERRUN",{buffer:new Uint8Array(n),length:t,offset:t+1});const s=new Uint8Array(t);return s.fill(0),r?s.set(n,t-n.length):s.set(n,0),hexlify(s)}function zeroPadValue(e,t){return zeroPad(e,t,!0)}function zeroPadBytes(e,t){return zeroPad(e,t,!1)}const BN_0$a=BigInt(0),BN_1$5=BigInt(1),maxValue=9007199254740991;function fromTwos(e,t){const r=getUint(e,"value"),n=BigInt(getNumber(t,"width"));if(assert(r>>n===BN_0$a,"overflow","NUMERIC_FAULT",{operation:"fromTwos",fault:"overflow",value:e}),r>>n-BN_1$5){return-((~r&(BN_1$5<<n)-BN_1$5)+BN_1$5)}return r}function toTwos(e,t){let r=getBigInt(e,"value");const n=BigInt(getNumber(t,"width")),s=BN_1$5<<n-BN_1$5;if(r<BN_0$a){r=-r,assert(r<=s,"too low","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:e});return(~r&(BN_1$5<<n)-BN_1$5)+BN_1$5}return assert(r<s,"too high","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:e}),r}function mask(e,t){const r=getUint(e,"value"),n=BigInt(getNumber(t,"bits"));return r&(BN_1$5<<n)-BN_1$5}function getBigInt(e,t){switch(typeof e){case"bigint":return e;case"number":return assertArgument(Number.isInteger(e),"underflow",t||"value",e),assertArgument(e>=-maxValue&&e<=maxValue,"overflow",t||"value",e),BigInt(e);case"string":try{if(""===e)throw new Error("empty string");return"-"===e[0]&&"-"!==e[1]?-BigInt(e.substring(1)):BigInt(e)}catch(r){assertArgument(!1,`invalid BigNumberish string: ${r.message}`,t||"value",e)}}assertArgument(!1,"invalid BigNumberish value",t||"value",e)}function getUint(e,t){const r=getBigInt(e,t);return assert(r>=BN_0$a,"unsigned value cannot be negative","NUMERIC_FAULT",{fault:"overflow",operation:"getUint",value:e}),r}const Nibbles$1="0123456789abcdef";function toBigInt(e){if(e instanceof Uint8Array){let t="0x0";for(const r of e)t+=Nibbles$1[r>>4],t+=Nibbles$1[15&r];return BigInt(t)}return getBigInt(e)}function getNumber(e,t){switch(typeof e){case"bigint":return assertArgument(e>=-maxValue&&e<=maxValue,"overflow",t||"value",e),Number(e);case"number":return assertArgument(Number.isInteger(e),"underflow",t||"value",e),assertArgument(e>=-maxValue&&e<=maxValue,"overflow",t||"value",e),e;case"string":try{if(""===e)throw new Error("empty string");return getNumber(BigInt(e),t)}catch(r){assertArgument(!1,`invalid numeric string: ${r.message}`,t||"value",e)}}assertArgument(!1,"invalid numeric value",t||"value",e)}function toNumber(e){return getNumber(toBigInt(e))}function toBeHex(e,t){let r=getUint(e,"value").toString(16);if(null==t)r.length%2&&(r="0"+r);else{const n=getNumber(t,"width");for(assert(2*n>=r.length,`value exceeds width (${n} bytes)`,"NUMERIC_FAULT",{operation:"toBeHex",fault:"overflow",value:e});r.length<2*n;)r="0"+r}return"0x"+r}function toBeArray(e){const t=getUint(e,"value");if(t===BN_0$a)return new Uint8Array([]);let r=t.toString(16);r.length%2&&(r="0"+r);const n=new Uint8Array(r.length/2);for(let e=0;e<n.length;e++){const t=2*e;n[e]=parseInt(r.substring(t,t+2),16)}return n}function toQuantity(e){let t=hexlify(isBytesLike(e)?e:toBeArray(e)).substring(2);for(;t.startsWith("0");)t=t.substring(1);return""===t&&(t="0"),"0x"+t}const Alphabet="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";let Lookup=null;function getAlpha(e){if(null==Lookup){Lookup={};for(let e=0;e<Alphabet.length;e++)Lookup[Alphabet[e]]=BigInt(e)}const t=Lookup[e];return assertArgument(null!=t,"invalid base58 value","letter",e),t}const BN_0$9=BigInt(0),BN_58=BigInt(58);function encodeBase58(e){const t=getBytes(e);let r=toBigInt(t),n="";for(;r;)n=Alphabet[Number(r%BN_58)]+n,r/=BN_58;for(let e=0;e<t.length&&!t[e];e++)n=Alphabet[0]+n;return n}function decodeBase58(e){let t=BN_0$9;for(let r=0;r<e.length;r++)t*=BN_58,t+=getAlpha(e[r]);return t}function decodeBase64(e){e=atob(e);const t=new Uint8Array(e.length);for(let r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return getBytes(t)}function encodeBase64(e){const t=getBytes(e);let r="";for(let e=0;e<t.length;e++)r+=String.fromCharCode(t[e]);return btoa(r)}class EventPayload{filter;emitter;#e;constructor(e,t,r){this.#e=t,defineProperties(this,{emitter:e,filter:r})}async removeListener(){null!=this.#e&&await this.emitter.off(this.filter,this.#e)}}function errorFunc(e,t,r,n,s){assertArgument(!1,`invalid codepoint at offset ${t}; ${e}`,"bytes",r)}function ignoreFunc(e,t,r,n,s){if("BAD_PREFIX"===e||"UNEXPECTED_CONTINUE"===e){let e=0;for(let n=t+1;n<r.length&&r[n]>>6==2;n++)e++;return e}return"OVERRUN"===e?r.length-t-1:0}function replaceFunc(e,t,r,n,s){return"OVERLONG"===e?(assertArgument("number"==typeof s,"invalid bad code point for replacement","badCodepoint",s),n.push(s),0):(n.push(65533),ignoreFunc(e,t,r))}const Utf8ErrorFuncs=Object.freeze({error:errorFunc,ignore:ignoreFunc,replace:replaceFunc});function getUtf8CodePoints(e,t){null==t&&(t=Utf8ErrorFuncs.error);const r=getBytes(e,"bytes"),n=[];let s=0;for(;s<r.length;){const e=r[s++];if(e>>7==0){n.push(e);continue}let i=null,a=null;if(192==(224&e))i=1,a=127;else if(224==(240&e))i=2,a=2047;else{if(240!=(248&e)){s+=t(128==(192&e)?"UNEXPECTED_CONTINUE":"BAD_PREFIX",s-1,r,n);continue}i=3,a=65535}if(s-1+i>=r.length){s+=t("OVERRUN",s-1,r,n);continue}let o=e&(1<<8-i-1)-1;for(let e=0;e<i;e++){let e=r[s];if(128!=(192&e)){s+=t("MISSING_CONTINUE",s,r,n),o=null;break}o=o<<6|63&e,s++}null!==o&&(o>1114111?s+=t("OUT_OF_RANGE",s-1-i,r,n,o):o>=55296&&o<=57343?s+=t("UTF16_SURROGATE",s-1-i,r,n,o):o<=a?s+=t("OVERLONG",s-1-i,r,n,o):n.push(o))}return n}function toUtf8Bytes(e,t){assertArgument("string"==typeof e,"invalid string value","str",e),null!=t&&(assertNormalize(t),e=e.normalize(t));let r=[];for(let t=0;t<e.length;t++){const n=e.charCodeAt(t);if(n<128)r.push(n);else if(n<2048)r.push(n>>6|192),r.push(63&n|128);else if(55296==(64512&n)){t++;const s=e.charCodeAt(t);assertArgument(t<e.length&&56320==(64512&s),"invalid surrogate pair","str",e);const i=65536+((1023&n)<<10)+(1023&s);r.push(i>>18|240),r.push(i>>12&63|128),r.push(i>>6&63|128),r.push(63&i|128)}else r.push(n>>12|224),r.push(n>>6&63|128),r.push(63&n|128)}return new Uint8Array(r)}function _toUtf8String(e){return e.map((e=>e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(55296+(e>>10&1023),56320+(1023&e))))).join("")}function toUtf8String(e,t){return _toUtf8String(getUtf8CodePoints(e,t))}function toUtf8CodePoints(e,t){return getUtf8CodePoints(toUtf8Bytes(e,t))}function createGetUrl(e){return async function(e,t){assert(null==t||!t.cancelled,"request cancelled before sending","CANCELLED");const r=e.url.split(":")[0].toLowerCase();assert("http"===r||"https"===r,`unsupported protocol ${r}`,"UNSUPPORTED_OPERATION",{info:{protocol:r},operation:"request"}),assert("https"===r||!e.credentials||e.allowInsecureAuthentication,"insecure authorized connections unsupported","UNSUPPORTED_OPERATION",{operation:"request"});let n=null;const s=new AbortController,i=setTimeout((()=>{n=makeError("request timeout","TIMEOUT"),s.abort()}),e.timeout);t&&t.addListener((()=>{n=makeError("request cancelled","CANCELLED"),s.abort()}));const a={method:e.method,headers:new Headers(Array.from(e)),body:e.body||void 0,signal:s.signal};let o;try{o=await fetch(e.url,a)}catch(e){if(clearTimeout(i),n)throw n;throw e}clearTimeout(i);const c={};o.headers.forEach(((e,t)=>{c[t.toLowerCase()]=e}));const l=await o.arrayBuffer(),u=null==l?null:new Uint8Array(l);return{statusCode:o.status,statusMessage:o.statusText,headers:c,body:u}}}const MAX_ATTEMPTS=12,SLOT_INTERVAL=250;let defaultGetUrlFunc=createGetUrl();const reData=new RegExp("^data:([^;:]*)?(;base64)?,(.*)$","i"),reIpfs=new RegExp("^ipfs://(ipfs/)?(.*)$","i");let locked$5=!1;async function dataGatewayFunc(e,t){try{const t=e.match(reData);if(!t)throw new Error("invalid data");return new FetchResponse(200,"OK",{"content-type":t[1]||"text/plain"},t[2]?decodeBase64(t[3]):unpercent(t[3]))}catch(t){return new FetchResponse(599,"BAD REQUEST (invalid data: URI)",{},null,new FetchRequest(e))}}function getIpfsGatewayFunc(e){return async function(t,r){try{const r=t.match(reIpfs);if(!r)throw new Error("invalid link");return new FetchRequest(`${e}${r[2]}`)}catch(e){return new FetchResponse(599,"BAD REQUEST (invalid IPFS URI)",{},null,new FetchRequest(t))}}}const Gateways={data:dataGatewayFunc,ipfs:getIpfsGatewayFunc("https://gateway.ipfs.io/ipfs/")},fetchSignals=new WeakMap;class FetchCancelSignal{#t;#r;constructor(e){this.#t=[],this.#r=!1,fetchSignals.set(e,(()=>{if(!this.#r){this.#r=!0;for(const e of this.#t)setTimeout((()=>{e()}),0);this.#t=[]}}))}addListener(e){assert(!this.#r,"singal already cancelled","UNSUPPORTED_OPERATION",{operation:"fetchCancelSignal.addCancelListener"}),this.#t.push(e)}get cancelled(){return this.#r}checkSignal(){assert(!this.cancelled,"cancelled","CANCELLED",{})}}function checkSignal(e){if(null==e)throw new Error("missing signal; should not happen");return e.checkSignal(),e}class FetchRequest{#n;#s;#i;#a;#o;#c;#l;#u;#h;#d;#f;#g;#p;#m;#y;get url(){return this.#c}set url(e){this.#c=String(e)}get body(){return null==this.#l?null:new Uint8Array(this.#l)}set body(e){if(null==e)this.#l=void 0,this.#u=void 0;else if("string"==typeof e)this.#l=toUtf8Bytes(e),this.#u="text/plain";else if(e instanceof Uint8Array)this.#l=e,this.#u="application/octet-stream";else{if("object"!=typeof e)throw new Error("invalid body");this.#l=toUtf8Bytes(JSON.stringify(e)),this.#u="application/json"}}hasBody(){return null!=this.#l}get method(){return this.#a?this.#a:this.hasBody()?"POST":"GET"}set method(e){null==e&&(e=""),this.#a=String(e).toUpperCase()}get headers(){const e=Object.assign({},this.#i);return this.#h&&(e.authorization=`Basic ${encodeBase64(toUtf8Bytes(this.#h))}`),this.allowGzip&&(e["accept-encoding"]="gzip"),null==e["content-type"]&&this.#u&&(e["content-type"]=this.#u),this.body&&(e["content-length"]=String(this.body.length)),e}getHeader(e){return this.headers[e.toLowerCase()]}setHeader(e,t){this.#i[String(e).toLowerCase()]=String(t)}clearHeaders(){this.#i={}}[Symbol.iterator](){const e=this.headers,t=Object.keys(e);let r=0;return{next:()=>{if(r<t.length){const n=t[r++];return{value:[n,e[n]],done:!1}}return{value:void 0,done:!0}}}}get credentials(){return this.#h||null}setCredentials(e,t){assertArgument(!e.match(/:/),"invalid basic authentication username","username","[REDACTED]"),this.#h=`${e}:${t}`}get allowGzip(){return this.#s}set allowGzip(e){this.#s=!!e}get allowInsecureAuthentication(){return!!this.#n}set allowInsecureAuthentication(e){this.#n=!!e}get timeout(){return this.#o}set timeout(e){assertArgument(e>=0,"timeout must be non-zero","timeout",e),this.#o=e}get preflightFunc(){return this.#d||null}set preflightFunc(e){this.#d=e}get processFunc(){return this.#f||null}set processFunc(e){this.#f=e}get retryFunc(){return this.#g||null}set retryFunc(e){this.#g=e}get getUrlFunc(){return this.#y||defaultGetUrlFunc}set getUrlFunc(e){this.#y=e}constructor(e){this.#c=String(e),this.#n=!1,this.#s=!0,this.#i={},this.#a="",this.#o=3e5,this.#m={slotInterval:250,maxAttempts:12},this.#y=null}toString(){return`<FetchRequest method=${JSON.stringify(this.method)} url=${JSON.stringify(this.url)} headers=${JSON.stringify(this.headers)} body=${this.#l?hexlify(this.#l):"null"}>`}setThrottleParams(e){null!=e.slotInterval&&(this.#m.slotInterval=e.slotInterval),null!=e.maxAttempts&&(this.#m.maxAttempts=e.maxAttempts)}async#b(e,t,r,n,s){if(e>=this.#m.maxAttempts)return s.makeServerError("exceeded maximum retry limit");assert(getTime$2()<=t,"timeout","TIMEOUT",{operation:"request.send",reason:"timeout",request:n}),r>0&&await wait(r);let i=this.clone();const a=(i.url.split(":")[0]||"").toLowerCase();if(a in Gateways){const e=await Gateways[a](i.url,checkSignal(n.#p));if(e instanceof FetchResponse){let t=e;if(this.processFunc){checkSignal(n.#p);try{t=await this.processFunc(i,t)}catch(e){null!=e.throttle&&"number"==typeof e.stall||t.makeServerError("error in post-processing function",e).assertOk()}}return t}i=e}this.preflightFunc&&(i=await this.preflightFunc(i));const o=await this.getUrlFunc(i,checkSignal(n.#p));let c=new FetchResponse(o.statusCode,o.statusMessage,o.headers,o.body,n);if(301===c.statusCode||302===c.statusCode){try{const r=c.headers.location||"";return i.redirect(r).#b(e+1,t,0,n,c)}catch(e){}return c}if(429===c.statusCode&&(null==this.retryFunc||await this.retryFunc(i,c,e))){const r=c.headers["retry-after"];let s=this.#m.slotInterval*Math.trunc(Math.random()*Math.pow(2,e));return"string"==typeof r&&r.match(/^[1-9][0-9]*$/)&&(s=parseInt(r)),i.clone().#b(e+1,t,s,n,c)}if(this.processFunc){checkSignal(n.#p);try{c=await this.processFunc(i,c)}catch(r){null!=r.throttle&&"number"==typeof r.stall||c.makeServerError("error in post-processing function",r).assertOk();let s=this.#m.slotInterval*Math.trunc(Math.random()*Math.pow(2,e));return r.stall>=0&&(s=r.stall),i.clone().#b(e+1,t,s,n,c)}}return c}send(){return assert(null==this.#p,"request already sent","UNSUPPORTED_OPERATION",{operation:"fetchRequest.send"}),this.#p=new FetchCancelSignal(this),this.#b(0,getTime$2()+this.timeout,0,this,new FetchResponse(0,"",{},null,this))}cancel(){assert(null!=this.#p,"request has not been sent","UNSUPPORTED_OPERATION",{operation:"fetchRequest.cancel"});const e=fetchSignals.get(this);if(!e)throw new Error("missing signal; should not happen");e()}redirect(e){const t=this.url.split(":")[0].toLowerCase(),r=e.split(":")[0].toLowerCase();assert("GET"===this.method&&("https"!==t||"http"!==r)&&e.match(/^https?:/),"unsupported redirect","UNSUPPORTED_OPERATION",{operation:`redirect(${this.method} ${JSON.stringify(this.url)} => ${JSON.stringify(e)})`});const n=new FetchRequest(e);return n.method="GET",n.allowGzip=this.allowGzip,n.timeout=this.timeout,n.#i=Object.assign({},this.#i),this.#l&&(n.#l=new Uint8Array(this.#l)),n.#u=this.#u,n}clone(){const e=new FetchRequest(this.url);return e.#a=this.#a,this.#l&&(e.#l=this.#l),e.#u=this.#u,e.#i=Object.assign({},this.#i),e.#h=this.#h,this.allowGzip&&(e.allowGzip=!0),e.timeout=this.timeout,this.allowInsecureAuthentication&&(e.allowInsecureAuthentication=!0),e.#d=this.#d,e.#f=this.#f,e.#g=this.#g,e.#m=Object.assign({},this.#m),e.#y=this.#y,e}static lockConfig(){locked$5=!0}static getGateway(e){return Gateways[e.toLowerCase()]||null}static registerGateway(e,t){if("http"===(e=e.toLowerCase())||"https"===e)throw new Error(`cannot intercept ${e}; use registerGetUrl`);if(locked$5)throw new Error("gateways locked");Gateways[e]=t}static registerGetUrl(e){if(locked$5)throw new Error("gateways locked");defaultGetUrlFunc=e}static createGetUrlFunc(e){return createGetUrl()}static createDataGateway(){return dataGatewayFunc}static createIpfsGatewayFunc(e){return getIpfsGatewayFunc(e)}}class FetchResponse{#w;#A;#i;#l;#v;#E;toString(){return`<FetchResponse status=${this.statusCode} body=${this.#l?hexlify(this.#l):"null"}>`}get statusCode(){return this.#w}get statusMessage(){return this.#A}get headers(){return Object.assign({},this.#i)}get body(){return null==this.#l?null:new Uint8Array(this.#l)}get bodyText(){try{return null==this.#l?"":toUtf8String(this.#l)}catch(e){assert(!1,"response body is not valid UTF-8 data","UNSUPPORTED_OPERATION",{operation:"bodyText",info:{response:this}})}}get bodyJson(){try{return JSON.parse(this.bodyText)}catch(e){assert(!1,"response body is not valid JSON","UNSUPPORTED_OPERATION",{operation:"bodyJson",info:{response:this}})}}[Symbol.iterator](){const e=this.headers,t=Object.keys(e);let r=0;return{next:()=>{if(r<t.length){const n=t[r++];return{value:[n,e[n]],done:!1}}return{value:void 0,done:!0}}}}constructor(e,t,r,n,s){this.#w=e,this.#A=t,this.#i=Object.keys(r).reduce(((e,t)=>(e[t.toLowerCase()]=String(r[t]),e)),{}),this.#l=null==n?null:new Uint8Array(n),this.#v=s||null,this.#E={message:""}}makeServerError(e,t){let r;r=e?`CLIENT ESCALATED SERVER ERROR (${this.statusCode} ${this.statusMessage}; ${e})`:`CLIENT ESCALATED SERVER ERROR (${e=`${this.statusCode} ${this.statusMessage}`})`;const n=new FetchResponse(599,r,this.headers,this.body,this.#v||void 0);return n.#E={message:e,error:t},n}throwThrottleError(e,t){null==t?t=-1:assertArgument(Number.isInteger(t)&&t>=0,"invalid stall timeout","stall",t);const r=new Error(e||"throttling requests");throw defineProperties(r,{stall:t,throttle:!0}),r}getHeader(e){return this.headers[e.toLowerCase()]}hasBody(){return null!=this.#l}get request(){return this.#v}ok(){return""===this.#E.message&&this.statusCode>=200&&this.statusCode<300}assertOk(){if(this.ok())return;let{message:e,error:t}=this.#E;""===e&&(e=`server response ${this.statusCode} ${this.statusMessage}`);let r=null;this.request&&(r=this.request.url);let n=null;try{this.#l&&(n=toUtf8String(this.#l))}catch(e){}assert(!1,e,"SERVER_ERROR",{request:this.request||"unknown request",response:this,error:t,info:{requestUrl:r,responseBody:n,responseStatus:`${this.statusCode} ${this.statusMessage}`}})}}function getTime$2(){return(new Date).getTime()}function unpercent(e){return toUtf8Bytes(e.replace(/%([0-9a-f][0-9a-f])/gi,((e,t)=>String.fromCharCode(parseInt(t,16)))))}function wait(e){return new Promise((t=>setTimeout(t,e)))}const BN_N1=BigInt(-1),BN_0$8=BigInt(0),BN_1$4=BigInt(1),BN_5=BigInt(5),_guard$5={};let Zeros$1="0000";for(;Zeros$1.length<80;)Zeros$1+=Zeros$1;function getTens(e){let t=Zeros$1;for(;t.length<e;)t+=t;return BigInt("1"+t.substring(0,e))}function checkValue(e,t,r){const n=BigInt(t.width);if(t.signed){const t=BN_1$4<<n-BN_1$4;assert(null==r||e>=-t&&e<t,"overflow","NUMERIC_FAULT",{operation:r,fault:"overflow",value:e}),e=e>BN_0$8?fromTwos(mask(e,n),n):-fromTwos(mask(-e,n),n)}else{const t=BN_1$4<<n;assert(null==r||e>=0&&e<t,"overflow","NUMERIC_FAULT",{operation:r,fault:"overflow",value:e}),e=(e%t+t)%t&t-BN_1$4}return e}function getFormat(e){"number"==typeof e&&(e=`fixed128x${e}`);let t=!0,r=128,n=18;if("string"==typeof e)if("fixed"===e);else if("ufixed"===e)t=!1;else{const s=e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);assertArgument(s,"invalid fixed format","format",e),t="u"!==s[1],r=parseInt(s[2]),n=parseInt(s[3])}else if(e){const s=e,i=(e,t,r)=>null==s[e]?r:(assertArgument(typeof s[e]===t,"invalid fixed format ("+e+" not "+t+")","format."+e,s[e]),s[e]);t=i("signed","boolean",t),r=i("width","number",r),n=i("decimals","number",n)}assertArgument(r%8==0,"invalid FixedNumber width (not byte aligned)","format.width",r),assertArgument(n<=80,"invalid FixedNumber decimals (too large)","format.decimals",n);return{signed:t,width:r,decimals:n,name:(t?"":"u")+"fixed"+String(r)+"x"+String(n)}}function toString(e,t){let r="";e<BN_0$8&&(r="-",e*=BN_N1);let n=e.toString();if(0===t)return r+n;for(;n.length<=t;)n=Zeros$1+n;const s=n.length-t;for(n=n.substring(0,s)+"."+n.substring(s);"0"===n[0]&&"."!==n[1];)n=n.substring(1);for(;"0"===n[n.length-1]&&"."!==n[n.length-2];)n=n.substring(0,n.length-1);return r+n}class FixedNumber{format;#k;#B;#P;_value;constructor(e,t,r){assertPrivate(e,_guard$5,"FixedNumber"),this.#B=t,this.#k=r;const n=toString(t,r.decimals);defineProperties(this,{format:r.name,_value:n}),this.#P=getTens(r.decimals)}get signed(){return this.#k.signed}get width(){return this.#k.width}get decimals(){return this.#k.decimals}get value(){return this.#B}#N(e){assertArgument(this.format===e.format,"incompatible format; use fixedNumber.toFormat","other",e)}#_(e,t){return e=checkValue(e,this.#k,t),new FixedNumber(_guard$5,e,this.#k)}#S(e,t){return this.#N(e),this.#_(this.#B+e.#B,t)}addUnsafe(e){return this.#S(e)}add(e){return this.#S(e,"add")}#x(e,t){return this.#N(e),this.#_(this.#B-e.#B,t)}subUnsafe(e){return this.#x(e)}sub(e){return this.#x(e,"sub")}#T(e,t){return this.#N(e),this.#_(this.#B*e.#B/this.#P,t)}mulUnsafe(e){return this.#T(e)}mul(e){return this.#T(e,"mul")}mulSignal(e){this.#N(e);const t=this.#B*e.#B;return assert(t%this.#P===BN_0$8,"precision lost during signalling mul","NUMERIC_FAULT",{operation:"mulSignal",fault:"underflow",value:this}),this.#_(t/this.#P,"mulSignal")}#C(e,t){return assert(e.#B!==BN_0$8,"division by zero","NUMERIC_FAULT",{operation:"div",fault:"divide-by-zero",value:this}),this.#N(e),this.#_(this.#B*this.#P/e.#B,t)}divUnsafe(e){return this.#C(e)}div(e){return this.#C(e,"div")}divSignal(e){assert(e.#B!==BN_0$8,"division by zero","NUMERIC_FAULT",{operation:"div",fault:"divide-by-zero",value:this}),this.#N(e);const t=this.#B*this.#P;return assert(t%e.#B===BN_0$8,"precision lost during signalling div","NUMERIC_FAULT",{operation:"divSignal",fault:"underflow",value:this}),this.#_(t/e.#B,"divSignal")}cmp(e){let t=this.value,r=e.value;const n=this.decimals-e.decimals;return n>0?r*=getTens(n):n<0&&(t*=getTens(-n)),t<r?-1:t>r?1:0}eq(e){return 0===this.cmp(e)}lt(e){return this.cmp(e)<0}lte(e){return this.cmp(e)<=0}gt(e){return this.cmp(e)>0}gte(e){return this.cmp(e)>=0}floor(){let e=this.#B;return this.#B<BN_0$8&&(e-=this.#P-BN_1$4),e=this.#B/this.#P*this.#P,this.#_(e,"floor")}ceiling(){let e=this.#B;return this.#B>BN_0$8&&(e+=this.#P-BN_1$4),e=this.#B/this.#P*this.#P,this.#_(e,"ceiling")}round(e){if(null==e&&(e=0),e>=this.decimals)return this;const t=this.decimals-e,r=BN_5*getTens(t-1);let n=this.value+r;const s=getTens(t);return n=n/s*s,checkValue(n,this.#k,"round"),new FixedNumber(_guard$5,n,this.#k)}isZero(){return this.#B===BN_0$8}isNegative(){return this.#B<BN_0$8}toString(){return this._value}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(e){return FixedNumber.fromString(this.toString(),e)}static fromValue(e,t,r){const n=null==t?0:getNumber(t),s=getFormat(r);let i=getBigInt(e,"value");const a=n-s.decimals;if(a>0){const t=getTens(a);assert(i%t===BN_0$8,"value loses precision for format","NUMERIC_FAULT",{operation:"fromValue",fault:"underflow",value:e}),i/=t}else a<0&&(i*=getTens(-a));return checkValue(i,s,"fromValue"),new FixedNumber(_guard$5,i,s)}static fromString(e,t){const r=e.match(/^(-?)([0-9]*)\.?([0-9]*)$/);assertArgument(r&&r[2].length+r[3].length>0,"invalid FixedNumber string value","value",e);const n=getFormat(t);let s=r[2]||"0",i=r[3]||"";for(;i.length<n.decimals;)i+=Zeros$1;assert(i.substring(n.decimals).match(/^0*$/),"too many decimals for format","NUMERIC_FAULT",{operation:"fromString",fault:"underflow",value:e}),i=i.substring(0,n.decimals);const a=BigInt(r[1]+s+i);return checkValue(a,n,"fromString"),new FixedNumber(_guard$5,a,n)}static fromBytes(e,t){let r=toBigInt(getBytes(e,"value"));const n=getFormat(t);return n.signed&&(r=fromTwos(r,n.width)),checkValue(r,n,"fromBytes"),new FixedNumber(_guard$5,r,n)}}function hexlifyByte(e){let t=e.toString(16);for(;t.length<2;)t="0"+t;return"0x"+t}function unarrayifyInteger(e,t,r){let n=0;for(let s=0;s<r;s++)n=256*n+e[t+s];return n}function _decodeChildren(e,t,r,n){const s=[];for(;r<t+1+n;){const i=_decode(e,r);s.push(i.result),assert((r+=i.consumed)<=t+1+n,"child data too short","BUFFER_OVERRUN",{buffer:e,length:n,offset:t})}return{consumed:1+n,result:s}}function _decode(e,t){assert(0!==e.length,"data too short","BUFFER_OVERRUN",{buffer:e,length:0,offset:1});const r=t=>{assert(t<=e.length,"data short segment too short","BUFFER_OVERRUN",{buffer:e,length:e.length,offset:t})};if(e[t]>=248){const n=e[t]-247;r(t+1+n);const s=unarrayifyInteger(e,t+1,n);return r(t+1+n+s),_decodeChildren(e,t,t+1+n,n+s)}if(e[t]>=192){const n=e[t]-192;return r(t+1+n),_decodeChildren(e,t,t+1,n)}if(e[t]>=184){const n=e[t]-183;r(t+1+n);const s=unarrayifyInteger(e,t+1,n);r(t+1+n+s);return{consumed:1+n+s,result:hexlify(e.slice(t+1+n,t+1+n+s))}}if(e[t]>=128){const n=e[t]-128;r(t+1+n);return{consumed:1+n,result:hexlify(e.slice(t+1,t+1+n))}}return{consumed:1,result:hexlifyByte(e[t])}}function decodeRlp(e){const t=getBytes(e,"data"),r=_decode(t,0);return assertArgument(r.consumed===t.length,"unexpected junk after rlp payload","data",e),r.result}function arrayifyInteger(e){const t=[];for(;e;)t.unshift(255&e),e>>=8;return t}function _encode(e){if(Array.isArray(e)){let t=[];if(e.forEach((function(e){t=t.concat(_encode(e))})),t.length<=55)return t.unshift(192+t.length),t;const r=arrayifyInteger(t.length);return r.unshift(247+r.length),r.concat(t)}const t=Array.prototype.slice.call(getBytes(e,"object"));if(1===t.length&&t[0]<=127)return t;if(t.length<=55)return t.unshift(128+t.length),t;const r=arrayifyInteger(t.length);return r.unshift(183+r.length),r.concat(t)}const nibbles="0123456789abcdef";function encodeRlp(e){let t="0x";for(const r of _encode(e))t+=nibbles[r>>4],t+=nibbles[15&r];return t}const names=["wei","kwei","mwei","gwei","szabo","finney","ether"];function formatUnits(e,t){let r=18;if("string"==typeof t){const e=names.indexOf(t);assertArgument(e>=0,"invalid unit","unit",t),r=3*e}else null!=t&&(r=getNumber(t,"unit"));return FixedNumber.fromValue(e,r,{decimals:r,width:512}).toString()}function parseUnits$1(e,t){assertArgument("string"==typeof e,"value must be a string","value",e);let r=18;if("string"==typeof t){const e=names.indexOf(t);assertArgument(e>=0,"invalid unit","unit",t),r=3*e}else null!=t&&(r=getNumber(t,"unit"));return FixedNumber.fromString(e,{decimals:r,width:512}).value}function formatEther(e){return formatUnits(e,18)}function parseEther(e){return parseUnits$1(e,18)}function uuidV4(e){const t=getBytes(e,"randomBytes");t[6]=15&t[6]|64,t[8]=63&t[8]|128;const r=hexlify(t);return[r.substring(2,10),r.substring(10,14),r.substring(14,18),r.substring(18,22),r.substring(22,34)].join("-")}const WordSize=32,Padding=new Uint8Array(32),passProperties$1=["then"],_guard$4={},resultNames=new WeakMap;function getNames(e){return resultNames.get(e)}function setNames(e,t){resultNames.set(e,t)}function throwError(e,t){const r=new Error(`deferred error during ABI decoding triggered accessing ${e}`);throw r.error=t,r}function toObject(e,t,r){return e.indexOf(null)>=0?t.map(((e,t)=>e instanceof Result?toObject(getNames(e),e,r):e)):e.reduce(((e,n,s)=>{let i=t.getValue(n);return n in e||(r&&i instanceof Result&&(i=toObject(getNames(i),i,r)),e[n]=i),e}),{})}class Result extends Array{#I;constructor(...e){const t=e[0];let r=e[1],n=(e[2]||[]).slice(),s=!0;t!==_guard$4&&(r=e,n=[],s=!1),super(r.length),r.forEach(((e,t)=>{this[t]=e}));const i=n.reduce(((e,t)=>("string"==typeof t&&e.set(t,(e.get(t)||0)+1),e)),new Map);if(setNames(this,Object.freeze(r.map(((e,t)=>{const r=n[t];return null!=r&&1===i.get(r)?r:null})))),this.#I=[],null==this.#I&&this.#I,!s)return;Object.freeze(this);const a=new Proxy(this,{get:(e,t,r)=>{if("string"==typeof t){if(t.match(/^[0-9]+$/)){const r=getNumber(t,"%index");if(r<0||r>=this.length)throw new RangeError("out of result range");const n=e[r];return n instanceof Error&&throwError(`index ${r}`,n),n}if(passProperties$1.indexOf(t)>=0)return Reflect.get(e,t,r);const n=e[t];if(n instanceof Function)return function(...t){return n.apply(this===r?e:this,t)};if(!(t in e))return e.getValue.apply(this===r?e:this,[t])}return Reflect.get(e,t,r)}});return setNames(a,getNames(this)),a}toArray(e){const t=[];return this.forEach(((r,n)=>{r instanceof Error&&throwError(`index ${n}`,r),e&&r instanceof Result&&(r=r.toArray(e)),t.push(r)})),t}toObject(e){const t=getNames(this);return t.reduce(((r,n,s)=>(assert(null!=n,`value at index ${s} unnamed`,"UNSUPPORTED_OPERATION",{operation:"toObject()"}),toObject(t,this,e))),{})}slice(e,t){null==e&&(e=0),e<0&&(e+=this.length)<0&&(e=0),null==t&&(t=this.length),t<0&&(t+=this.length)<0&&(t=0),t>this.length&&(t=this.length);const r=getNames(this),n=[],s=[];for(let i=e;i<t;i++)n.push(this[i]),s.push(r[i]);return new Result(_guard$4,n,s)}filter(e,t){const r=getNames(this),n=[],s=[];for(let i=0;i<this.length;i++){const a=this[i];a instanceof Error&&throwError(`index ${i}`,a),e.call(t,a,i,this)&&(n.push(a),s.push(r[i]))}return new Result(_guard$4,n,s)}map(e,t){const r=[];for(let n=0;n<this.length;n++){const s=this[n];s instanceof Error&&throwError(`index ${n}`,s),r.push(e.call(t,s,n,this))}return r}getValue(e){const t=getNames(this).indexOf(e);if(-1===t)return;const r=this[t];return r instanceof Error&&throwError(`property ${JSON.stringify(e)}`,r.error),r}static fromItems(e,t){return new Result(_guard$4,e,t)}}function checkResultErrors(e){const t=[],r=function(e,n){if(Array.isArray(n))for(let s in n){const i=e.slice();i.push(s);try{r(i,n[s])}catch(e){t.push({path:i,error:e})}}};return r([],e),t}function getValue$1(e){let t=toBeArray(e);return assert(t.length<=32,"value out-of-bounds","BUFFER_OVERRUN",{buffer:t,length:32,offset:t.length}),32!==t.length&&(t=getBytesCopy(concat([Padding.slice(t.length%32),t]))),t}class Coder{name;type;localName;dynamic;constructor(e,t,r,n){defineProperties(this,{name:e,type:t,localName:r,dynamic:n},{name:"string",type:"string",localName:"string",dynamic:"boolean"})}_throwError(e,t){assertArgument(!1,e,this.localName,t)}}class Writer{#R;#F;constructor(){this.#R=[],this.#F=0}get data(){return concat(this.#R)}get length(){return this.#F}#O(e){return this.#R.push(e),this.#F+=e.length,e.length}appendWriter(e){return this.#O(getBytesCopy(e.data))}writeBytes(e){let t=getBytesCopy(e);const r=t.length%32;return r&&(t=getBytesCopy(concat([t,Padding.slice(r)]))),this.#O(t)}writeValue(e){return this.#O(getValue$1(e))}writeUpdatableValue(){const e=this.#R.length;return this.#R.push(Padding),this.#F+=32,t=>{this.#R[e]=getValue$1(t)}}}class Reader{allowLoose;#R;#U;#L;#D;#M;constructor(e,t,r){defineProperties(this,{allowLoose:!!t}),this.#R=getBytesCopy(e),this.#L=0,this.#D=null,this.#M=null!=r?r:1024,this.#U=0}get data(){return hexlify(this.#R)}get dataLength(){return this.#R.length}get consumed(){return this.#U}get bytes(){return new Uint8Array(this.#R)}#H(e){if(this.#D)return this.#D.#H(e);this.#L+=e,assert(this.#M<1||this.#L<=this.#M*this.dataLength,`compressed ABI data exceeds inflation ratio of ${this.#M} ( see: https://github.com/ethers-io/ethers.js/issues/4537 )`,"BUFFER_OVERRUN",{buffer:getBytesCopy(this.#R),offset:this.#U,length:e,info:{bytesRead:this.#L,dataLength:this.dataLength}})}#G(e,t,r){let n=32*Math.ceil(t/32);return this.#U+n>this.#R.length&&(this.allowLoose&&r&&this.#U+t<=this.#R.length?n=t:assert(!1,"data out-of-bounds","BUFFER_OVERRUN",{buffer:getBytesCopy(this.#R),length:this.#R.length,offset:this.#U+n})),this.#R.slice(this.#U,this.#U+n)}subReader(e){const t=new Reader(this.#R.slice(this.#U+e),this.allowLoose,this.#M);return t.#D=this,t}readBytes(e,t){let r=this.#G(0,e,!!t);return this.#H(e),this.#U+=r.length,r.slice(0,e)}readValue(){return toBigInt(this.readBytes(32))}readIndex(){return toNumber(this.readBytes(32))}}function number(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}function bytes(e,...t){if(!(e instanceof Uint8Array))throw new Error("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw new Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}function hash(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");number(e.outputLen),number(e.blockLen)}function exists(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function output(e,t){bytes(e);const r=t.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}const crypto$1="object"==typeof globalThis&&"crypto"in globalThis?globalThis.crypto:void 0,u8a$1=e=>e instanceof Uint8Array,u32=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)),createView=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),rotr=(e,t)=>e<<32-t|e>>>t,isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0];if(!isLE)throw new Error("Non little-endian hardware is not supported");const nextTick=async()=>{};async function asyncLoop(e,t,r){let n=Date.now();for(let s=0;s<e;s++){r(s);const e=Date.now()-n;e>=0&&e<t||(await nextTick(),n+=e)}}function utf8ToBytes$1(e){if("string"!=typeof e)throw new Error("utf8ToBytes expected string, got "+typeof e);return new Uint8Array((new TextEncoder).encode(e))}function toBytes(e){if("string"==typeof e&&(e=utf8ToBytes$1(e)),!u8a$1(e))throw new Error("expected Uint8Array, got "+typeof e);return e}function concatBytes$1(...e){const t=new Uint8Array(e.reduce(((e,t)=>e+t.length),0));let r=0;return e.forEach((e=>{if(!u8a$1(e))throw new Error("Uint8Array expected");t.set(e,r),r+=e.length})),t}class Hash{clone(){return this._cloneInto()}}const toStr={}.toString;function checkOpts(e,t){if(void 0!==t&&"[object Object]"!==toStr.call(t))throw new Error("Options should be object or undefined");return Object.assign(e,t)}function wrapConstructor(e){const t=t=>e().update(toBytes(t)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t}function randomBytes$2(e=32){if(crypto$1&&"function"==typeof crypto$1.getRandomValues)return crypto$1.getRandomValues(new Uint8Array(e));throw new Error("crypto.getRandomValues must be defined")}class HMAC extends Hash{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,hash(e);const r=toBytes(t);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const n=this.blockLen,s=new Uint8Array(n);s.set(r.length>n?e.create().update(r).digest():r);for(let e=0;e<s.length;e++)s[e]^=54;this.iHash.update(s),this.oHash=e.create();for(let e=0;e<s.length;e++)s[e]^=106;this.oHash.update(s),s.fill(0)}update(e){return exists(this),this.iHash.update(e),this}digestInto(e){exists(this),bytes(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:r,finished:n,destroyed:s,blockLen:i,outputLen:a}=this;return e.finished=n,e.destroyed=s,e.blockLen=i,e.outputLen=a,e.oHash=t._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const hmac=(e,t,r)=>new HMAC(e,t).update(r).digest();function pbkdf2Init(e,t,r,n){hash(e);const s=checkOpts({dkLen:32,asyncTick:10},n),{c:i,dkLen:a,asyncTick:o}=s;if(number(i),number(a),number(o),i<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const c=toBytes(t),l=toBytes(r),u=new Uint8Array(a),h=hmac.create(e,c),d=h._cloneInto().update(l);return{c:i,dkLen:a,asyncTick:o,DK:u,PRF:h,PRFSalt:d}}function pbkdf2Output(e,t,r,n,s){return e.destroy(),t.destroy(),n&&n.destroy(),s.fill(0),r}function pbkdf2$1(e,t,r,n){const{c:s,dkLen:i,DK:a,PRF:o,PRFSalt:c}=pbkdf2Init(e,t,r,n);let l;const u=new Uint8Array(4),h=createView(u),d=new Uint8Array(o.outputLen);for(let e=1,t=0;t<i;e++,t+=o.outputLen){const r=a.subarray(t,t+o.outputLen);h.setInt32(0,e,!1),(l=c._cloneInto(l)).update(u).digestInto(d),r.set(d.subarray(0,r.length));for(let e=1;e<s;e++){o._cloneInto(l).update(d).digestInto(d);for(let e=0;e<r.length;e++)r[e]^=d[e]}}return pbkdf2Output(o,c,a,l,d)}function setBigUint64(e,t,r,n){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,r,n);const s=BigInt(32),i=BigInt(4294967295),a=Number(r>>s&i),o=Number(r&i),c=n?4:0,l=n?0:4;e.setUint32(t+c,a,n),e.setUint32(t+l,o,n)}hmac.create=(e,t)=>new HMAC(e,t);class SHA2 extends Hash{constructor(e,t,r,n){super(),this.blockLen=e,this.outputLen=t,this.padOffset=r,this.isLE=n,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=createView(this.buffer)}update(e){exists(this);const{view:t,buffer:r,blockLen:n}=this,s=(e=toBytes(e)).length;for(let i=0;i<s;){const a=Math.min(n-this.pos,s-i);if(a!==n)r.set(e.subarray(i,i+a),this.pos),this.pos+=a,i+=a,this.pos===n&&(this.process(t,0),this.pos=0);else{const t=createView(e);for(;n<=s-i;i+=n)this.process(t,i)}}return this.length+=e.length,this.roundClean(),this}digestInto(e){exists(this),output(e,this),this.finished=!0;const{buffer:t,view:r,blockLen:n,isLE:s}=this;let{pos:i}=this;t[i++]=128,this.buffer.subarray(i).fill(0),this.padOffset>n-i&&(this.process(r,0),i=0);for(let e=i;e<n;e++)t[e]=0;setBigUint64(r,n-8,BigInt(8*this.length),s),this.process(r,0);const a=createView(e),o=this.outputLen;if(o%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const c=o/4,l=this.get();if(c>l.length)throw new Error("_sha2: outputLen bigger than state");for(let e=0;e<c;e++)a.setUint32(4*e,l[e],s)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:r,length:n,finished:s,destroyed:i,pos:a}=this;return e.length=n,e.pos=a,e.finished=s,e.destroyed=i,n%t&&e.buffer.set(r),e}}const Chi=(e,t,r)=>e&t^~e&r,Maj=(e,t,r)=>e&t^e&r^t&r,SHA256_K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),IV=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),SHA256_W=new Uint32Array(64);class SHA256 extends SHA2{constructor(){super(64,32,8,!1),this.A=0|IV[0],this.B=0|IV[1],this.C=0|IV[2],this.D=0|IV[3],this.E=0|IV[4],this.F=0|IV[5],this.G=0|IV[6],this.H=0|IV[7]}get(){const{A:e,B:t,C:r,D:n,E:s,F:i,G:a,H:o}=this;return[e,t,r,n,s,i,a,o]}set(e,t,r,n,s,i,a,o){this.A=0|e,this.B=0|t,this.C=0|r,this.D=0|n,this.E=0|s,this.F=0|i,this.G=0|a,this.H=0|o}process(e,t){for(let r=0;r<16;r++,t+=4)SHA256_W[r]=e.getUint32(t,!1);for(let e=16;e<64;e++){const t=SHA256_W[e-15],r=SHA256_W[e-2],n=rotr(t,7)^rotr(t,18)^t>>>3,s=rotr(r,17)^rotr(r,19)^r>>>10;SHA256_W[e]=s+SHA256_W[e-7]+n+SHA256_W[e-16]|0}let{A:r,B:n,C:s,D:i,E:a,F:o,G:c,H:l}=this;for(let e=0;e<64;e++){const t=l+(rotr(a,6)^rotr(a,11)^rotr(a,25))+Chi(a,o,c)+SHA256_K[e]+SHA256_W[e]|0,u=(rotr(r,2)^rotr(r,13)^rotr(r,22))+Maj(r,n,s)|0;l=c,c=o,o=a,a=i+t|0,i=s,s=n,n=r,r=t+u|0}r=r+this.A|0,n=n+this.B|0,s=s+this.C|0,i=i+this.D|0,a=a+this.E|0,o=o+this.F|0,c=c+this.G|0,l=l+this.H|0,this.set(r,n,s,i,a,o,c,l)}roundClean(){SHA256_W.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const sha256$1=wrapConstructor((()=>new SHA256)),U32_MASK64=BigInt(2**32-1),_32n=BigInt(32);function fromBig(e,t=!1){return t?{h:Number(e&U32_MASK64),l:Number(e>>_32n&U32_MASK64)}:{h:0|Number(e>>_32n&U32_MASK64),l:0|Number(e&U32_MASK64)}}function split$1(e,t=!1){let r=new Uint32Array(e.length),n=new Uint32Array(e.length);for(let s=0;s<e.length;s++){const{h:i,l:a}=fromBig(e[s],t);[r[s],n[s]]=[i,a]}return[r,n]}const toBig=(e,t)=>BigInt(e>>>0)<<_32n|BigInt(t>>>0),shrSH=(e,t,r)=>e>>>r,shrSL=(e,t,r)=>e<<32-r|t>>>r,rotrSH=(e,t,r)=>e>>>r|t<<32-r,rotrSL=(e,t,r)=>e<<32-r|t>>>r,rotrBH=(e,t,r)=>e<<64-r|t>>>r-32,rotrBL=(e,t,r)=>e>>>r-32|t<<64-r,rotr32H=(e,t)=>t,rotr32L=(e,t)=>e,rotlSH=(e,t,r)=>e<<r|t>>>32-r,rotlSL=(e,t,r)=>t<<r|e>>>32-r,rotlBH=(e,t,r)=>t<<r-32|e>>>64-r,rotlBL=(e,t,r)=>e<<r-32|t>>>64-r;function add(e,t,r,n){const s=(t>>>0)+(n>>>0);return{h:e+r+(s/2**32|0)|0,l:0|s}}const add3L=(e,t,r)=>(e>>>0)+(t>>>0)+(r>>>0),add3H=(e,t,r,n)=>t+r+n+(e/2**32|0)|0,add4L=(e,t,r,n)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0),add4H=(e,t,r,n,s)=>t+r+n+s+(e/2**32|0)|0,add5L=(e,t,r,n,s)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0)+(s>>>0),add5H=(e,t,r,n,s,i)=>t+r+n+s+i+(e/2**32|0)|0,u64={fromBig:fromBig,split:split$1,toBig:toBig,shrSH:shrSH,shrSL:shrSL,rotrSH:rotrSH,rotrSL:rotrSL,rotrBH:rotrBH,rotrBL:rotrBL,rotr32H:rotr32H,rotr32L:rotr32L,rotlSH:rotlSH,rotlSL:rotlSL,rotlBH:rotlBH,rotlBL:rotlBL,add:add,add3L:add3L,add3H:add3H,add4L:add4L,add4H:add4H,add5H:add5H,add5L:add5L};var u64$1=u64;const[SHA512_Kh,SHA512_Kl]=u64$1.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map((e=>BigInt(e)))),SHA512_W_H=new Uint32Array(80),SHA512_W_L=new Uint32Array(80);class SHA512 extends SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:t,Bh:r,Bl:n,Ch:s,Cl:i,Dh:a,Dl:o,Eh:c,El:l,Fh:u,Fl:h,Gh:d,Gl:f,Hh:g,Hl:p}=this;return[e,t,r,n,s,i,a,o,c,l,u,h,d,f,g,p]}set(e,t,r,n,s,i,a,o,c,l,u,h,d,f,g,p){this.Ah=0|e,this.Al=0|t,this.Bh=0|r,this.Bl=0|n,this.Ch=0|s,this.Cl=0|i,this.Dh=0|a,this.Dl=0|o,this.Eh=0|c,this.El=0|l,this.Fh=0|u,this.Fl=0|h,this.Gh=0|d,this.Gl=0|f,this.Hh=0|g,this.Hl=0|p}process(e,t){for(let r=0;r<16;r++,t+=4)SHA512_W_H[r]=e.getUint32(t),SHA512_W_L[r]=e.getUint32(t+=4);for(let e=16;e<80;e++){const t=0|SHA512_W_H[e-15],r=0|SHA512_W_L[e-15],n=u64$1.rotrSH(t,r,1)^u64$1.rotrSH(t,r,8)^u64$1.shrSH(t,r,7),s=u64$1.rotrSL(t,r,1)^u64$1.rotrSL(t,r,8)^u64$1.shrSL(t,r,7),i=0|SHA512_W_H[e-2],a=0|SHA512_W_L[e-2],o=u64$1.rotrSH(i,a,19)^u64$1.rotrBH(i,a,61)^u64$1.shrSH(i,a,6),c=u64$1.rotrSL(i,a,19)^u64$1.rotrBL(i,a,61)^u64$1.shrSL(i,a,6),l=u64$1.add4L(s,c,SHA512_W_L[e-7],SHA512_W_L[e-16]),u=u64$1.add4H(l,n,o,SHA512_W_H[e-7],SHA512_W_H[e-16]);SHA512_W_H[e]=0|u,SHA512_W_L[e]=0|l}let{Ah:r,Al:n,Bh:s,Bl:i,Ch:a,Cl:o,Dh:c,Dl:l,Eh:u,El:h,Fh:d,Fl:f,Gh:g,Gl:p,Hh:m,Hl:y}=this;for(let e=0;e<80;e++){const t=u64$1.rotrSH(u,h,14)^u64$1.rotrSH(u,h,18)^u64$1.rotrBH(u,h,41),b=u64$1.rotrSL(u,h,14)^u64$1.rotrSL(u,h,18)^u64$1.rotrBL(u,h,41),w=u&d^~u&g,A=h&f^~h&p,v=u64$1.add5L(y,b,A,SHA512_Kl[e],SHA512_W_L[e]),E=u64$1.add5H(v,m,t,w,SHA512_Kh[e],SHA512_W_H[e]),k=0|v,B=u64$1.rotrSH(r,n,28)^u64$1.rotrBH(r,n,34)^u64$1.rotrBH(r,n,39),P=u64$1.rotrSL(r,n,28)^u64$1.rotrBL(r,n,34)^u64$1.rotrBL(r,n,39),N=r&s^r&a^s&a,_=n&i^n&o^i&o;m=0|g,y=0|p,g=0|d,p=0|f,d=0|u,f=0|h,({h:u,l:h}=u64$1.add(0|c,0|l,0|E,0|k)),c=0|a,l=0|o,a=0|s,o=0|i,s=0|r,i=0|n;const S=u64$1.add3L(k,P,_);r=u64$1.add3H(S,E,B,N),n=0|S}({h:r,l:n}=u64$1.add(0|this.Ah,0|this.Al,0|r,0|n)),({h:s,l:i}=u64$1.add(0|this.Bh,0|this.Bl,0|s,0|i)),({h:a,l:o}=u64$1.add(0|this.Ch,0|this.Cl,0|a,0|o)),({h:c,l:l}=u64$1.add(0|this.Dh,0|this.Dl,0|c,0|l)),({h:u,l:h}=u64$1.add(0|this.Eh,0|this.El,0|u,0|h)),({h:d,l:f}=u64$1.add(0|this.Fh,0|this.Fl,0|d,0|f)),({h:g,l:p}=u64$1.add(0|this.Gh,0|this.Gl,0|g,0|p)),({h:m,l:y}=u64$1.add(0|this.Hh,0|this.Hl,0|m,0|y)),this.set(r,n,s,i,a,o,c,l,u,h,d,f,g,p,m,y)}roundClean(){SHA512_W_H.fill(0),SHA512_W_L.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const sha512$1=wrapConstructor((()=>new SHA512));function getGlobal$1(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if("undefined"!=typeof global)return global;throw new Error("unable to locate global object")}const anyGlobal=getGlobal$1(),crypto=anyGlobal.crypto||anyGlobal.msCrypto;function createHash(e){switch(e){case"sha256":return sha256$1.create();case"sha512":return sha512$1.create()}assertArgument(!1,"invalid hashing algorithm name","algorithm",e)}function createHmac(e,t){const r={sha256:sha256$1,sha512:sha512$1}[e];return assertArgument(null!=r,"invalid hmac algorithm","algorithm",e),hmac.create(r,t)}function pbkdf2Sync(e,t,r,n,s){const i={sha256:sha256$1,sha512:sha512$1}[s];return assertArgument(null!=i,"invalid pbkdf2 algorithm","algorithm",s),pbkdf2$1(i,e,t,{c:r,dkLen:n})}function randomBytes$1(e){assert(null!=crypto,"platform does not support secure random numbers","UNSUPPORTED_OPERATION",{operation:"randomBytes"}),assertArgument(Number.isInteger(e)&&e>0&&e<=1024,"invalid length","length",e);const t=new Uint8Array(e);return crypto.getRandomValues(t),t}let locked$4=!1;const _computeHmac=function(e,t,r){return createHmac(e,t).update(r).digest()};let __computeHmac=_computeHmac;function computeHmac(e,t,r){const n=getBytes(t,"key"),s=getBytes(r,"data");return hexlify(__computeHmac(e,n,s))}computeHmac._=_computeHmac,computeHmac.lock=function(){locked$4=!0},computeHmac.register=function(e){if(locked$4)throw new Error("computeHmac is locked");__computeHmac=e},Object.freeze(computeHmac);const[SHA3_PI,SHA3_ROTL,_SHA3_IOTA]=[[],[],[]],_0n$4=BigInt(0),_1n$5=BigInt(1),_2n$3=BigInt(2),_7n=BigInt(7),_256n=BigInt(256),_0x71n=BigInt(113);for(let e=0,t=_1n$5,r=1,n=0;e<24;e++){[r,n]=[n,(2*r+3*n)%5],SHA3_PI.push(2*(5*n+r)),SHA3_ROTL.push((e+1)*(e+2)/2%64);let s=_0n$4;for(let e=0;e<7;e++)t=(t<<_1n$5^(t>>_7n)*_0x71n)%_256n,t&_2n$3&&(s^=_1n$5<<(_1n$5<<BigInt(e))-_1n$5);_SHA3_IOTA.push(s)}const[SHA3_IOTA_H,SHA3_IOTA_L]=split$1(_SHA3_IOTA,!0),rotlH=(e,t,r)=>r>32?rotlBH(e,t,r):rotlSH(e,t,r),rotlL=(e,t,r)=>r>32?rotlBL(e,t,r):rotlSL(e,t,r);function keccakP(e,t=24){const r=new Uint32Array(10);for(let n=24-t;n<24;n++){for(let t=0;t<10;t++)r[t]=e[t]^e[t+10]^e[t+20]^e[t+30]^e[t+40];for(let t=0;t<10;t+=2){const n=(t+8)%10,s=(t+2)%10,i=r[s],a=r[s+1],o=rotlH(i,a,1)^r[n],c=rotlL(i,a,1)^r[n+1];for(let r=0;r<50;r+=10)e[t+r]^=o,e[t+r+1]^=c}let t=e[2],s=e[3];for(let r=0;r<24;r++){const n=SHA3_ROTL[r],i=rotlH(t,s,n),a=rotlL(t,s,n),o=SHA3_PI[r];t=e[o],s=e[o+1],e[o]=i,e[o+1]=a}for(let t=0;t<50;t+=10){for(let n=0;n<10;n++)r[n]=e[t+n];for(let n=0;n<10;n++)e[t+n]^=~r[(n+2)%10]&r[(n+4)%10]}e[0]^=SHA3_IOTA_H[n],e[1]^=SHA3_IOTA_L[n]}r.fill(0)}class Keccak extends Hash{constructor(e,t,r,n=!1,s=24){if(super(),this.blockLen=e,this.suffix=t,this.outputLen=r,this.enableXOF=n,this.rounds=s,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,number(r),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=u32(this.state)}keccak(){keccakP(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){exists(this);const{blockLen:t,state:r}=this,n=(e=toBytes(e)).length;for(let s=0;s<n;){const i=Math.min(t-this.pos,n-s);for(let t=0;t<i;t++)r[this.pos++]^=e[s++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:t,pos:r,blockLen:n}=this;e[r]^=t,0!=(128&t)&&r===n-1&&this.keccak(),e[n-1]^=128,this.keccak()}writeInto(e){exists(this,!1),bytes(e),this.finish();const t=this.state,{blockLen:r}=this;for(let n=0,s=e.length;n<s;){this.posOut>=r&&this.keccak();const i=Math.min(r-this.posOut,s-n);e.set(t.subarray(this.posOut,this.posOut+i),n),this.posOut+=i,n+=i}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return number(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(output(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:t,suffix:r,outputLen:n,rounds:s,enableXOF:i}=this;return e||(e=new Keccak(t,r,n,i,s)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=s,e.suffix=r,e.outputLen=n,e.enableXOF=i,e.destroyed=this.destroyed,e}}const gen=(e,t,r)=>wrapConstructor((()=>new Keccak(t,e,r))),keccak_256=gen(1,136,32);let locked$3=!1;const _keccak256=function(e){return keccak_256(e)};let __keccak256=_keccak256;function keccak256(e){const t=getBytes(e,"data");return hexlify(__keccak256(t))}keccak256._=_keccak256,keccak256.lock=function(){locked$3=!0},keccak256.register=function(e){if(locked$3)throw new TypeError("keccak256 is locked");__keccak256=e},Object.freeze(keccak256);const Rho=new Uint8Array([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),Id=Uint8Array.from({length:16},((e,t)=>t)),Pi=Id.map((e=>(9*e+5)%16));let idxL=[Id],idxR=[Pi];for(let e=0;e<4;e++)for(let t of[idxL,idxR])t.push(t[e].map((e=>Rho[e])));const shifts=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map((e=>new Uint8Array(e))),shiftsL=idxL.map(((e,t)=>e.map((e=>shifts[t][e])))),shiftsR=idxR.map(((e,t)=>e.map((e=>shifts[t][e])))),Kl=new Uint32Array([0,1518500249,1859775393,2400959708,2840853838]),Kr=new Uint32Array([1352829926,1548603684,1836072691,2053994217,0]),rotl$1=(e,t)=>e<<t|e>>>32-t;function f(e,t,r,n){return 0===e?t^r^n:1===e?t&r|~t&n:2===e?(t|~r)^n:3===e?t&n|r&~n:t^(r|~n)}const BUF=new Uint32Array(16);class RIPEMD160 extends SHA2{constructor(){super(64,20,8,!0),this.h0=1732584193,this.h1=-271733879,this.h2=-1732584194,this.h3=271733878,this.h4=-1009589776}get(){const{h0:e,h1:t,h2:r,h3:n,h4:s}=this;return[e,t,r,n,s]}set(e,t,r,n,s){this.h0=0|e,this.h1=0|t,this.h2=0|r,this.h3=0|n,this.h4=0|s}process(e,t){for(let r=0;r<16;r++,t+=4)BUF[r]=e.getUint32(t,!0);let r=0|this.h0,n=r,s=0|this.h1,i=s,a=0|this.h2,o=a,c=0|this.h3,l=c,u=0|this.h4,h=u;for(let e=0;e<5;e++){const t=4-e,d=Kl[e],g=Kr[e],p=idxL[e],m=idxR[e],y=shiftsL[e],b=shiftsR[e];for(let t=0;t<16;t++){const n=rotl$1(r+f(e,s,a,c)+BUF[p[t]]+d,y[t])+u|0;r=u,u=c,c=0|rotl$1(a,10),a=s,s=n}for(let e=0;e<16;e++){const r=rotl$1(n+f(t,i,o,l)+BUF[m[e]]+g,b[e])+h|0;n=h,h=l,l=0|rotl$1(o,10),o=i,i=r}}this.set(this.h1+a+l|0,this.h2+c+h|0,this.h3+u+n|0,this.h4+r+i|0,this.h0+s+o|0)}roundClean(){BUF.fill(0)}destroy(){this.destroyed=!0,this.buffer.fill(0),this.set(0,0,0,0,0)}}const ripemd160$1=wrapConstructor((()=>new RIPEMD160));let locked$2=!1;const _ripemd160=function(e){return ripemd160$1(e)};let __ripemd160=_ripemd160;function ripemd160(e){const t=getBytes(e,"data");return hexlify(__ripemd160(t))}ripemd160._=_ripemd160,ripemd160.lock=function(){locked$2=!0},ripemd160.register=function(e){if(locked$2)throw new TypeError("ripemd160 is locked");__ripemd160=e},Object.freeze(ripemd160);let locked$1=!1;const _pbkdf2=function(e,t,r,n,s){return pbkdf2Sync(e,t,r,n,s)};let __pbkdf2=_pbkdf2;function pbkdf2(e,t,r,n,s){const i=getBytes(e,"password"),a=getBytes(t,"salt");return hexlify(__pbkdf2(i,a,r,n,s))}pbkdf2._=_pbkdf2,pbkdf2.lock=function(){locked$1=!0},pbkdf2.register=function(e){if(locked$1)throw new Error("pbkdf2 is locked");__pbkdf2=e},Object.freeze(pbkdf2);let locked=!1;const _randomBytes=function(e){return new Uint8Array(randomBytes$1(e))};let __randomBytes=_randomBytes;function randomBytes(e){return __randomBytes(e)}randomBytes._=_randomBytes,randomBytes.lock=function(){locked=!0},randomBytes.register=function(e){if(locked)throw new Error("randomBytes is locked");__randomBytes=e},Object.freeze(randomBytes);const rotl=(e,t)=>e<<t|e>>>32-t;function XorAndSalsa(e,t,r,n,s,i){let a=e[t++]^r[n++],o=e[t++]^r[n++],c=e[t++]^r[n++],l=e[t++]^r[n++],u=e[t++]^r[n++],h=e[t++]^r[n++],d=e[t++]^r[n++],f=e[t++]^r[n++],g=e[t++]^r[n++],p=e[t++]^r[n++],m=e[t++]^r[n++],y=e[t++]^r[n++],b=e[t++]^r[n++],w=e[t++]^r[n++],A=e[t++]^r[n++],v=e[t++]^r[n++],E=a,k=o,B=c,P=l,N=u,_=h,S=d,x=f,T=g,C=p,I=m,R=y,F=b,O=w,U=A,L=v;for(let e=0;e<8;e+=2)N^=rotl(E+F|0,7),T^=rotl(N+E|0,9),F^=rotl(T+N|0,13),E^=rotl(F+T|0,18),C^=rotl(_+k|0,7),O^=rotl(C+_|0,9),k^=rotl(O+C|0,13),_^=rotl(k+O|0,18),U^=rotl(I+S|0,7),B^=rotl(U+I|0,9),S^=rotl(B+U|0,13),I^=rotl(S+B|0,18),P^=rotl(L+R|0,7),x^=rotl(P+L|0,9),R^=rotl(x+P|0,13),L^=rotl(R+x|0,18),k^=rotl(E+P|0,7),B^=rotl(k+E|0,9),P^=rotl(B+k|0,13),E^=rotl(P+B|0,18),S^=rotl(_+N|0,7),x^=rotl(S+_|0,9),N^=rotl(x+S|0,13),_^=rotl(N+x|0,18),R^=rotl(I+C|0,7),T^=rotl(R+I|0,9),C^=rotl(T+R|0,13),I^=rotl(C+T|0,18),F^=rotl(L+U|0,7),O^=rotl(F+L|0,9),U^=rotl(O+F|0,13),L^=rotl(U+O|0,18);s[i++]=a+E|0,s[i++]=o+k|0,s[i++]=c+B|0,s[i++]=l+P|0,s[i++]=u+N|0,s[i++]=h+_|0,s[i++]=d+S|0,s[i++]=f+x|0,s[i++]=g+T|0,s[i++]=p+C|0,s[i++]=m+I|0,s[i++]=y+R|0,s[i++]=b+F|0,s[i++]=w+O|0,s[i++]=A+U|0,s[i++]=v+L|0}function BlockMix(e,t,r,n,s){let i=n+0,a=n+16*s;for(let n=0;n<16;n++)r[a+n]=e[t+16*(2*s-1)+n];for(let n=0;n<s;n++,i+=16,t+=16)XorAndSalsa(r,a,e,t,r,i),n>0&&(a+=16),XorAndSalsa(r,i,e,t+=16,r,a)}function scryptInit(e,t,r){const n=checkOpts({dkLen:32,asyncTick:10,maxmem:1073742848},r),{N:s,r:i,p:a,dkLen:o,asyncTick:c,maxmem:l,onProgress:u}=n;if(number(s),number(i),number(a),number(o),number(c),number(l),void 0!==u&&"function"!=typeof u)throw new Error("progressCb should be function");const h=128*i,d=h/4;if(s<=1||0!=(s&s-1)||s>=2**(h/8)||s>2**32)throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(a<0||a>137438953440/h)throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(o<0||o>137438953440)throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");const f=h*(s+a);if(f>l)throw new Error(`Scrypt: parameters too large, ${f} (128 * r * (N + p)) > ${l} (maxmem)`);const g=pbkdf2$1(sha256$1,e,t,{c:1,dkLen:h*a}),p=u32(g),m=u32(new Uint8Array(h*s)),y=u32(new Uint8Array(h));let b=()=>{};if(u){const e=2*s*a,t=Math.max(Math.floor(e/1e4),1);let r=0;b=()=>{r++,!u||r%t&&r!==e||u(r/e)}}return{N:s,r:i,p:a,dkLen:o,blockSize32:d,V:m,B32:p,B:g,tmp:y,blockMixCb:b,asyncTick:c}}function scryptOutput(e,t,r,n,s){const i=pbkdf2$1(sha256$1,e,r,{c:1,dkLen:t});return r.fill(0),n.fill(0),s.fill(0),i}function scrypt$1(e,t,r){const{N:n,r:s,p:i,dkLen:a,blockSize32:o,V:c,B32:l,B:u,tmp:h,blockMixCb:d}=scryptInit(e,t,r);for(let e=0;e<i;e++){const t=o*e;for(let e=0;e<o;e++)c[e]=l[t+e];for(let e=0,t=0;e<n-1;e++)BlockMix(c,t,c,t+=o,s),d();BlockMix(c,(n-1)*o,l,t,s),d();for(let e=0;e<n;e++){const e=l[t+o-16]%n;for(let r=0;r<o;r++)h[r]=l[t+r]^c[e*o+r];BlockMix(h,0,l,t,s),d()}}return scryptOutput(e,a,u,c,h)}async function scryptAsync(e,t,r){const{N:n,r:s,p:i,dkLen:a,blockSize32:o,V:c,B32:l,B:u,tmp:h,blockMixCb:d,asyncTick:f}=scryptInit(e,t,r);for(let e=0;e<i;e++){const t=o*e;for(let e=0;e<o;e++)c[e]=l[t+e];let r=0;await asyncLoop(n-1,f,(()=>{BlockMix(c,r,c,r+=o,s),d()})),BlockMix(c,(n-1)*o,l,t,s),d(),await asyncLoop(n,f,(()=>{const e=l[t+o-16]%n;for(let r=0;r<o;r++)h[r]=l[t+r]^c[e*o+r];BlockMix(h,0,l,t,s),d()}))}return scryptOutput(e,a,u,c,h)}let lockedSync=!1,lockedAsync=!1;const _scryptAsync=async function(e,t,r,n,s,i,a){return await scryptAsync(e,t,{N:r,r:n,p:s,dkLen:i,onProgress:a})},_scryptSync=function(e,t,r,n,s,i){return scrypt$1(e,t,{N:r,r:n,p:s,dkLen:i})};let __scryptAsync=_scryptAsync,__scryptSync=_scryptSync;async function scrypt(e,t,r,n,s,i,a){const o=getBytes(e,"passwd"),c=getBytes(t,"salt");return hexlify(await __scryptAsync(o,c,r,n,s,i,a))}function scryptSync(e,t,r,n,s,i){const a=getBytes(e,"passwd"),o=getBytes(t,"salt");return hexlify(__scryptSync(a,o,r,n,s,i))}scrypt._=_scryptAsync,scrypt.lock=function(){lockedAsync=!0},scrypt.register=function(e){if(lockedAsync)throw new Error("scrypt is locked");__scryptAsync=e},Object.freeze(scrypt),scryptSync._=_scryptSync,scryptSync.lock=function(){lockedSync=!0},scryptSync.register=function(e){if(lockedSync)throw new Error("scryptSync is locked");__scryptSync=e},Object.freeze(scryptSync);const _sha256=function(e){return createHash("sha256").update(e).digest()},_sha512=function(e){return createHash("sha512").update(e).digest()};let __sha256=_sha256,__sha512=_sha512,locked256=!1,locked512=!1;function sha256(e){const t=getBytes(e,"data");return hexlify(__sha256(t))}function sha512(e){const t=getBytes(e,"data");return hexlify(__sha512(t))}sha256._=_sha256,sha256.lock=function(){locked256=!0},sha256.register=function(e){if(locked256)throw new Error("sha256 is locked");__sha256=e},Object.freeze(sha256),sha512._=_sha512,sha512.lock=function(){locked512=!0},sha512.register=function(e){if(locked512)throw new Error("sha512 is locked");__sha512=e},Object.freeze(sha256);const _0n$3=BigInt(0),_1n$4=BigInt(1),_2n$2=BigInt(2),u8a=e=>e instanceof Uint8Array,hexes=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));function bytesToHex(e){if(!u8a(e))throw new Error("Uint8Array expected");let t="";for(let r=0;r<e.length;r++)t+=hexes[e[r]];return t}function numberToHexUnpadded(e){const t=e.toString(16);return 1&t.length?`0${t}`:t}function hexToNumber(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);return BigInt(""===e?"0":`0x${e}`)}function hexToBytes(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);const t=e.length;if(t%2)throw new Error("padded hex string expected, got unpadded hex of length "+t);const r=new Uint8Array(t/2);for(let t=0;t<r.length;t++){const n=2*t,s=e.slice(n,n+2),i=Number.parseInt(s,16);if(Number.isNaN(i)||i<0)throw new Error("Invalid byte sequence");r[t]=i}return r}function bytesToNumberBE(e){return hexToNumber(bytesToHex(e))}function bytesToNumberLE(e){if(!u8a(e))throw new Error("Uint8Array expected");return hexToNumber(bytesToHex(Uint8Array.from(e).reverse()))}function numberToBytesBE(e,t){return hexToBytes(e.toString(16).padStart(2*t,"0"))}function numberToBytesLE(e,t){return numberToBytesBE(e,t).reverse()}function numberToVarBytesBE(e){return hexToBytes(numberToHexUnpadded(e))}function ensureBytes(e,t,r){let n;if("string"==typeof t)try{n=hexToBytes(t)}catch(r){throw new Error(`${e} must be valid hex string, got "${t}". Cause: ${r}`)}else{if(!u8a(t))throw new Error(`${e} must be hex string or Uint8Array`);n=Uint8Array.from(t)}const s=n.length;if("number"==typeof r&&s!==r)throw new Error(`${e} expected ${r} bytes, got ${s}`);return n}function concatBytes(...e){const t=new Uint8Array(e.reduce(((e,t)=>e+t.length),0));let r=0;return e.forEach((e=>{if(!u8a(e))throw new Error("Uint8Array expected");t.set(e,r),r+=e.length})),t}function equalBytes(e,t){if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function utf8ToBytes(e){if("string"!=typeof e)throw new Error("utf8ToBytes expected string, got "+typeof e);return new Uint8Array((new TextEncoder).encode(e))}function bitLen(e){let t;for(t=0;e>_0n$3;e>>=_1n$4,t+=1);return t}function bitGet(e,t){return e>>BigInt(t)&_1n$4}const bitSet=(e,t,r)=>e|(r?_1n$4:_0n$3)<<BigInt(t),bitMask=e=>(_2n$2<<BigInt(e-1))-_1n$4,u8n=e=>new Uint8Array(e),u8fr=e=>Uint8Array.from(e);function createHmacDrbg(e,t,r){if("number"!=typeof e||e<2)throw new Error("hashLen must be a number");if("number"!=typeof t||t<2)throw new Error("qByteLen must be a number");if("function"!=typeof r)throw new Error("hmacFn must be a function");let n=u8n(e),s=u8n(e),i=0;const a=()=>{n.fill(1),s.fill(0),i=0},o=(...e)=>r(s,n,...e),c=(e=u8n())=>{s=o(u8fr([0]),e),n=o(),0!==e.length&&(s=o(u8fr([1]),e),n=o())},l=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let e=0;const r=[];for(;e<t;){n=o();const t=n.slice();r.push(t),e+=n.length}return concatBytes(...r)};return(e,t)=>{let r;for(a(),c(e);!(r=t(l()));)c();return a(),r}}const validatorFns={bigint:e=>"bigint"==typeof e,function:e=>"function"==typeof e,boolean:e=>"boolean"==typeof e,string:e=>"string"==typeof e,stringOrUint8Array:e=>"string"==typeof e||e instanceof Uint8Array,isSafeInteger:e=>Number.isSafeInteger(e),array:e=>Array.isArray(e),field:(e,t)=>t.Fp.isValid(e),hash:e=>"function"==typeof e&&Number.isSafeInteger(e.outputLen)};function validateObject(e,t,r={}){const n=(t,r,n)=>{const s=validatorFns[r];if("function"!=typeof s)throw new Error(`Invalid validator "${r}", expected function`);const i=e[t];if(!(n&&void 0===i||s(i,e)))throw new Error(`Invalid param ${String(t)}=${i} (${typeof i}), expected ${r}`)};for(const[e,r]of Object.entries(t))n(e,r,!1);for(const[e,t]of Object.entries(r))n(e,t,!0);return e}var ut=Object.freeze({__proto__:null,bitGet:bitGet,bitLen:bitLen,bitMask:bitMask,bitSet:bitSet,bytesToHex:bytesToHex,bytesToNumberBE:bytesToNumberBE,bytesToNumberLE:bytesToNumberLE,concatBytes:concatBytes,createHmacDrbg:createHmacDrbg,ensureBytes:ensureBytes,equalBytes:equalBytes,hexToBytes:hexToBytes,hexToNumber:hexToNumber,numberToBytesBE:numberToBytesBE,numberToBytesLE:numberToBytesLE,numberToHexUnpadded:numberToHexUnpadded,numberToVarBytesBE:numberToVarBytesBE,utf8ToBytes:utf8ToBytes,validateObject:validateObject});const _0n$2=BigInt(0),_1n$3=BigInt(1),_2n$1=BigInt(2),_3n$1=BigInt(3),_4n=BigInt(4),_5n=BigInt(5),_8n=BigInt(8);function mod(e,t){const r=e%t;return r>=_0n$2?r:t+r}function pow(e,t,r){if(r<=_0n$2||t<_0n$2)throw new Error("Expected power/modulo > 0");if(r===_1n$3)return _0n$2;let n=_1n$3;for(;t>_0n$2;)t&_1n$3&&(n=n*e%r),e=e*e%r,t>>=_1n$3;return n}function pow2(e,t,r){let n=e;for(;t-- >_0n$2;)n*=n,n%=r;return n}function invert(e,t){if(e===_0n$2||t<=_0n$2)throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);let r=mod(e,t),n=t,s=_0n$2,i=_1n$3;for(;r!==_0n$2;){const e=n%r,t=s-i*(n/r);n=r,r=e,s=i,i=t}if(n!==_1n$3)throw new Error("invert: does not exist");return mod(s,t)}function tonelliShanks(e){const t=(e-_1n$3)/_2n$1;let r,n,s;for(r=e-_1n$3,n=0;r%_2n$1===_0n$2;r/=_2n$1,n++);for(s=_2n$1;s<e&&pow(s,t,e)!==e-_1n$3;s++);if(1===n){const t=(e+_1n$3)/_4n;return function(e,r){const n=e.pow(r,t);if(!e.eql(e.sqr(n),r))throw new Error("Cannot find square root");return n}}const i=(r+_1n$3)/_2n$1;return function(e,a){if(e.pow(a,t)===e.neg(e.ONE))throw new Error("Cannot find square root");let o=n,c=e.pow(e.mul(e.ONE,s),r),l=e.pow(a,i),u=e.pow(a,r);for(;!e.eql(u,e.ONE);){if(e.eql(u,e.ZERO))return e.ZERO;let t=1;for(let r=e.sqr(u);t<o&&!e.eql(r,e.ONE);t++)r=e.sqr(r);const r=e.pow(c,_1n$3<<BigInt(o-t-1));c=e.sqr(r),l=e.mul(l,r),u=e.mul(u,c),o=t}return l}}function FpSqrt(e){if(e%_4n===_3n$1){const t=(e+_1n$3)/_4n;return function(e,r){const n=e.pow(r,t);if(!e.eql(e.sqr(n),r))throw new Error("Cannot find square root");return n}}if(e%_8n===_5n){const t=(e-_5n)/_8n;return function(e,r){const n=e.mul(r,_2n$1),s=e.pow(n,t),i=e.mul(r,s),a=e.mul(e.mul(i,_2n$1),s),o=e.mul(i,e.sub(a,e.ONE));if(!e.eql(e.sqr(o),r))throw new Error("Cannot find square root");return o}}return tonelliShanks(e)}BigInt(9),BigInt(16);const FIELD_FIELDS=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function validateField(e){return validateObject(e,FIELD_FIELDS.reduce(((e,t)=>(e[t]="function",e)),{ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"}))}function FpPow(e,t,r){if(r<_0n$2)throw new Error("Expected power > 0");if(r===_0n$2)return e.ONE;if(r===_1n$3)return t;let n=e.ONE,s=t;for(;r>_0n$2;)r&_1n$3&&(n=e.mul(n,s)),s=e.sqr(s),r>>=_1n$3;return n}function FpInvertBatch(e,t){const r=new Array(t.length),n=t.reduce(((t,n,s)=>e.is0(n)?t:(r[s]=t,e.mul(t,n))),e.ONE),s=e.inv(n);return t.reduceRight(((t,n,s)=>e.is0(n)?t:(r[s]=e.mul(t,r[s]),e.mul(t,n))),s),r}function nLength(e,t){const r=void 0!==t?t:e.toString(2).length;return{nBitLength:r,nByteLength:Math.ceil(r/8)}}function Field(e,t,r=!1,n={}){if(e<=_0n$2)throw new Error(`Expected Field ORDER > 0, got ${e}`);const{nBitLength:s,nByteLength:i}=nLength(e,t);if(i>2048)throw new Error("Field lengths over 2048 bytes are not supported");const a=FpSqrt(e),o=Object.freeze({ORDER:e,BITS:s,BYTES:i,MASK:bitMask(s),ZERO:_0n$2,ONE:_1n$3,create:t=>mod(t,e),isValid:t=>{if("bigint"!=typeof t)throw new Error("Invalid field element: expected bigint, got "+typeof t);return _0n$2<=t&&t<e},is0:e=>e===_0n$2,isOdd:e=>(e&_1n$3)===_1n$3,neg:t=>mod(-t,e),eql:(e,t)=>e===t,sqr:t=>mod(t*t,e),add:(t,r)=>mod(t+r,e),sub:(t,r)=>mod(t-r,e),mul:(t,r)=>mod(t*r,e),pow:(e,t)=>FpPow(o,e,t),div:(t,r)=>mod(t*invert(r,e),e),sqrN:e=>e*e,addN:(e,t)=>e+t,subN:(e,t)=>e-t,mulN:(e,t)=>e*t,inv:t=>invert(t,e),sqrt:n.sqrt||(e=>a(o,e)),invertBatch:e=>FpInvertBatch(o,e),cmov:(e,t,r)=>r?t:e,toBytes:e=>r?numberToBytesLE(e,i):numberToBytesBE(e,i),fromBytes:e=>{if(e.length!==i)throw new Error(`Fp.fromBytes: expected ${i}, got ${e.length}`);return r?bytesToNumberLE(e):bytesToNumberBE(e)}});return Object.freeze(o)}function getFieldBytesLength(e){if("bigint"!=typeof e)throw new Error("field order must be bigint");const t=e.toString(2).length;return Math.ceil(t/8)}function getMinHashLength(e){const t=getFieldBytesLength(e);return t+Math.ceil(t/2)}function mapHashToField(e,t,r=!1){const n=e.length,s=getFieldBytesLength(t),i=getMinHashLength(t);if(n<16||n<i||n>1024)throw new Error(`expected ${i}-1024 bytes of input, got ${n}`);const a=mod(r?bytesToNumberBE(e):bytesToNumberLE(e),t-_1n$3)+_1n$3;return r?numberToBytesLE(a,s):numberToBytesBE(a,s)}const _0n$1=BigInt(0),_1n$2=BigInt(1);function wNAF(e,t){const r=(e,t)=>{const r=t.negate();return e?r:t},n=e=>({windows:Math.ceil(t/e)+1,windowSize:2**(e-1)});return{constTimeNegate:r,unsafeLadder(t,r){let n=e.ZERO,s=t;for(;r>_0n$1;)r&_1n$2&&(n=n.add(s)),s=s.double(),r>>=_1n$2;return n},precomputeWindow(e,t){const{windows:r,windowSize:s}=n(t),i=[];let a=e,o=a;for(let e=0;e<r;e++){o=a,i.push(o);for(let e=1;e<s;e++)o=o.add(a),i.push(o);a=o.double()}return i},wNAF(t,s,i){const{windows:a,windowSize:o}=n(t);let c=e.ZERO,l=e.BASE;const u=BigInt(2**t-1),h=2**t,d=BigInt(t);for(let e=0;e<a;e++){const t=e*o;let n=Number(i&u);i>>=d,n>o&&(n-=h,i+=_1n$2);const a=t,f=t+Math.abs(n)-1,g=e%2!=0,p=n<0;0===n?l=l.add(r(g,s[a])):c=c.add(r(p,s[f]))}return{p:c,f:l}},wNAFCached(e,t,r,n){const s=e._WINDOW_SIZE||1;let i=t.get(e);return i||(i=this.precomputeWindow(e,s),1!==s&&t.set(e,n(i))),this.wNAF(s,i,r)}}}function validateBasic(e){return validateField(e.Fp),validateObject(e,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...nLength(e.n,e.nBitLength),...e,p:e.Fp.ORDER})}function validatePointOpts(e){const t=validateBasic(e);validateObject(t,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:r,Fp:n,a:s}=t;if(r){if(!n.eql(s,n.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if("object"!=typeof r||"bigint"!=typeof r.beta||"function"!=typeof r.splitScalar)throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...t})}const{bytesToNumberBE:b2n,hexToBytes:h2b}=ut,DER={Err:class extends Error{constructor(e=""){super(e)}},_parseInt(e){const{Err:t}=DER;if(e.length<2||2!==e[0])throw new t("Invalid signature integer tag");const r=e[1],n=e.subarray(2,r+2);if(!r||n.length!==r)throw new t("Invalid signature integer: wrong length");if(128&n[0])throw new t("Invalid signature integer: negative");if(0===n[0]&&!(128&n[1]))throw new t("Invalid signature integer: unnecessary leading zero");return{d:b2n(n),l:e.subarray(r+2)}},toSig(e){const{Err:t}=DER,r="string"==typeof e?h2b(e):e;if(!(r instanceof Uint8Array))throw new Error("ui8a expected");let n=r.length;if(n<2||48!=r[0])throw new t("Invalid signature tag");if(r[1]!==n-2)throw new t("Invalid signature: incorrect length");const{d:s,l:i}=DER._parseInt(r.subarray(2)),{d:a,l:o}=DER._parseInt(i);if(o.length)throw new t("Invalid signature: left bytes after parsing");return{r:s,s:a}},hexFromSig(e){const t=e=>8&Number.parseInt(e[0],16)?"00"+e:e,r=e=>{const t=e.toString(16);return 1&t.length?`0${t}`:t},n=t(r(e.s)),s=t(r(e.r)),i=n.length/2,a=s.length/2,o=r(i),c=r(a);return`30${r(a+i+4)}02${c}${s}02${o}${n}`}},_0n=BigInt(0),_1n$1=BigInt(1);BigInt(2);const _3n=BigInt(3);function weierstrassPoints(e){const t=validatePointOpts(e),{Fp:r}=t,n=t.toBytes||((e,t,n)=>{const s=t.toAffine();return concatBytes(Uint8Array.from([4]),r.toBytes(s.x),r.toBytes(s.y))}),s=t.fromBytes||(e=>{const t=e.subarray(1);return{x:r.fromBytes(t.subarray(0,r.BYTES)),y:r.fromBytes(t.subarray(r.BYTES,2*r.BYTES))}});function i(e){const{a:n,b:s}=t,i=r.sqr(e),a=r.mul(i,e);return r.add(r.add(a,r.mul(e,n)),s)}if(!r.eql(r.sqr(t.Gy),i(t.Gx)))throw new Error("bad generator point: equation left != right");function a(e){return"bigint"==typeof e&&_0n<e&&e<t.n}function o(e){if(!a(e))throw new Error("Expected valid bigint: 0 < bigint < curve.n")}function c(e){const{allowedPrivateKeyLengths:r,nByteLength:n,wrapPrivateKey:s,n:i}=t;if(r&&"bigint"!=typeof e){if(e instanceof Uint8Array&&(e=bytesToHex(e)),"string"!=typeof e||!r.includes(e.length))throw new Error("Invalid key");e=e.padStart(2*n,"0")}let a;try{a="bigint"==typeof e?e:bytesToNumberBE(ensureBytes("private key",e,n))}catch(t){throw new Error(`private key must be ${n} bytes, hex or bigint, not ${typeof e}`)}return s&&(a=mod(a,i)),o(a),a}const l=new Map;function u(e){if(!(e instanceof h))throw new Error("ProjectivePoint expected")}class h{constructor(e,t,n){if(this.px=e,this.py=t,this.pz=n,null==e||!r.isValid(e))throw new Error("x required");if(null==t||!r.isValid(t))throw new Error("y required");if(null==n||!r.isValid(n))throw new Error("z required")}static fromAffine(e){const{x:t,y:n}=e||{};if(!e||!r.isValid(t)||!r.isValid(n))throw new Error("invalid affine point");if(e instanceof h)throw new Error("projective point not allowed");const s=e=>r.eql(e,r.ZERO);return s(t)&&s(n)?h.ZERO:new h(t,n,r.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(e){const t=r.invertBatch(e.map((e=>e.pz)));return e.map(((e,r)=>e.toAffine(t[r]))).map(h.fromAffine)}static fromHex(e){const t=h.fromAffine(s(ensureBytes("pointHex",e)));return t.assertValidity(),t}static fromPrivateKey(e){return h.BASE.multiply(c(e))}_setWindowSize(e){this._WINDOW_SIZE=e,l.delete(this)}assertValidity(){if(this.is0()){if(t.allowInfinityPoint&&!r.is0(this.py))return;throw new Error("bad point: ZERO")}const{x:e,y:n}=this.toAffine();if(!r.isValid(e)||!r.isValid(n))throw new Error("bad point: x or y not FE");const s=r.sqr(n),a=i(e);if(!r.eql(s,a))throw new Error("bad point: equation left != right");if(!this.isTorsionFree())throw new Error("bad point: not in prime-order subgroup")}hasEvenY(){const{y:e}=this.toAffine();if(r.isOdd)return!r.isOdd(e);throw new Error("Field doesn't support isOdd")}equals(e){u(e);const{px:t,py:n,pz:s}=this,{px:i,py:a,pz:o}=e,c=r.eql(r.mul(t,o),r.mul(i,s)),l=r.eql(r.mul(n,o),r.mul(a,s));return c&&l}negate(){return new h(this.px,r.neg(this.py),this.pz)}double(){const{a:e,b:n}=t,s=r.mul(n,_3n),{px:i,py:a,pz:o}=this;let c=r.ZERO,l=r.ZERO,u=r.ZERO,d=r.mul(i,i),f=r.mul(a,a),g=r.mul(o,o),p=r.mul(i,a);return p=r.add(p,p),u=r.mul(i,o),u=r.add(u,u),c=r.mul(e,u),l=r.mul(s,g),l=r.add(c,l),c=r.sub(f,l),l=r.add(f,l),l=r.mul(c,l),c=r.mul(p,c),u=r.mul(s,u),g=r.mul(e,g),p=r.sub(d,g),p=r.mul(e,p),p=r.add(p,u),u=r.add(d,d),d=r.add(u,d),d=r.add(d,g),d=r.mul(d,p),l=r.add(l,d),g=r.mul(a,o),g=r.add(g,g),d=r.mul(g,p),c=r.sub(c,d),u=r.mul(g,f),u=r.add(u,u),u=r.add(u,u),new h(c,l,u)}add(e){u(e);const{px:n,py:s,pz:i}=this,{px:a,py:o,pz:c}=e;let l=r.ZERO,d=r.ZERO,f=r.ZERO;const g=t.a,p=r.mul(t.b,_3n);let m=r.mul(n,a),y=r.mul(s,o),b=r.mul(i,c),w=r.add(n,s),A=r.add(a,o);w=r.mul(w,A),A=r.add(m,y),w=r.sub(w,A),A=r.add(n,i);let v=r.add(a,c);return A=r.mul(A,v),v=r.add(m,b),A=r.sub(A,v),v=r.add(s,i),l=r.add(o,c),v=r.mul(v,l),l=r.add(y,b),v=r.sub(v,l),f=r.mul(g,A),l=r.mul(p,b),f=r.add(l,f),l=r.sub(y,f),f=r.add(y,f),d=r.mul(l,f),y=r.add(m,m),y=r.add(y,m),b=r.mul(g,b),A=r.mul(p,A),y=r.add(y,b),b=r.sub(m,b),b=r.mul(g,b),A=r.add(A,b),m=r.mul(y,A),d=r.add(d,m),m=r.mul(v,A),l=r.mul(w,l),l=r.sub(l,m),m=r.mul(w,y),f=r.mul(v,f),f=r.add(f,m),new h(l,d,f)}subtract(e){return this.add(e.negate())}is0(){return this.equals(h.ZERO)}wNAF(e){return f.wNAFCached(this,l,e,(e=>{const t=r.invertBatch(e.map((e=>e.pz)));return e.map(((e,r)=>e.toAffine(t[r]))).map(h.fromAffine)}))}multiplyUnsafe(e){const n=h.ZERO;if(e===_0n)return n;if(o(e),e===_1n$1)return this;const{endo:s}=t;if(!s)return f.unsafeLadder(this,e);let{k1neg:i,k1:a,k2neg:c,k2:l}=s.splitScalar(e),u=n,d=n,g=this;for(;a>_0n||l>_0n;)a&_1n$1&&(u=u.add(g)),l&_1n$1&&(d=d.add(g)),g=g.double(),a>>=_1n$1,l>>=_1n$1;return i&&(u=u.negate()),c&&(d=d.negate()),d=new h(r.mul(d.px,s.beta),d.py,d.pz),u.add(d)}multiply(e){o(e);let n,s,i=e;const{endo:a}=t;if(a){const{k1neg:e,k1:t,k2neg:o,k2:c}=a.splitScalar(i);let{p:l,f:u}=this.wNAF(t),{p:d,f:g}=this.wNAF(c);l=f.constTimeNegate(e,l),d=f.constTimeNegate(o,d),d=new h(r.mul(d.px,a.beta),d.py,d.pz),n=l.add(d),s=u.add(g)}else{const{p:e,f:t}=this.wNAF(i);n=e,s=t}return h.normalizeZ([n,s])[0]}multiplyAndAddUnsafe(e,t,r){const n=h.BASE,s=(e,t)=>t!==_0n&&t!==_1n$1&&e.equals(n)?e.multiply(t):e.multiplyUnsafe(t),i=s(this,t).add(s(e,r));return i.is0()?void 0:i}toAffine(e){const{px:t,py:n,pz:s}=this,i=this.is0();null==e&&(e=i?r.ONE:r.inv(s));const a=r.mul(t,e),o=r.mul(n,e),c=r.mul(s,e);if(i)return{x:r.ZERO,y:r.ZERO};if(!r.eql(c,r.ONE))throw new Error("invZ was invalid");return{x:a,y:o}}isTorsionFree(){const{h:e,isTorsionFree:r}=t;if(e===_1n$1)return!0;if(r)return r(h,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:e,clearCofactor:r}=t;return e===_1n$1?this:r?r(h,this):this.multiplyUnsafe(t.h)}toRawBytes(e=!0){return this.assertValidity(),n(h,this,e)}toHex(e=!0){return bytesToHex(this.toRawBytes(e))}}h.BASE=new h(t.Gx,t.Gy,r.ONE),h.ZERO=new h(r.ZERO,r.ONE,r.ZERO);const d=t.nBitLength,f=wNAF(h,t.endo?Math.ceil(d/2):d);return{CURVE:t,ProjectivePoint:h,normPrivateKeyToScalar:c,weierstrassEquation:i,isWithinCurveOrder:a}}function validateOpts(e){const t=validateBasic(e);return validateObject(t,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...t})}function weierstrass(e){const t=validateOpts(e),{Fp:r,n:n}=t,s=r.BYTES+1,i=2*r.BYTES+1;function a(e){return mod(e,n)}function o(e){return invert(e,n)}const{ProjectivePoint:c,normPrivateKeyToScalar:l,weierstrassEquation:u,isWithinCurveOrder:h}=weierstrassPoints({...t,toBytes(e,t,n){const s=t.toAffine(),i=r.toBytes(s.x),a=concatBytes;return n?a(Uint8Array.from([t.hasEvenY()?2:3]),i):a(Uint8Array.from([4]),i,r.toBytes(s.y))},fromBytes(e){const t=e.length,n=e[0],a=e.subarray(1);if(t!==s||2!==n&&3!==n){if(t===i&&4===n){return{x:r.fromBytes(a.subarray(0,r.BYTES)),y:r.fromBytes(a.subarray(r.BYTES,2*r.BYTES))}}throw new Error(`Point of length ${t} was invalid. Expected ${s} compressed bytes or ${i} uncompressed bytes`)}{const e=bytesToNumberBE(a);if(!(_0n<(o=e)&&o<r.ORDER))throw new Error("Point is not on curve");const t=u(e);let s=r.sqrt(t);return 1==(1&n)!==((s&_1n$1)===_1n$1)&&(s=r.neg(s)),{x:e,y:s}}var o}}),d=e=>bytesToHex(numberToBytesBE(e,t.nByteLength));function f(e){return e>n>>_1n$1}const g=(e,t,r)=>bytesToNumberBE(e.slice(t,r));class p{constructor(e,t,r){this.r=e,this.s=t,this.recovery=r,this.assertValidity()}static fromCompact(e){const r=t.nByteLength;return e=ensureBytes("compactSignature",e,2*r),new p(g(e,0,r),g(e,r,2*r))}static fromDER(e){const{r:t,s:r}=DER.toSig(ensureBytes("DER",e));return new p(t,r)}assertValidity(){if(!h(this.r))throw new Error("r must be 0 < r < CURVE.n");if(!h(this.s))throw new Error("s must be 0 < s < CURVE.n")}addRecoveryBit(e){return new p(this.r,this.s,e)}recoverPublicKey(e){const{r:n,s:s,recovery:i}=this,l=w(ensureBytes("msgHash",e));if(null==i||![0,1,2,3].includes(i))throw new Error("recovery id invalid");const u=2===i||3===i?n+t.n:n;if(u>=r.ORDER)throw new Error("recovery id 2 or 3 invalid");const h=0==(1&i)?"02":"03",f=c.fromHex(h+d(u)),g=o(u),p=a(-l*g),m=a(s*g),y=c.BASE.multiplyAndAddUnsafe(f,p,m);if(!y)throw new Error("point at infinify");return y.assertValidity(),y}hasHighS(){return f(this.s)}normalizeS(){return this.hasHighS()?new p(this.r,a(-this.s),this.recovery):this}toDERRawBytes(){return hexToBytes(this.toDERHex())}toDERHex(){return DER.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return hexToBytes(this.toCompactHex())}toCompactHex(){return d(this.r)+d(this.s)}}const m={isValidPrivateKey(e){try{return l(e),!0}catch(e){return!1}},normPrivateKeyToScalar:l,randomPrivateKey:()=>{const e=getMinHashLength(t.n);return mapHashToField(t.randomBytes(e),t.n)},precompute:(e=8,t=c.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)};function y(e){const t=e instanceof Uint8Array,r="string"==typeof e,n=(t||r)&&e.length;return t?n===s||n===i:r?n===2*s||n===2*i:e instanceof c}const b=t.bits2int||function(e){const r=bytesToNumberBE(e),n=8*e.length-t.nBitLength;return n>0?r>>BigInt(n):r},w=t.bits2int_modN||function(e){return a(b(e))},A=bitMask(t.nBitLength);function v(e){if("bigint"!=typeof e)throw new Error("bigint expected");if(!(_0n<=e&&e<A))throw new Error(`bigint expected < 2^${t.nBitLength}`);return numberToBytesBE(e,t.nByteLength)}function E(e,n,s=k){if(["recovered","canonical"].some((e=>e in s)))throw new Error("sign() legacy options not supported");const{hash:i,randomBytes:u}=t;let{lowS:d,prehash:g,extraEntropy:m}=s;null==d&&(d=!0),e=ensureBytes("msgHash",e),g&&(e=ensureBytes("prehashed msgHash",i(e)));const y=w(e),A=l(n),E=[v(A),v(y)];if(null!=m){const e=!0===m?u(r.BYTES):m;E.push(ensureBytes("extraEntropy",e))}const B=concatBytes(...E),P=y;return{seed:B,k2sig:function(e){const t=b(e);if(!h(t))return;const r=o(t),n=c.BASE.multiply(t).toAffine(),s=a(n.x);if(s===_0n)return;const i=a(r*a(P+s*A));if(i===_0n)return;let l=(n.x===s?0:2)|Number(n.y&_1n$1),u=i;return d&&f(i)&&(u=function(e){return f(e)?a(-e):e}(i),l^=1),new p(s,u,l)}}}const k={lowS:t.lowS,prehash:!1},B={lowS:t.lowS,prehash:!1};return c.BASE._setWindowSize(8),{CURVE:t,getPublicKey:function(e,t=!0){return c.fromPrivateKey(e).toRawBytes(t)},getSharedSecret:function(e,t,r=!0){if(y(e))throw new Error("first arg must be private key");if(!y(t))throw new Error("second arg must be public key");return c.fromHex(t).multiply(l(e)).toRawBytes(r)},sign:function(e,r,n=k){const{seed:s,k2sig:i}=E(e,r,n),a=t;return createHmacDrbg(a.hash.outputLen,a.nByteLength,a.hmac)(s,i)},verify:function(e,r,n,s=B){const i=e;if(r=ensureBytes("msgHash",r),n=ensureBytes("publicKey",n),"strict"in s)throw new Error("options.strict was renamed to lowS");const{lowS:l,prehash:u}=s;let h,d;try{if("string"==typeof i||i instanceof Uint8Array)try{h=p.fromDER(i)}catch(e){if(!(e instanceof DER.Err))throw e;h=p.fromCompact(i)}else{if("object"!=typeof i||"bigint"!=typeof i.r||"bigint"!=typeof i.s)throw new Error("PARSE");{const{r:e,s:t}=i;h=new p(e,t)}}d=c.fromHex(n)}catch(e){if("PARSE"===e.message)throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(l&&h.hasHighS())return!1;u&&(r=t.hash(r));const{r:f,s:g}=h,m=w(r),y=o(g),b=a(m*y),A=a(f*y),v=c.BASE.multiplyAndAddUnsafe(d,b,A)?.toAffine();return!!v&&a(v.x)===f},ProjectivePoint:c,Signature:p,utils:m}}function getHash(e){return{hash:e,hmac:(t,...r)=>hmac(e,t,concatBytes$1(...r)),randomBytes:randomBytes$2}}function createCurve(e,t){const r=t=>weierstrass({...e,...getHash(t)});return Object.freeze({...r(t),create:r})}BigInt(4);const secp256k1P=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),secp256k1N=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),_1n=BigInt(1),_2n=BigInt(2),divNearest=(e,t)=>(e+t/_2n)/t;function sqrtMod(e){const t=secp256k1P,r=BigInt(3),n=BigInt(6),s=BigInt(11),i=BigInt(22),a=BigInt(23),o=BigInt(44),c=BigInt(88),l=e*e*e%t,u=l*l*e%t,h=pow2(u,r,t)*u%t,d=pow2(h,r,t)*u%t,f=pow2(d,_2n,t)*l%t,g=pow2(f,s,t)*f%t,p=pow2(g,i,t)*g%t,m=pow2(p,o,t)*p%t,y=pow2(m,c,t)*m%t,b=pow2(y,o,t)*p%t,w=pow2(b,r,t)*u%t,A=pow2(w,a,t)*g%t,v=pow2(A,n,t)*l%t,E=pow2(v,_2n,t);if(!Fp.eql(Fp.sqr(E),e))throw new Error("Cannot find square root");return E}const Fp=Field(secp256k1P,void 0,void 0,{sqrt:sqrtMod}),secp256k1=createCurve({a:BigInt(0),b:BigInt(7),Fp:Fp,n:secp256k1N,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:e=>{const t=secp256k1N,r=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-_1n*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),s=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=r,a=BigInt("0x100000000000000000000000000000000"),o=divNearest(i*e,t),c=divNearest(-n*e,t);let l=mod(e-o*r-c*s,t),u=mod(-o*n-c*i,t);const h=l>a,d=u>a;if(h&&(l=t-l),d&&(u=t-u),l>a||u>a)throw new Error("splitScalar: Endomorphism failed, k="+e);return{k1neg:h,k1:l,k2neg:d,k2:u}}}},sha256$1);BigInt(0),secp256k1.ProjectivePoint;const ZeroAddress="0x0000000000000000000000000000000000000000",ZeroHash="0x0000000000000000000000000000000000000000000000000000000000000000",N$1=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),WeiPerEther=BigInt("1000000000000000000"),MaxUint256=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),MinInt256=BigInt("0x8000000000000000000000000000000000000000000000000000000000000000")*BigInt(-1),MaxInt256=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),EtherSymbol="Ξ",MessagePrefix="Ethereum Signed Message:\n",BN_0$7=BigInt(0),BN_1$3=BigInt(1),BN_2$3=BigInt(2),BN_27$1=BigInt(27),BN_28$1=BigInt(28),BN_35$1=BigInt(35),_guard$3={};function toUint256(e){return zeroPadValue(toBeArray(e),32)}class Signature{#$;#V;#K;#J;get r(){return this.#$}set r(e){assertArgument(32===dataLength(e),"invalid r","value",e),this.#$=hexlify(e)}get s(){return this.#V}set s(e){assertArgument(32===dataLength(e),"invalid s","value",e);const t=hexlify(e);assertArgument(parseInt(t.substring(0,3))<8,"non-canonical s","value",t),this.#V=t}get v(){return this.#K}set v(e){const t=getNumber(e,"value");assertArgument(27===t||28===t,"invalid v","v",e),this.#K=t}get networkV(){return this.#J}get legacyChainId(){const e=this.networkV;return null==e?null:Signature.getChainId(e)}get yParity(){return 27===this.v?0:1}get yParityAndS(){const e=getBytes(this.s);return this.yParity&&(e[0]|=128),hexlify(e)}get compactSerialized(){return concat([this.r,this.yParityAndS])}get serialized(){return concat([this.r,this.s,this.yParity?"0x1c":"0x1b"])}constructor(e,t,r,n){assertPrivate(e,_guard$3,"Signature"),this.#$=t,this.#V=r,this.#K=n,this.#J=null}[Symbol.for("nodejs.util.inspect.custom")](){return`Signature { r: "${this.r}", s: "${this.s}", yParity: ${this.yParity}, networkV: ${this.networkV} }`}clone(){const e=new Signature(_guard$3,this.r,this.s,this.v);return this.networkV&&(e.#J=this.networkV),e}toJSON(){const e=this.networkV;return{_type:"signature",networkV:null!=e?e.toString():null,r:this.r,s:this.s,v:this.v}}static getChainId(e){const t=getBigInt(e,"v");return t==BN_27$1||t==BN_28$1?BN_0$7:(assertArgument(t>=BN_35$1,"invalid EIP-155 v","v",e),(t-BN_35$1)/BN_2$3)}static getChainIdV(e,t){return getBigInt(e)*BN_2$3+BigInt(35+t-27)}static getNormalizedV(e){const t=getBigInt(e);return t===BN_0$7||t===BN_27$1?27:t===BN_1$3||t===BN_28$1?28:(assertArgument(t>=BN_35$1,"invalid v","v",e),t&BN_1$3?27:28)}static from(e){function t(t,r){assertArgument(t,r,"signature",e)}if(null==e)return new Signature(_guard$3,ZeroHash,ZeroHash,27);if("string"==typeof e){const r=getBytes(e,"signature");if(64===r.length){const e=hexlify(r.slice(0,32)),t=r.slice(32,64),n=128&t[0]?28:27;return t[0]&=127,new Signature(_guard$3,e,hexlify(t),n)}if(65===r.length){const e=hexlify(r.slice(0,32)),n=r.slice(32,64);t(0==(128&n[0]),"non-canonical s");const s=Signature.getNormalizedV(r[64]);return new Signature(_guard$3,e,hexlify(n),s)}t(!1,"invalid raw signature length")}if(e instanceof Signature)return e.clone();const r=e.r;t(null!=r,"missing r");const n=toUint256(r),s=function(e,r){if(null!=e)return toUint256(e);if(null!=r){t(isHexString(r,32),"invalid yParityAndS");const e=getBytes(r);return e[0]&=127,hexlify(e)}t(!1,"missing s")}(e.s,e.yParityAndS);t(0==(128&getBytes(s)[0]),"non-canonical s");const{networkV:i,v:a}=function(e,r,n){if(null!=e){const t=getBigInt(e);return{networkV:t>=BN_35$1?t:void 0,v:Signature.getNormalizedV(t)}}if(null!=r)return t(isHexString(r,32),"invalid yParityAndS"),{v:128&getBytes(r)[0]?28:27};if(null!=n){switch(getNumber(n,"sig.yParity")){case 0:return{v:27};case 1:return{v:28}}t(!1,"invalid yParity")}t(!1,"missing v")}(e.v,e.yParityAndS,e.yParity),o=new Signature(_guard$3,n,s,a);return i&&(o.#J=i),t(null==e.yParity||getNumber(e.yParity,"sig.yParity")===o.yParity,"yParity mismatch"),t(null==e.yParityAndS||e.yParityAndS===o.yParityAndS,"yParityAndS mismatch"),o}}class SigningKey{#Q;constructor(e){assertArgument(32===dataLength(e),"invalid private key","privateKey","[REDACTED]"),this.#Q=hexlify(e)}get privateKey(){return this.#Q}get publicKey(){return SigningKey.computePublicKey(this.#Q)}get compressedPublicKey(){return SigningKey.computePublicKey(this.#Q,!0)}sign(e){assertArgument(32===dataLength(e),"invalid digest length","digest",e);const t=secp256k1.sign(getBytesCopy(e),getBytesCopy(this.#Q),{lowS:!0});return Signature.from({r:toBeHex(t.r,32),s:toBeHex(t.s,32),v:t.recovery?28:27})}computeSharedSecret(e){const t=SigningKey.computePublicKey(e);return hexlify(secp256k1.getSharedSecret(getBytesCopy(this.#Q),getBytes(t),!1))}static computePublicKey(e,t){let r=getBytes(e,"key");if(32===r.length){return hexlify(secp256k1.getPublicKey(r,!!t))}if(64===r.length){const e=new Uint8Array(65);e[0]=4,e.set(r,1),r=e}return hexlify(secp256k1.ProjectivePoint.fromHex(r).toRawBytes(t))}static recoverPublicKey(e,t){assertArgument(32===dataLength(e),"invalid digest length","digest",e);const r=Signature.from(t);let n=secp256k1.Signature.fromCompact(getBytesCopy(concat([r.r,r.s])));n=n.addRecoveryBit(r.yParity);const s=n.recoverPublicKey(getBytesCopy(e));return assertArgument(null!=s,"invalid signautre for digest","signature",t),"0x"+s.toHex(!1)}static addPoints(e,t,r){const n=secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(e).substring(2)),s=secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(t).substring(2));return"0x"+n.add(s).toHex(!!r)}}function lock(){computeHmac.lock(),keccak256.lock(),pbkdf2.lock(),randomBytes.lock(),ripemd160.lock(),scrypt.lock(),scryptSync.lock(),sha256.lock(),sha512.lock(),randomBytes.lock()}const BN_0$6=BigInt(0),BN_36=BigInt(36);function getChecksumAddress(e){const t=(e=e.toLowerCase()).substring(2).split(""),r=new Uint8Array(40);for(let e=0;e<40;e++)r[e]=t[e].charCodeAt(0);const n=getBytes(keccak256(r));for(let e=0;e<40;e+=2)n[e>>1]>>4>=8&&(t[e]=t[e].toUpperCase()),(15&n[e>>1])>=8&&(t[e+1]=t[e+1].toUpperCase());return"0x"+t.join("")}const ibanLookup={};for(let e=0;e<10;e++)ibanLookup[String(e)]=String(e);for(let e=0;e<26;e++)ibanLookup[String.fromCharCode(65+e)]=String(10+e);const safeDigits=15;function ibanChecksum(e){let t=(e=(e=e.toUpperCase()).substring(4)+e.substring(0,2)+"00").split("").map((e=>ibanLookup[e])).join("");for(;t.length>=safeDigits;){let e=t.substring(0,safeDigits);t=parseInt(e,10)%97+t.substring(e.length)}let r=String(98-parseInt(t,10)%97);for(;r.length<2;)r="0"+r;return r}const Base36=function(){const e={};for(let t=0;t<36;t++){e["0123456789abcdefghijklmnopqrstuvwxyz"[t]]=BigInt(t)}return e}();function fromBase36(e){e=e.toLowerCase();let t=BN_0$6;for(let r=0;r<e.length;r++)t=t*BN_36+Base36[e[r]];return t}function getAddress(e){if(assertArgument("string"==typeof e,"invalid address","address",e),e.match(/^(0x)?[0-9a-fA-F]{40}$/)){e.startsWith("0x")||(e="0x"+e);const t=getChecksumAddress(e);return assertArgument(!e.match(/([A-F].*[a-f])|([a-f].*[A-F])/)||t===e,"bad address checksum","address",e),t}if(e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){assertArgument(e.substring(2,4)===ibanChecksum(e),"bad icap checksum","address",e);let t=fromBase36(e.substring(4)).toString(16);for(;t.length<40;)t="0"+t;return getChecksumAddress("0x"+t)}assertArgument(!1,"invalid address","address",e)}function getIcapAddress(e){let t=BigInt(getAddress(e)).toString(36).toUpperCase();for(;t.length<30;)t="0"+t;return"XE"+ibanChecksum("XE00"+t)+t}function getCreateAddress(e){const t=getAddress(e.from);let r=getBigInt(e.nonce,"tx.nonce").toString(16);return r="0"===r?"0x":r.length%2?"0x0"+r:"0x"+r,getAddress(dataSlice(keccak256(encodeRlp([t,r])),12))}function getCreate2Address(e,t,r){const n=getAddress(e),s=getBytes(t,"salt"),i=getBytes(r,"initCodeHash");return assertArgument(32===s.length,"salt must be 32 bytes","salt",t),assertArgument(32===i.length,"initCodeHash must be 32 bytes","initCodeHash",r),getAddress(dataSlice(keccak256(concat(["0xff",n,s,i])),12))}function isAddressable(e){return e&&"function"==typeof e.getAddress}function isAddress(e){try{return getAddress(e),!0}catch(e){}return!1}async function checkAddress(e,t){const r=await t;return null!=r&&"0x0000000000000000000000000000000000000000"!==r||(assert("string"!=typeof e,"unconfigured name","UNCONFIGURED_NAME",{value:e}),assertArgument(!1,"invalid AddressLike value; did not resolve to a value address","target",e)),getAddress(r)}function resolveAddress(e,t){return"string"==typeof e?e.match(/^0x[0-9a-f]{40}$/i)?getAddress(e):(assert(null!=t,"ENS resolution requires a provider","UNSUPPORTED_OPERATION",{operation:"resolveName"}),checkAddress(e,t.resolveName(e))):isAddressable(e)?checkAddress(e,e.getAddress()):e&&"function"==typeof e.then?checkAddress(e,e):void assertArgument(!1,"unsupported addressable value","target",e)}const _gaurd={};function n(e,t){let r=!1;return t<0&&(r=!0,t*=-1),new Typed(_gaurd,`${r?"":"u"}int${t}`,e,{signed:r,width:t})}function b(e,t){return new Typed(_gaurd,`bytes${t||""}`,e,{size:t})}const _typedSymbol=Symbol.for("_ethers_typed");class Typed{type;value;#j;_typedSymbol;constructor(e,t,r,n){null==n&&(n=null),assertPrivate(_gaurd,e,"Typed"),defineProperties(this,{_typedSymbol:_typedSymbol,type:t,value:r}),this.#j=n,this.format()}format(){if("array"===this.type)throw new Error("");if("dynamicArray"===this.type)throw new Error("");return"tuple"===this.type?`tuple(${this.value.map((e=>e.format())).join(",")})`:this.type}defaultValue(){return 0}minValue(){return 0}maxValue(){return 0}isBigInt(){return!!this.type.match(/^u?int[0-9]+$/)}isData(){return this.type.startsWith("bytes")}isString(){return"string"===this.type}get tupleName(){if("tuple"!==this.type)throw TypeError("not a tuple");return this.#j}get arrayLength(){if("array"!==this.type)throw TypeError("not an array");return!0===this.#j?-1:!1===this.#j?this.value.length:null}static from(e,t){return new Typed(_gaurd,e,t)}static uint8(e){return n(e,8)}static uint16(e){return n(e,16)}static uint24(e){return n(e,24)}static uint32(e){return n(e,32)}static uint40(e){return n(e,40)}static uint48(e){return n(e,48)}static uint56(e){return n(e,56)}static uint64(e){return n(e,64)}static uint72(e){return n(e,72)}static uint80(e){return n(e,80)}static uint88(e){return n(e,88)}static uint96(e){return n(e,96)}static uint104(e){return n(e,104)}static uint112(e){return n(e,112)}static uint120(e){return n(e,120)}static uint128(e){return n(e,128)}static uint136(e){return n(e,136)}static uint144(e){return n(e,144)}static uint152(e){return n(e,152)}static uint160(e){return n(e,160)}static uint168(e){return n(e,168)}static uint176(e){return n(e,176)}static uint184(e){return n(e,184)}static uint192(e){return n(e,192)}static uint200(e){return n(e,200)}static uint208(e){return n(e,208)}static uint216(e){return n(e,216)}static uint224(e){return n(e,224)}static uint232(e){return n(e,232)}static uint240(e){return n(e,240)}static uint248(e){return n(e,248)}static uint256(e){return n(e,256)}static uint(e){return n(e,256)}static int8(e){return n(e,-8)}static int16(e){return n(e,-16)}static int24(e){return n(e,-24)}static int32(e){return n(e,-32)}static int40(e){return n(e,-40)}static int48(e){return n(e,-48)}static int56(e){return n(e,-56)}static int64(e){return n(e,-64)}static int72(e){return n(e,-72)}static int80(e){return n(e,-80)}static int88(e){return n(e,-88)}static int96(e){return n(e,-96)}static int104(e){return n(e,-104)}static int112(e){return n(e,-112)}static int120(e){return n(e,-120)}static int128(e){return n(e,-128)}static int136(e){return n(e,-136)}static int144(e){return n(e,-144)}static int152(e){return n(e,-152)}static int160(e){return n(e,-160)}static int168(e){return n(e,-168)}static int176(e){return n(e,-176)}static int184(e){return n(e,-184)}static int192(e){return n(e,-192)}static int200(e){return n(e,-200)}static int208(e){return n(e,-208)}static int216(e){return n(e,-216)}static int224(e){return n(e,-224)}static int232(e){return n(e,-232)}static int240(e){return n(e,-240)}static int248(e){return n(e,-248)}static int256(e){return n(e,-256)}static int(e){return n(e,-256)}static bytes1(e){return b(e,1)}static bytes2(e){return b(e,2)}static bytes3(e){return b(e,3)}static bytes4(e){return b(e,4)}static bytes5(e){return b(e,5)}static bytes6(e){return b(e,6)}static bytes7(e){return b(e,7)}static bytes8(e){return b(e,8)}static bytes9(e){return b(e,9)}static bytes10(e){return b(e,10)}static bytes11(e){return b(e,11)}static bytes12(e){return b(e,12)}static bytes13(e){return b(e,13)}static bytes14(e){return b(e,14)}static bytes15(e){return b(e,15)}static bytes16(e){return b(e,16)}static bytes17(e){return b(e,17)}static bytes18(e){return b(e,18)}static bytes19(e){return b(e,19)}static bytes20(e){return b(e,20)}static bytes21(e){return b(e,21)}static bytes22(e){return b(e,22)}static bytes23(e){return b(e,23)}static bytes24(e){return b(e,24)}static bytes25(e){return b(e,25)}static bytes26(e){return b(e,26)}static bytes27(e){return b(e,27)}static bytes28(e){return b(e,28)}static bytes29(e){return b(e,29)}static bytes30(e){return b(e,30)}static bytes31(e){return b(e,31)}static bytes32(e){return b(e,32)}static address(e){return new Typed(_gaurd,"address",e)}static bool(e){return new Typed(_gaurd,"bool",!!e)}static bytes(e){return new Typed(_gaurd,"bytes",e)}static string(e){return new Typed(_gaurd,"string",e)}static array(e,t){throw new Error("not implemented yet")}static tuple(e,t){throw new Error("not implemented yet")}static overrides(e){return new Typed(_gaurd,"overrides",Object.assign({},e))}static isTyped(e){return e&&"object"==typeof e&&"_typedSymbol"in e&&e._typedSymbol===_typedSymbol}static dereference(e,t){if(Typed.isTyped(e)){if(e.type!==t)throw new Error(`invalid type: expecetd ${t}, got ${e.type}`);return e.value}return e}}class AddressCoder extends Coder{constructor(e){super("address","address",e,!1)}defaultValue(){return"0x0000000000000000000000000000000000000000"}encode(e,t){let r=Typed.dereference(t,"string");try{r=getAddress(r)}catch(e){return this._throwError(e.message,t)}return e.writeValue(r)}decode(e){return getAddress(toBeHex(e.readValue(),20))}}class AnonymousCoder extends Coder{coder;constructor(e){super(e.name,e.type,"_",e.dynamic),this.coder=e}defaultValue(){return this.coder.defaultValue()}encode(e,t){return this.coder.encode(e,t)}decode(e){return this.coder.decode(e)}}function pack(e,t,r){let n=[];if(Array.isArray(r))n=r;else if(r&&"object"==typeof r){let e={};n=t.map((t=>{const n=t.localName;return assert(n,"cannot encode object for signature with missing names","INVALID_ARGUMENT",{argument:"values",info:{coder:t},value:r}),assert(!e[n],"cannot encode object for signature with duplicate names","INVALID_ARGUMENT",{argument:"values",info:{coder:t},value:r}),e[n]=!0,r[n]}))}else assertArgument(!1,"invalid tuple value","tuple",r);assertArgument(t.length===n.length,"types/value length mismatch","tuple",r);let s=new Writer,i=new Writer,a=[];t.forEach(((e,t)=>{let r=n[t];if(e.dynamic){let t=i.length;e.encode(i,r);let n=s.writeUpdatableValue();a.push((e=>{n(e+t)}))}else e.encode(s,r)})),a.forEach((e=>{e(s.length)}));let o=e.appendWriter(s);return o+=e.appendWriter(i),o}function unpack(e,t){let r=[],n=[],s=e.subReader(0);return t.forEach((t=>{let i=null;if(t.dynamic){let r=e.readIndex(),n=s.subReader(r);try{i=t.decode(n)}catch(e){if(isError(e,"BUFFER_OVERRUN"))throw e;i=e,i.baseType=t.name,i.name=t.localName,i.type=t.type}}else try{i=t.decode(e)}catch(e){if(isError(e,"BUFFER_OVERRUN"))throw e;i=e,i.baseType=t.name,i.name=t.localName,i.type=t.type}if(null==i)throw new Error("investigate");r.push(i),n.push(t.localName||null)})),Result.fromItems(r,n)}class ArrayCoder extends Coder{coder;length;constructor(e,t,r){super("array",e.type+"["+(t>=0?t:"")+"]",r,-1===t||e.dynamic),defineProperties(this,{coder:e,length:t})}defaultValue(){const e=this.coder.defaultValue(),t=[];for(let r=0;r<this.length;r++)t.push(e);return t}encode(e,t){const r=Typed.dereference(t,"array");Array.isArray(r)||this._throwError("expected array value",r);let n=this.length;-1===n&&(n=r.length,e.writeValue(r.length)),assertArgumentCount(r.length,n,"coder array"+(this.localName?" "+this.localName:""));let s=[];for(let e=0;e<r.length;e++)s.push(this.coder);return pack(e,s,r)}decode(e){let t=this.length;-1===t&&(t=e.readIndex(),assert(32*t<=e.dataLength,"insufficient data length","BUFFER_OVERRUN",{buffer:e.bytes,offset:32*t,length:e.dataLength}));let r=[];for(let e=0;e<t;e++)r.push(new AnonymousCoder(this.coder));return unpack(e,r)}}class BooleanCoder extends Coder{constructor(e){super("bool","bool",e,!1)}defaultValue(){return!1}encode(e,t){const r=Typed.dereference(t,"bool");return e.writeValue(r?1:0)}decode(e){return!!e.readValue()}}class DynamicBytesCoder extends Coder{constructor(e,t){super(e,e,t,!0)}defaultValue(){return"0x"}encode(e,t){t=getBytesCopy(t);let r=e.writeValue(t.length);return r+=e.writeBytes(t),r}decode(e){return e.readBytes(e.readIndex(),!0)}}class BytesCoder extends DynamicBytesCoder{constructor(e){super("bytes",e)}decode(e){return hexlify(super.decode(e))}}class FixedBytesCoder extends Coder{size;constructor(e,t){let r="bytes"+String(e);super(r,r,t,!1),defineProperties(this,{size:e},{size:"number"})}defaultValue(){return"0x0000000000000000000000000000000000000000000000000000000000000000".substring(0,2+2*this.size)}encode(e,t){let r=getBytesCopy(Typed.dereference(t,this.type));return r.length!==this.size&&this._throwError("incorrect data length",t),e.writeBytes(r)}decode(e){return hexlify(e.readBytes(this.size))}}const Empty=new Uint8Array([]);class NullCoder extends Coder{constructor(e){super("null","",e,!1)}defaultValue(){return null}encode(e,t){return null!=t&&this._throwError("not null",t),e.writeBytes(Empty)}decode(e){return e.readBytes(0),null}}const BN_0$5=BigInt(0),BN_1$2=BigInt(1),BN_MAX_UINT256$1=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");class NumberCoder extends Coder{size;signed;constructor(e,t,r){const n=(t?"int":"uint")+8*e;super(n,n,r,!1),defineProperties(this,{size:e,signed:t},{size:"number",signed:"boolean"})}defaultValue(){return 0}encode(e,t){let r=getBigInt(Typed.dereference(t,this.type)),n=mask(BN_MAX_UINT256$1,256);if(this.signed){let e=mask(n,8*this.size-1);(r>e||r<-(e+BN_1$2))&&this._throwError("value out-of-bounds",t),r=toTwos(r,256)}else(r<BN_0$5||r>mask(n,8*this.size))&&this._throwError("value out-of-bounds",t);return e.writeValue(r)}decode(e){let t=mask(e.readValue(),8*this.size);return this.signed&&(t=fromTwos(t,8*this.size)),t}}class StringCoder extends DynamicBytesCoder{constructor(e){super("string",e)}defaultValue(){return""}encode(e,t){return super.encode(e,toUtf8Bytes(Typed.dereference(t,"string")))}decode(e){return toUtf8String(super.decode(e))}}class TupleCoder extends Coder{coders;constructor(e,t){let r=!1;const n=[];e.forEach((e=>{e.dynamic&&(r=!0),n.push(e.type)}));super("tuple","tuple("+n.join(",")+")",t,r),defineProperties(this,{coders:Object.freeze(e.slice())})}defaultValue(){const e=[];this.coders.forEach((t=>{e.push(t.defaultValue())}));const t=this.coders.reduce(((e,t)=>{const r=t.localName;return r&&(e[r]||(e[r]=0),e[r]++),e}),{});return this.coders.forEach(((r,n)=>{let s=r.localName;s&&1===t[s]&&("length"===s&&(s="_length"),null==e[s]&&(e[s]=e[n]))})),Object.freeze(e)}encode(e,t){const r=Typed.dereference(t,"tuple");return pack(e,this.coders,r)}decode(e){return unpack(e,this.coders)}}function id(e){return keccak256(toUtf8Bytes(e))}var COMPRESSED$1="";const FENCED=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]),NSM_MAX=4;function decode_arithmetic(e){let t=0;function r(){return e[t++]<<8|e[t++]}let n=r(),s=1,i=[0,1];for(let e=1;e<n;e++)i.push(s+=r());let a=r(),o=t;t+=a;let c=0,l=0;function u(){return 0==c&&(l=l<<8|e[t++],c=8),l>>--c&1}const h=2**31,d=h>>>1,f=h-1;let g=0;for(let e=0;e<31;e++)g=g<<1|u();let p=[],m=0,y=h;for(;;){let e=Math.floor(((g-m+1)*s-1)/y),t=0,r=n;for(;r-t>1;){let n=t+r>>>1;e<i[n]?r=n:t=n}if(0==t)break;p.push(t);let a=m+Math.floor(y*i[t]/s),o=m+Math.floor(y*i[t+1]/s)-1;for(;0==((a^o)&d);)g=g<<1&f|u(),a=a<<1&f,o=o<<1&f|1;for(;a&~o&536870912;)g=g&d|g<<1&f>>>1|u(),a=a<<1^d,o=(o^d)<<1|d|1;m=a,y=1+o-a}let b=n-4;return p.map((t=>{switch(t-b){case 3:return b+65792+(e[o++]<<16|e[o++]<<8|e[o++]);case 2:return b+256+(e[o++]<<8|e[o++]);case 1:return b+e[o++];default:return t-1}}))}function read_payload(e){let t=0;return()=>e[t++]}function read_compressed_payload(e){return read_payload(decode_arithmetic(unsafe_atob(e)))}function unsafe_atob(e){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((e,r)=>t[e.charCodeAt(0)]=r));let r=e.length,n=new Uint8Array(6*r>>3);for(let s=0,i=0,a=0,o=0;s<r;s++)o=o<<6|t[e.charCodeAt(s)],a+=6,a>=8&&(n[i++]=o>>(a-=8));return n}function signed(e){return 1&e?~e>>1:e>>1}function read_deltas(e,t){let r=Array(e);for(let n=0,s=0;n<e;n++)r[n]=s+=signed(t());return r}function read_sorted(e,t=0){let r=[];for(;;){let n=e(),s=e();if(!s)break;t+=n;for(let e=0;e<s;e++)r.push(t+e);t+=s+1}return r}function read_sorted_arrays(e){return read_array_while((()=>{let t=read_sorted(e);if(t.length)return t}))}function read_mapped(e){let t=[];for(;;){let r=e();if(0==r)break;t.push(read_linear_table(r,e))}for(;;){let r=e()-1;if(r<0)break;t.push(read_replacement_table(r,e))}return t.flat()}function read_array_while(e){let t=[];for(;;){let r=e(t.length);if(!r)break;t.push(r)}return t}function read_transposed(e,t,r){let n=Array(e).fill().map((()=>[]));for(let s=0;s<t;s++)read_deltas(e,r).forEach(((e,t)=>n[t].push(e)));return n}function read_linear_table(e,t){let r=1+t(),n=t(),s=read_array_while(t);return read_transposed(s.length,1+e,t).flatMap(((e,t)=>{let[i,...a]=e;return Array(s[t]).fill().map(((e,t)=>{let s=t*n;return[i+t*r,a.map((e=>e+s))]}))}))}function read_replacement_table(e,t){return read_transposed(1+t(),1+e,t).map((e=>[e[0],e.slice(1)]))}function read_trie(e){let t=[],r=read_sorted(e);return function e({S:r,B:n},s,i){if(4&r&&i===s[s.length-1])return;2&r&&(i=s[s.length-1]);1&r&&t.push(s);for(let t of n)for(let r of t.Q)e(t,[...s,r],i)}(function t(n){let s=e(),i=read_array_while((()=>{let n=read_sorted(e).map((e=>r[e]));if(n.length)return t(n)}));return{S:s,B:i,Q:n}}([]),[]),t}function hex_cp(e){return e.toString(16).toUpperCase().padStart(2,"0")}function quote_cp(e){return`{${hex_cp(e)}}`}function explode_cp(e){let t=[];for(let r=0,n=e.length;r<n;){let n=e.codePointAt(r);r+=n<65536?1:2,t.push(n)}return t}function str_from_cps(e){let t=e.length;if(t<4096)return String.fromCodePoint(...e);let r=[];for(let n=0;n<t;)r.push(String.fromCodePoint(...e.slice(n,n+=4096)));return r.join("")}function compare_arrays(e,t){let r=e.length,n=r-t.length;for(let s=0;0==n&&s<r;s++)n=e[s]-t[s];return n}var COMPRESSED="AEUDTAHBCFQATQDRADAAcgAgADQAFAAsABQAHwAOACQADQARAAoAFwAHABIACAAPAAUACwAFAAwABAAQAAMABwAEAAoABQAIAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACgANAA0AAwAKAAkABAAdAAYAZwDSAdsDJgC0CkMB8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgsj26PTQyy8FfEQ8AY8IPAGcEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiACnwRZEkkVsS7tANAsBG0RuAQLEPABv9HICTUBXigPZwRBApMDOwAamhtaABqEAY8KvKx3LQ4ArAB8UhwEBAVSagD8AEFZADkBIadVj2UMUgx5Il4ANQC9AxIB1BlbEPMAs30CGxlXAhwZKQIECBc6EbsCoxngzv7UzRQA8M0BawL6ZwkN7wABAD33OQRcsgLJCjMCjqUChtw/km+NAsXPAoP2BT84PwURAK0RAvptb6cApQS/OMMey5HJS84UdxpxTPkCogVFITaTOwERAK5pAvkNBOVyA7q3BKlOJSALAgUIBRcEdASpBXqzABXFSWZOawLCOqw//AolCZdvv3dSBkEQGyelEPcMMwG1ATsN7UvYBPEGOwTJH30ZGQ/NlZwIpS3dDO0m4y6hgFoj9SqDBe1L9DzdC01RaA9ZC2UJ4zpjgU4DIQENIosK3Q05CG0Q8wrJaw3lEUUHOQPVSZoApQcBCxEdNRW1JhBirAsJOXcG+xr2C48mrxMpevwF0xohBk0BKRr/AM8u54WwWjFcHE9fBgMLJSPHFKhQIA0lQLd4SBobBxUlqQKRQ3BKh1E2HpMh9jw9DWYuE1F8B/U8BRlPC4E8nkarRQ4R0j6NPUgiSUwsBDV/LC8niwnPD4UMuXxyAVkJIQmxDHETMREXN8UIOQcZLZckJxUIIUaVYJoE958D8xPRAwsFPwlBBxMDtRwtEy4VKQUNgSTXAvM21S6zAo9WgAEXBcsPJR/fEFBH4A7pCJsCZQODJesALRUhABcimwhDYwBfj9hTBS7LCMdqbCN0A2cU52ERcweRDlcHpxwzFb8c4XDIXguGCCijrwlbAXUJmQFfBOMICTVbjKAgQWdTi1gYmyBhQT9d/AIxDGUVn0S9h3gCiw9rEhsBNQFzBzkNAQJ3Ee0RaxCVCOuGBDW1M/g6JQRPIYMgEQonA09szgsnJvkM+GkBoxJiAww0PXfuZ6tgtiQX/QcZMsVBYCHxC5JPzQycGsEYQlQuGeQHvwPzGvMn6kFXBf8DowMTOk0z7gS9C2kIiwk/AEkOoxcH1xhqCnGM0AExiwG3mQNXkYMCb48GNwcLAGcLhwV55QAdAqcIowAFAM8DVwA5Aq0HnQAZAIVBAT0DJy8BIeUCjwOTCDHLAZUvAfMpBBvDDBUA9zduSgLDsQKAamaiBd1YAo4CSTUBTSUEBU5HUQOvceEA2wBLBhPfRwEVq0rLGuNDAd9vKwDHAPsABTUHBUEBzQHzbQC3AV8LMQmis7UBTekpAIMAFWsB1wKJAN0ANQB/8QFTAE0FWfkF0wJPSQERMRgrV2EBuwMfATMBDQB5BsuNpckHHwRtB9MCEBsV4QLvLge1AQMi3xPNQsUCvd5VoWACZIECYkJbTa9bNyACofcCaJgCZgkCn4Q4GwsCZjsCZiYEbgR/A38TA36SOQY5dxc5gjojIwJsHQIyNjgKAm3HAm2u74ozZ0UrAWcA3gDhAEoFB5gMjQD+C8IADbUCdy8CdqI/AnlLQwJ4uh1c20WuRtcCfD8CesgCfQkCfPAFWQUgSABIfWMkAoFtAoAAAoAFAn+uSVhKWxUXSswC0QEC0MxLJwOITwOH5kTFkTIC8qFdAwMDrkvOTC0lA89NTE2vAos/AorYwRsHHUNnBbcCjjcCjlxAl4ECjtkCjlx4UbRTNQpS1FSFApP7ApMMAOkAHFUeVa9V0AYsGymVhjLheGZFOzkCl58C77JYIagAWSUClo8ClnycAKlZrFoJgU0AOwKWtQKWTlxEXNECmcsCmWRcyl0HGQKcmznCOp0CnBYCn5sCnriKAB0PMSoPAp3xAp6SALU9YTRh7wKe0wKgbgGpAp6fHwKeTqVjyGQnJSsCJ68CJn4CoPsCoEwCot0CocQCpi8Cpc4Cp/8AfQKn8mh8aLEAA0lqHGrRAqzjAqyuAq1nAq0CAlcdAlXcArHh1wMfTmyXArK9DQKy6Bds4G1jbUhfAyXNArZcOz9ukAMpRQK4XgK5RxUCuSp3cDZw4QK9GQK72nCWAzIRAr6IcgIDM3ECvhpzInNPAsPLAsMEc4J0SzVFdOADPKcDPJoDPb8CxXwCxkcCxhCJAshpUQLIRALJTwLJLgJknQLd0nh5YXiueSVL0AMYo2cCAmH0GfOVJHsLXpJeuxECz2sCz2wvS1PS8xOfAMatAs9zASnqA04SfksFAtwnAtuKAtJPA1JcA1NfAQEDVYyAiT8AyxbtYEWCHILTgs6DjQLaxwLZ3oQQhEmnPAOGpQAvA2QOhnFZ+QBVAt9lAt64c3cC4i/tFAHzMCcB9JsB8tKHAuvzAulweQLq+QLq5AD5RwG5Au6JAuuclqqXAwLuPwOF4Jh5cOBxoQLzAwBpA44WmZMC9xMDkW4DkocC95gC+dkC+GaaHJqruzebHgOdgwL++gEbADmfHJ+zAwWNA6ZqA6bZANHFAwZqoYiiBQkDDEkCwAA/AwDhQRdTARHzA2sHl2cFAJMtK7evvdsBiZkUfxEEOQH7KQUhDp0JnwCS/SlXxQL3AZ0AtwW5AG8LbUEuFCaNLgFDAYD8AbUmAHUDDgRtACwCFgyhAAAKAj0CagPdA34EkQEgRQUhfAoABQBEABMANhICdwEABdUDa+8KxQIA9wqfJ7+xt+UBkSFBQgHpFH8RNMCJAAQAGwBaAkUChIsABjpTOpSNbQC4Oo860ACNOME63AClAOgAywE6gTo7Ofw5+Tt2iTpbO56JOm85GAFWATMBbAUvNV01njWtNWY1dTW2NcU1gjWRNdI14TWeNa017jX9NbI1wTYCNhE1xjXVNhY2JzXeNe02LjY9Ni41LSE2OjY9Njw2yTcIBJA8VzY4Nt03IDcPNsogN4k3MAoEsDxnNiQ3GTdsOo03IULUQwdC4EMLHA8PCZsobShRVQYA6X8A6bABFCnXAukBowC9BbcAbwNzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgBFLWZAu0BhQCjBcEAbykBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUABavAj626xQAJP0A3etzuf4NNRA7efy2Z9NQrCnC0OSyANz5BBIbJ5IFDR6miIavYS6tprjjmuKebxm5C74Q225X1pkaYYPb6f1DK4k3xMEBb9S2WMjEibTNWhsRJIA+vwNVEiXTE5iXs/wezV66oFLfp9NZGYW+Gk19J2+bCT6Ye2w6LDYdgzKMUabk595eLBCXANz9HUpWbATq9vqXVx9XDg+Pc9Xp4+bsS005SVM/BJBM4687WUuf+Uj9dEi8aDNaPxtpbDxcG1THTImUMZq4UCaaNYpsVqraNyKLJXDYsFZ/5jl7bLRtO88t7P3xZaAxhb5OdPMXqsSkp1WCieG8jXm1U99+blvLlXzPCS+M93VnJCiK+09LfaSaBAVBomyDgJua8dfUzR7ga34IvR2Nvj+A9heJ6lsl1KG4NkI1032Cnff1m1wof2B9oHJK4bi6JkEdSqeNeiuo6QoZZincoc73/TH9SXF8sCE7XyuYyW8WSgbGFCjPV0ihLKhdPs08Tx82fYAkLLc4I2wdl4apY7GU5lHRFzRWJep7Ww3wbeA3qmd59/86P4xuNaqDpygXt6M85glSBHOCGgJDnt+pN9bK7HApMguX6+06RZNjzVmcZJ+wcUrJ9//bpRNxNuKpNl9uFds+S9tdx7LaM5ZkIrPj6nIU9mnbFtVbs9s/uLgl8MVczAwet+iOEzzBlYW7RCMgE6gyNLeq6+1tIx4dpgZnd0DksJS5f+JNDpwwcPNXaaVspq1fbQajOrJgK0ofKtJ1Ne90L6VO4MOl5S886p7u6xo7OLjG8TGL+HU1JXGJgppg4nNbNJ5nlzSpuPYy21JUEcUA94PoFiZfjZue+QnyQ80ekOuZVkxx4g+cvhJfHgNl4hy1/a6+RKcKlar/J29y//EztlbVPHVUeQ1zX86eQVAjR/M3dA9w4W8LfaXp4EgM85wOWasli837PzVMOnsLzR+k3o75/lRPAJSE1xAKQzEi5v10ke+VBvRt1cwQRMd+U5mLCTGVd6XiZtgBG5cDi0w22GKcVNvHiu5LQbZEDVtz0onn7k5+heuKXVsZtSzilkLRAUmjMXEMB3J9YC50XBxPiz53SC+EhnPl9WsKCv92SM/OFFIMJZYfl0WW8tIO3UxYcwdMAj7FSmgrsZ2aAZO03BOhP1bNNZItyXYQFTpC3SG1VuPDqH9GkiCDmE+JwxyIVSO5siDErAOpEXFgjy6PQtOVDj+s6e1r8heWVvmZnTciuf4EiNZzCAd7SOMhXERIOlsHIMG399i9aLTy3m2hRLZjJVDNLS53iGIK11dPqQt0zBDyg6qc7YqkDm2M5Ve6dCWCaCbTXX2rToaIgz6+zh4lYUi/+6nqcFMAkQJKHYLK0wYk5N9szV6xihDbDDFr45lN1K4aCXBq/FitPSud9gLt5ZVn+ZqGX7cwm2z5EGMgfFpIFyhGGuDPmso6TItTMwny+7uPnLCf4W6goFQFV0oQSsc9VfMmVLcLr6ZetDZbaSFTLqnSO/bIPjA3/zAUoqgGFAEQS4IhuMzEp2I3jJzbzkk/IEmyax+rhZTwd6f+CGtwPixu8IvzACquPWPREu9ZvGkUzpRwvRRuaNN6cr0W1wWits9ICdYJ7ltbgMiSL3sTPeufgNcVqMVWFkCPDH4jG2jA0XcVgQj62Cb29v9f/z/+2KbYvIv/zzjpQAPkliaVDzNrW57TZ/ZOyZD0nlfMmAIBIAGAI0D3k/mdN4xr9v85ZbZbbqfH2jGd5hUqNZWwl5SPfoGmfElmazUIeNL1j/mkF7VNAzTq4jNt8JoQ11NQOcmhprXoxSxfRGJ9LDEOAQ+dmxAQH90iti9e2u/MoeuaGcDTHoC+xsmEeWmxEKefQuIzHbpw5Tc5cEocboAD09oipWQhtTO1wivf/O+DRe2rpl/E9wlrzBorjJsOeG1B/XPW4EaJEFdNlECEZga5ZoGRHXgYouGRuVkm8tDESiEyFNo+3s5M5puSdTyUL2llnINVHEt91XUNW4ewdMgJ4boJfEyt/iY5WXqbA+A2Fkt5Z0lutiWhe9nZIyIUjyXDC3UsaG1t+eNx6z4W/OYoTB7A6x+dNSTOi9AInctbESqm5gvOLww7OWXPrmHwVZasrl4eD113pm+JtT7JVOvnCXqdzzdTRHgJ0PiGTFYW5Gvt9R9LD6Lzfs0v/TZZHSmyVNq7viIHE6DBK7Qp07Iz55EM8SYtQvZf/obBniTWi5C2/ovHfw4VndkE5XYdjOhCMRjDeOEfXeN/CwfGduiUIfsoFeUxXeQXba7c7972XNv8w+dTjjUM0QeNAReW+J014dKAD/McQYXT7c0GQPIkn3Ll6R7gGjuiQoZD0TEeEqQpKoZ15g/0OPQI17QiSv9AUROa/V/TQN3dvLArec3RrsYlvBm1b8LWzltdugsC50lNKYLEp2a+ZZYqPejULRlOJh5zj/LVMyTDvwKhMxxwuDkxJ1QpoNI0OTWLom4Z71SNzI9TV1iXJrIu9Wcnd+MCaAw8o1jSXd94YU/1gnkrC9BUEOtQvEIQ7g0i6h+KL2JKk8Ydl7HruvgWMSAmNe+LshGhV4qnWHhO9/RIPQzY1tHRj2VqOyNsDpK0cww+56AdDC4gsWwY0XxoucIWIqs/GcwnWqlaT0KPr8mbK5U94/301i1WLt4YINTVvCFBrFZbIbY8eycOdeJ2teD5IfPLCRg7jjcFTwlMFNl9zdh/o3E/hHPwj7BWg0MU09pPrBLbrCgm54A6H+I6v27+jL5gkjWg/iYdks9jbfVP5y/n0dlgWEMlKasl7JvFZd56LfybW1eeaVO0gxTfXZwD8G4SI116yx7UKVRgui6Ya1YpixqXeNLc8IxtAwCU5IhwQgn+NqHnRaDv61CxKhOq4pOX7M6pkA+Pmpd4j1vn6ACUALoLLc4vpXci8VidLxzm7qFBe7s+quuJs6ETYmnpgS3LwSZxPIltgBDXz8M1k/W2ySNv2f9/NPhxLGK2D21dkHeSGmenRT3Yqcdl0m/h3OYr8V+lXNYGf8aCCpd4bWjE4QIPj7vUKN4Nrfs7ML6Y2OyS830JCnofg/k7lpFpt4SqZc5HGg1HCOrHvOdC8bP6FGDbE/VV0mX4IakzbdS/op+Kt3G24/8QbBV7y86sGSQ/vZzU8FXs7u6jIvwchsEP2BpIhW3G8uWNwa3HmjfH/ZjhhCWvluAcF+nMf14ClKg5hGgtPLJ98ueNAkc5Hs2WZlk2QHvfreCK1CCGO6nMZVSb99VM/ajr8WHTte9JSmkXq/i/U943HEbdzW6Re/S88dKgg8pGOLlAeNiqrcLkUR3/aClFpMXcOUP3rmETcWSfMXZE3TUOi8i+fqRnTYLflVx/Vb/6GJ7eIRZUA6k3RYR3iFSK9c4iDdNwJuZL2FKz/IK5VimcNWEqdXjSoxSgmF0UPlDoUlNrPcM7ftmA8Y9gKiqKEHuWN+AZRIwtVSxye2Kf8rM3lhJ5XcBXU9n4v0Oy1RU2M+4qM8AQPVwse8ErNSob5oFPWxuqZnVzo1qB/IBxkM3EVUKFUUlO3e51259GgNcJbCmlvrdjtoTW7rChm1wyCKzpCTwozUUEOIcWLneRLgMXh+SjGSFkAllzbGS5HK7LlfCMRNRDSvbQPjcXaenNYxCvu2Qyznz6StuxVj66SgI0T8B6/sfHAJYZaZ78thjOSIFumNWLQbeZixDCCC+v0YBtkxiBB3jefHqZ/dFHU+crbj6OvS1x/JDD7vlm7zOVPwpUC01nhxZuY/63E7g";const S0=44032,L0=4352,V0=4449,T0=4519,L_COUNT=19,V_COUNT=21,T_COUNT=28,N_COUNT=21*T_COUNT,S_COUNT=19*N_COUNT,S1=S0+S_COUNT,L1=L0+19,V1=V0+21,T1$1=T0+T_COUNT;function unpack_cc(e){return e>>24&255}function unpack_cp(e){return 16777215&e}let SHIFTED_RANK,EXCLUSIONS,DECOMP,RECOMP;function init$1(){let e=read_compressed_payload(COMPRESSED);SHIFTED_RANK=new Map(read_sorted_arrays(e).flatMap(((e,t)=>e.map((e=>[e,t+1<<24]))))),EXCLUSIONS=new Set(read_sorted(e)),DECOMP=new Map,RECOMP=new Map;for(let[t,r]of read_mapped(e)){if(!EXCLUSIONS.has(t)&&2==r.length){let[e,n]=r,s=RECOMP.get(e);s||(s=new Map,RECOMP.set(e,s)),s.set(n,t)}DECOMP.set(t,r.reverse())}}function is_hangul(e){return e>=S0&&e<S1}function compose_pair(e,t){if(e>=L0&&e<L1&&t>=V0&&t<V1)return S0+(e-L0)*N_COUNT+(t-V0)*T_COUNT;if(is_hangul(e)&&t>T0&&t<T1$1&&(e-S0)%T_COUNT==0)return e+(t-T0);{let r=RECOMP.get(e);return r&&(r=r.get(t),r)?r:-1}}function decomposed(e){SHIFTED_RANK||init$1();let t=[],r=[],n=!1;function s(e){let r=SHIFTED_RANK.get(e);r&&(n=!0,e|=r),t.push(e)}for(let n of e)for(;;){if(n<128)t.push(n);else if(is_hangul(n)){let e=n-S0,t=e%N_COUNT/T_COUNT|0,r=e%T_COUNT;s(L0+(e/N_COUNT|0)),s(V0+t),r>0&&s(T0+r)}else{let e=DECOMP.get(n);e?r.push(...e):s(n)}if(!r.length)break;n=r.pop()}if(n&&t.length>1){let e=unpack_cc(t[0]);for(let r=1;r<t.length;r++){let n=unpack_cc(t[r]);if(0==n||e<=n){e=n;continue}let s=r-1;for(;;){let r=t[s+1];if(t[s+1]=t[s],t[s]=r,!s)break;if(e=unpack_cc(t[--s]),e<=n)break}e=unpack_cc(t[r])}}return t}function composed_from_decomposed(e){let t=[],r=[],n=-1,s=0;for(let i of e){let e=unpack_cc(i),a=unpack_cp(i);if(-1==n)0==e?n=a:t.push(a);else if(s>0&&s>=e)0==e?(t.push(n,...r),r.length=0,n=a):r.push(a),s=e;else{let i=compose_pair(n,a);i>=0?n=i:0==s&&0==e?(t.push(n),n=a):(r.push(a),s=e)}}return n>=0&&t.push(n,...r),t}function nfd(e){return decomposed(e).map(unpack_cp)}function nfc(e){return composed_from_decomposed(decomposed(e))}const HYPHEN=45,STOP_CH=".",FE0F=65039,UNIQUE_PH=1,Array_from=e=>Array.from(e);function group_has_cp(e,t){return e.P.has(t)||e.Q.has(t)}class Emoji extends Array{get is_emoji(){return!0}}let MAPPED,IGNORED,CM,NSM,ESCAPE,GROUPS,WHOLE_VALID,WHOLE_MAP,VALID,EMOJI_LIST,EMOJI_ROOT;function init(){if(MAPPED)return;let e=read_compressed_payload(COMPRESSED$1);const t=()=>read_sorted(e),r=()=>new Set(t()),n=(e,t)=>t.forEach((t=>e.add(t)));MAPPED=new Map(read_mapped(e)),IGNORED=r(),CM=t(),NSM=new Set(t().map((e=>CM[e]))),CM=new Set(CM),ESCAPE=r(),r();let s=read_sorted_arrays(e),i=e();const a=()=>{let e=new Set;return t().forEach((t=>n(e,s[t]))),n(e,t()),e};GROUPS=read_array_while((t=>{let r=read_array_while(e).map((e=>e+96));if(r.length){let n=t>=i;return r[0]-=32,r=str_from_cps(r),n&&(r=`Restricted[${r}]`),{N:r,P:a(),Q:a(),M:!e(),R:n}}})),WHOLE_VALID=r(),WHOLE_MAP=new Map;let o=t().concat(Array_from(WHOLE_VALID)).sort(((e,t)=>e-t));o.forEach(((t,r)=>{let n=e(),s=o[r]=n?o[r-n]:{V:[],M:new Map};s.V.push(t),WHOLE_VALID.has(t)||WHOLE_MAP.set(t,s)}));for(let{V:e,M:t}of new Set(WHOLE_MAP.values())){let r=[];for(let t of e){let e=GROUPS.filter((e=>group_has_cp(e,t))),s=r.find((({G:t})=>e.some((e=>t.has(e)))));s||(s={G:new Set,V:[]},r.push(s)),s.V.push(t),n(s.G,e)}let s=r.flatMap((e=>Array_from(e.G)));for(let{G:e,V:n}of r){let r=new Set(s.filter((t=>!e.has(t))));for(let e of n)t.set(e,r)}}VALID=new Set;let c=new Set;const l=e=>VALID.has(e)?c.add(e):VALID.add(e);for(let e of GROUPS){for(let t of e.P)l(t);for(let t of e.Q)l(t)}for(let e of VALID)WHOLE_MAP.has(e)||c.has(e)||WHOLE_MAP.set(e,UNIQUE_PH);n(VALID,nfd(VALID)),EMOJI_LIST=read_trie(e).map((e=>Emoji.from(e))).sort(compare_arrays),EMOJI_ROOT=new Map;for(let e of EMOJI_LIST){let t=[EMOJI_ROOT];for(let r of e){let e=t.map((e=>{let t=e.get(r);return t||(t=new Map,e.set(r,t)),t}));r===FE0F?t.push(...e):t=e}for(let r of t)r.V=e}}function quoted_cp(e){return(should_escape(e)?"":`${bidi_qq(safe_str_from_cps([e]))} `)+quote_cp(e)}function bidi_qq(e){return`"${e}"‎`}function check_label_extension(e){if(e.length>=4&&e[2]==HYPHEN&&e[3]==HYPHEN)throw new Error(`invalid label extension: "${str_from_cps(e.slice(0,4))}"`)}function check_leading_underscore(e){for(let t=e.lastIndexOf(95);t>0;)if(95!==e[--t])throw new Error("underscore allowed only at start")}function check_fenced(e){let t=e[0],r=FENCED.get(t);if(r)throw error_placement(`leading ${r}`);let n=e.length,s=-1;for(let i=1;i<n;i++){t=e[i];let n=FENCED.get(t);if(n){if(s==i)throw error_placement(`${r} + ${n}`);s=i+1,r=n}}if(s==n)throw error_placement(`trailing ${r}`)}function safe_str_from_cps(e,t=1/0,r=quote_cp){let n=[];is_combining_mark(e[0])&&n.push("◌"),e.length>t&&(t>>=1,e=[...e.slice(0,t),8230,...e.slice(-t)]);let s=0,i=e.length;for(let t=0;t<i;t++){let i=e[t];should_escape(i)&&(n.push(str_from_cps(e.slice(s,t))),n.push(r(i)),s=t+1)}return n.push(str_from_cps(e.slice(s,i))),n.join("")}function is_combining_mark(e){return init(),CM.has(e)}function should_escape(e){return init(),ESCAPE.has(e)}function ens_normalize(e){return flatten(split(e,nfc,filter_fe0f))}function split(e,t,r){if(!e)return[];init();let n=0;return e.split(STOP_CH).map((e=>{let s=explode_cp(e),i={input:s,offset:n};n+=s.length+1;try{let e,n=i.tokens=tokens_from_str(s,t,r),a=n.length;if(!a)throw new Error("empty label");let o=i.output=n.flat();if(check_leading_underscore(o),!(i.emoji=a>1||n[0].is_emoji)&&o.every((e=>e<128)))check_label_extension(o),e="ASCII";else{let t=n.flatMap((e=>e.is_emoji?[]:e));if(t.length){if(CM.has(o[0]))throw error_placement("leading combining mark");for(let e=1;e<a;e++){let t=n[e];if(!t.is_emoji&&CM.has(t[0]))throw error_placement(`emoji + combining mark: "${str_from_cps(n[e-1])} + ${safe_str_from_cps([t[0]])}"`)}check_fenced(o);let r=Array_from(new Set(t)),[s]=determine_group(r);check_group(s,t),check_whole(s,r),e=s.N}else e="Emoji"}i.type=e}catch(e){i.error=e}return i}))}function check_whole(e,t){let r,n=[];for(let e of t){let t=WHOLE_MAP.get(e);if(t===UNIQUE_PH)return;if(t){let n=t.M.get(e);if(r=r?r.filter((e=>n.has(e))):Array_from(n),!r.length)return}else n.push(e)}if(r)for(let t of r)if(n.every((e=>group_has_cp(t,e))))throw new Error(`whole-script confusable: ${e.N}/${t.N}`)}function determine_group(e){let t=GROUPS;for(let r of e){let e=t.filter((e=>group_has_cp(e,r)));if(!e.length)throw GROUPS.some((e=>group_has_cp(e,r)))?error_group_member(t[0],r):error_disallowed(r);if(t=e,1==e.length)break}return t}function flatten(e){return e.map((({input:t,error:r,output:n})=>{if(r){let n=r.message;throw new Error(1==e.length?n:`Invalid label ${bidi_qq(safe_str_from_cps(t,63))}: ${n}`)}return str_from_cps(n)})).join(STOP_CH)}function error_disallowed(e){return new Error(`disallowed character: ${quoted_cp(e)}`)}function error_group_member(e,t){let r=quoted_cp(t),n=GROUPS.find((e=>e.P.has(t)));return n&&(r=`${n.N} ${r}`),new Error(`illegal mixture: ${e.N} + ${r}`)}function error_placement(e){return new Error(`illegal placement: ${e}`)}function check_group(e,t){for(let r of t)if(!group_has_cp(e,r))throw error_group_member(e,r);if(e.M){let e=nfd(t);for(let t=1,r=e.length;t<r;t++)if(NSM.has(e[t])){let n=t+1;for(let s;n<r&&NSM.has(s=e[n]);n++)for(let r=t;r<n;r++)if(e[r]==s)throw new Error(`duplicate non-spacing marks: ${quoted_cp(s)}`);if(n-t>NSM_MAX)throw new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(e.slice(t-1,n)))} (${n-t}/${NSM_MAX})`);t=n}}}function tokens_from_str(e,t,r){let n=[],s=[];for(e=e.slice().reverse();e.length;){let i=consume_emoji_reversed(e);if(i)s.length&&(n.push(t(s)),s=[]),n.push(r(i));else{let t=e.pop();if(VALID.has(t))s.push(t);else{let e=MAPPED.get(t);if(e)s.push(...e);else if(!IGNORED.has(t))throw error_disallowed(t)}}}return s.length&&n.push(t(s)),n}function filter_fe0f(e){return e.filter((e=>e!=FE0F))}function consume_emoji_reversed(e,t){let r,n=EMOJI_ROOT,s=e.length;for(;s&&(n=n.get(e[--s]),n);){let{V:i}=n;i&&(r=i,t&&t.push(...e.slice(s).reverse()),e.length=s)}return r}const Zeros=new Uint8Array(32);function checkComponent(e){return assertArgument(0!==e.length,"invalid ENS name; empty component","comp",e),e}function ensNameSplit(e){const t=toUtf8Bytes(ensNormalize(e)),r=[];if(0===e.length)return r;let n=0;for(let e=0;e<t.length;e++){46===t[e]&&(r.push(checkComponent(t.slice(n,e))),n=e+1)}return assertArgument(n<t.length,"invalid ENS name; empty component","name",e),r.push(checkComponent(t.slice(n))),r}function ensNormalize(e){try{if(0===e.length)throw new Error("empty label");return ens_normalize(e)}catch(t){assertArgument(!1,`invalid ENS name (${t.message})`,"name",e)}}function isValidName(e){try{return 0!==ensNameSplit(e).length}catch(e){}return!1}function namehash(e){assertArgument("string"==typeof e,"invalid ENS name; not a string","name",e),assertArgument(e.length,"invalid ENS name (empty label)","name",e);let t=Zeros;const r=ensNameSplit(e);for(;r.length;)t=keccak256(concat([t,keccak256(r.pop())]));return hexlify(t)}function dnsEncode(e,t){const r=null!=t?t:63;return assertArgument(r<=255,"DNS encoded label cannot exceed 255","length",r),hexlify(concat(ensNameSplit(e).map((t=>{assertArgument(t.length<=r,`label ${JSON.stringify(e)} exceeds ${r} bytes`,"name",e);const n=new Uint8Array(t.length+1);return n.set(t,1),n[0]=n.length-1,n}))))+"00"}function accessSetify(e,t){return{address:getAddress(e),storageKeys:t.map(((e,t)=>(assertArgument(isHexString(e,32),"invalid slot",`storageKeys[${t}]`,e),e.toLowerCase())))}}function accessListify(e){if(Array.isArray(e))return e.map(((t,r)=>Array.isArray(t)?(assertArgument(2===t.length,"invalid slot set",`value[${r}]`,t),accessSetify(t[0],t[1])):(assertArgument(null!=t&&"object"==typeof t,"invalid address-slot set","value",e),accessSetify(t.address,t.storageKeys))));assertArgument(null!=e&&"object"==typeof e,"invalid access list","value",e);const t=Object.keys(e).map((t=>{const r=e[t].reduce(((e,t)=>(e[t]=!0,e)),{});return accessSetify(t,Object.keys(r).sort())}));return t.sort(((e,t)=>e.address.localeCompare(t.address))),t}function computeAddress(e){let t;return t="string"==typeof e?SigningKey.computePublicKey(e,!1):e.publicKey,getAddress(keccak256("0x"+t.substring(4)).substring(26))}function recoverAddress(e,t){return computeAddress(SigningKey.recoverPublicKey(e,t))}Zeros.fill(0);const BN_0$4=BigInt(0),BN_2$2=BigInt(2),BN_27=BigInt(27),BN_28=BigInt(28),BN_35=BigInt(35),BN_MAX_UINT=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),BLOB_SIZE=131072;function getVersionedHash(e,t){let r=e.toString(16);for(;r.length<2;)r="0"+r;return r+=sha256(t).substring(4),"0x"+r}function handleAddress(e){return"0x"===e?null:getAddress(e)}function handleAccessList(e,t){try{return accessListify(e)}catch(r){assertArgument(!1,r.message,t,e)}}function handleNumber(e,t){return"0x"===e?0:getNumber(e,t)}function handleUint(e,t){if("0x"===e)return BN_0$4;const r=getBigInt(e,t);return assertArgument(r<=BN_MAX_UINT,"value exceeds uint size",t,r),r}function formatNumber(e,t){const r=getBigInt(e,"value"),n=toBeArray(r);return assertArgument(n.length<=32,"value too large",`tx.${t}`,r),n}function formatAccessList(e){return accessListify(e).map((e=>[e.address,e.storageKeys]))}function formatHashes(e,t){assertArgument(Array.isArray(e),`invalid ${t}`,"value",e);for(let t=0;t<e.length;t++)assertArgument(isHexString(e[t],32),"invalid ${ param } hash",`value[${t}]`,e[t]);return e}function _parseLegacy(e){const t=decodeRlp(e);assertArgument(Array.isArray(t)&&(9===t.length||6===t.length),"invalid field count for legacy transaction","data",e);const r={type:0,nonce:handleNumber(t[0],"nonce"),gasPrice:handleUint(t[1],"gasPrice"),gasLimit:handleUint(t[2],"gasLimit"),to:handleAddress(t[3]),value:handleUint(t[4],"value"),data:hexlify(t[5]),chainId:BN_0$4};if(6===t.length)return r;const n=handleUint(t[6],"v"),s=handleUint(t[7],"r"),i=handleUint(t[8],"s");if(s===BN_0$4&&i===BN_0$4)r.chainId=n;else{let e=(n-BN_35)/BN_2$2;e<BN_0$4&&(e=BN_0$4),r.chainId=e,assertArgument(e!==BN_0$4||n===BN_27||n===BN_28,"non-canonical legacy v","v",t[6]),r.signature=Signature.from({r:zeroPadValue(t[7],32),s:zeroPadValue(t[8],32),v:n})}return r}function _serializeLegacy(e,t){const r=[formatNumber(e.nonce,"nonce"),formatNumber(e.gasPrice||0,"gasPrice"),formatNumber(e.gasLimit,"gasLimit"),e.to||"0x",formatNumber(e.value,"value"),e.data];let n=BN_0$4;if(e.chainId!=BN_0$4)n=getBigInt(e.chainId,"tx.chainId"),assertArgument(!t||null==t.networkV||t.legacyChainId===n,"tx.chainId/sig.v mismatch","sig",t);else if(e.signature){const t=e.signature.legacyChainId;null!=t&&(n=t)}if(!t)return n!==BN_0$4&&(r.push(toBeArray(n)),r.push("0x"),r.push("0x")),encodeRlp(r);let s=BigInt(27+t.yParity);return n!==BN_0$4?s=Signature.getChainIdV(n,t.v):BigInt(t.v)!==s&&assertArgument(!1,"tx.chainId/sig.v mismatch","sig",t),r.push(toBeArray(s)),r.push(toBeArray(t.r)),r.push(toBeArray(t.s)),encodeRlp(r)}function _parseEipSignature(e,t){let r;try{if(r=handleNumber(t[0],"yParity"),0!==r&&1!==r)throw new Error("bad yParity")}catch(e){assertArgument(!1,"invalid yParity","yParity",t[0])}const n=zeroPadValue(t[1],32),s=zeroPadValue(t[2],32),i=Signature.from({r:n,s:s,yParity:r});e.signature=i}function _parseEip1559(e){const t=decodeRlp(getBytes(e).slice(1));assertArgument(Array.isArray(t)&&(9===t.length||12===t.length),"invalid field count for transaction type: 2","data",hexlify(e));const r={type:2,chainId:handleUint(t[0],"chainId"),nonce:handleNumber(t[1],"nonce"),maxPriorityFeePerGas:handleUint(t[2],"maxPriorityFeePerGas"),maxFeePerGas:handleUint(t[3],"maxFeePerGas"),gasPrice:null,gasLimit:handleUint(t[4],"gasLimit"),to:handleAddress(t[5]),value:handleUint(t[6],"value"),data:hexlify(t[7]),accessList:handleAccessList(t[8],"accessList")};return 9===t.length||_parseEipSignature(r,t.slice(9)),r}function _serializeEip1559(e,t){const r=[formatNumber(e.chainId,"chainId"),formatNumber(e.nonce,"nonce"),formatNumber(e.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),formatNumber(e.maxFeePerGas||0,"maxFeePerGas"),formatNumber(e.gasLimit,"gasLimit"),e.to||"0x",formatNumber(e.value,"value"),e.data,formatAccessList(e.accessList||[])];return t&&(r.push(formatNumber(t.yParity,"yParity")),r.push(toBeArray(t.r)),r.push(toBeArray(t.s))),concat(["0x02",encodeRlp(r)])}function _parseEip2930(e){const t=decodeRlp(getBytes(e).slice(1));assertArgument(Array.isArray(t)&&(8===t.length||11===t.length),"invalid field count for transaction type: 1","data",hexlify(e));const r={type:1,chainId:handleUint(t[0],"chainId"),nonce:handleNumber(t[1],"nonce"),gasPrice:handleUint(t[2],"gasPrice"),gasLimit:handleUint(t[3],"gasLimit"),to:handleAddress(t[4]),value:handleUint(t[5],"value"),data:hexlify(t[6]),accessList:handleAccessList(t[7],"accessList")};return 8===t.length||_parseEipSignature(r,t.slice(8)),r}function _serializeEip2930(e,t){const r=[formatNumber(e.chainId,"chainId"),formatNumber(e.nonce,"nonce"),formatNumber(e.gasPrice||0,"gasPrice"),formatNumber(e.gasLimit,"gasLimit"),e.to||"0x",formatNumber(e.value,"value"),e.data,formatAccessList(e.accessList||[])];return t&&(r.push(formatNumber(t.yParity,"recoveryParam")),r.push(toBeArray(t.r)),r.push(toBeArray(t.s))),concat(["0x01",encodeRlp(r)])}function _parseEip4844(e){let t=decodeRlp(getBytes(e).slice(1)),r="3",n=null;if(4===t.length&&Array.isArray(t[0])){r="3 (network format)";const e=t[1],s=t[2],i=t[3];assertArgument(Array.isArray(e),"invalid network format: blobs not an array","fields[1]",e),assertArgument(Array.isArray(s),"invalid network format: commitments not an array","fields[2]",s),assertArgument(Array.isArray(i),"invalid network format: proofs not an array","fields[3]",i),assertArgument(e.length===s.length,"invalid network format: blobs/commitments length mismatch","fields",t),assertArgument(e.length===i.length,"invalid network format: blobs/proofs length mismatch","fields",t),n=[];for(let r=0;r<t[1].length;r++)n.push({data:e[r],commitment:s[r],proof:i[r]});t=t[0]}assertArgument(Array.isArray(t)&&(11===t.length||14===t.length),`invalid field count for transaction type: ${r}`,"data",hexlify(e));const s={type:3,chainId:handleUint(t[0],"chainId"),nonce:handleNumber(t[1],"nonce"),maxPriorityFeePerGas:handleUint(t[2],"maxPriorityFeePerGas"),maxFeePerGas:handleUint(t[3],"maxFeePerGas"),gasPrice:null,gasLimit:handleUint(t[4],"gasLimit"),to:handleAddress(t[5]),value:handleUint(t[6],"value"),data:hexlify(t[7]),accessList:handleAccessList(t[8],"accessList"),maxFeePerBlobGas:handleUint(t[9],"maxFeePerBlobGas"),blobVersionedHashes:t[10]};n&&(s.blobs=n),assertArgument(null!=s.to,`invalid address for transaction type: ${r}`,"data",e),assertArgument(Array.isArray(s.blobVersionedHashes),"invalid blobVersionedHashes: must be an array","data",e);for(let t=0;t<s.blobVersionedHashes.length;t++)assertArgument(isHexString(s.blobVersionedHashes[t],32),`invalid blobVersionedHash at index ${t}: must be length 32`,"data",e);return 11===t.length||_parseEipSignature(s,t.slice(11)),s}function _serializeEip4844(e,t,r){const n=[formatNumber(e.chainId,"chainId"),formatNumber(e.nonce,"nonce"),formatNumber(e.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),formatNumber(e.maxFeePerGas||0,"maxFeePerGas"),formatNumber(e.gasLimit,"gasLimit"),e.to||ZeroAddress,formatNumber(e.value,"value"),e.data,formatAccessList(e.accessList||[]),formatNumber(e.maxFeePerBlobGas||0,"maxFeePerBlobGas"),formatHashes(e.blobVersionedHashes||[],"blobVersionedHashes")];return t&&(n.push(formatNumber(t.yParity,"yParity")),n.push(toBeArray(t.r)),n.push(toBeArray(t.s)),r)?concat(["0x03",encodeRlp([n,r.map((e=>e.data)),r.map((e=>e.commitment)),r.map((e=>e.proof))])]):concat(["0x03",encodeRlp(n)])}class Transaction{#z;#q;#R;#W;#Z;#Y;#X;#ee;#te;#re;#ne;#se;#ie;#ae;#oe;#ce;get type(){return this.#z}set type(e){switch(e){case null:this.#z=null;break;case 0:case"legacy":this.#z=0;break;case 1:case"berlin":case"eip-2930":this.#z=1;break;case 2:case"london":case"eip-1559":this.#z=2;break;case 3:case"cancun":case"eip-4844":this.#z=3;break;default:assertArgument(!1,"unsupported transaction type","type",e)}}get typeName(){switch(this.type){case 0:return"legacy";case 1:return"eip-2930";case 2:return"eip-1559";case 3:return"eip-4844"}return null}get to(){const e=this.#q;return null==e&&3===this.type?ZeroAddress:e}set to(e){this.#q=null==e?null:getAddress(e)}get nonce(){return this.#W}set nonce(e){this.#W=getNumber(e,"value")}get gasLimit(){return this.#Z}set gasLimit(e){this.#Z=getBigInt(e)}get gasPrice(){const e=this.#Y;return null!=e||0!==this.type&&1!==this.type?e:BN_0$4}set gasPrice(e){this.#Y=null==e?null:getBigInt(e,"gasPrice")}get maxPriorityFeePerGas(){const e=this.#X;return null==e?2===this.type||3===this.type?BN_0$4:null:e}set maxPriorityFeePerGas(e){this.#X=null==e?null:getBigInt(e,"maxPriorityFeePerGas")}get maxFeePerGas(){const e=this.#ee;return null==e?2===this.type||3===this.type?BN_0$4:null:e}set maxFeePerGas(e){this.#ee=null==e?null:getBigInt(e,"maxFeePerGas")}get data(){return this.#R}set data(e){this.#R=hexlify(e)}get value(){return this.#te}set value(e){this.#te=getBigInt(e,"value")}get chainId(){return this.#re}set chainId(e){this.#re=getBigInt(e)}get signature(){return this.#ne||null}set signature(e){this.#ne=null==e?null:Signature.from(e)}get accessList(){const e=this.#se||null;return null==e?1===this.type||2===this.type||3===this.type?[]:null:e}set accessList(e){this.#se=null==e?null:accessListify(e)}get maxFeePerBlobGas(){const e=this.#ie;return null==e&&3===this.type?BN_0$4:e}set maxFeePerBlobGas(e){this.#ie=null==e?null:getBigInt(e,"maxFeePerBlobGas")}get blobVersionedHashes(){let e=this.#ae;return null==e&&3===this.type?[]:e}set blobVersionedHashes(e){if(null!=e){assertArgument(Array.isArray(e),"blobVersionedHashes must be an Array","value",e),e=e.slice();for(let t=0;t<e.length;t++)assertArgument(isHexString(e[t],32),"invalid blobVersionedHash",`value[${t}]`,e[t])}this.#ae=e}get blobs(){return null==this.#ce?null:this.#ce.map((e=>Object.assign({},e)))}set blobs(e){if(null==e)return void(this.#ce=null);const t=[],r=[];for(let n=0;n<e.length;n++){const s=e[n];if(isBytesLike(s)){assert(this.#oe,"adding a raw blob requires a KZG library","UNSUPPORTED_OPERATION",{operation:"set blobs()"});let e=getBytes(s);if(assertArgument(e.length<=131072,"blob is too large",`blobs[${n}]`,s),131072!==e.length){const t=new Uint8Array(131072);t.set(e),e=t}const i=this.#oe.blobToKzgCommitment(e),a=hexlify(this.#oe.computeBlobKzgProof(e,i));t.push({data:hexlify(e),commitment:hexlify(i),proof:a}),r.push(getVersionedHash(1,i))}else{const e=hexlify(s.commitment);t.push({data:hexlify(s.data),commitment:e,proof:hexlify(s.proof)}),r.push(getVersionedHash(1,e))}}this.#ce=t,this.#ae=r}get kzg(){return this.#oe}set kzg(e){this.#oe=e}constructor(){this.#z=null,this.#q=null,this.#W=0,this.#Z=BN_0$4,this.#Y=null,this.#X=null,this.#ee=null,this.#R="0x",this.#te=BN_0$4,this.#re=BN_0$4,this.#ne=null,this.#se=null,this.#ie=null,this.#ae=null,this.#ce=null,this.#oe=null}get hash(){return null==this.signature?null:keccak256(this.#le(!0,!1))}get unsignedHash(){return keccak256(this.unsignedSerialized)}get from(){return null==this.signature?null:recoverAddress(this.unsignedHash,this.signature)}get fromPublicKey(){return null==this.signature?null:SigningKey.recoverPublicKey(this.unsignedHash,this.signature)}isSigned(){return null!=this.signature}#le(e,t){assert(!e||null!=this.signature,"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized","UNSUPPORTED_OPERATION",{operation:".serialized"});const r=e?this.signature:null;switch(this.inferType()){case 0:return _serializeLegacy(this,r);case 1:return _serializeEip2930(this,r);case 2:return _serializeEip1559(this,r);case 3:return _serializeEip4844(this,r,t?this.blobs:null)}assert(!1,"unsupported transaction type","UNSUPPORTED_OPERATION",{operation:".serialized"})}get serialized(){return this.#le(!0,!0)}get unsignedSerialized(){return this.#le(!1,!1)}inferType(){const e=this.inferTypes();return e.indexOf(2)>=0?2:e.pop()}inferTypes(){const e=null!=this.gasPrice,t=null!=this.maxFeePerGas||null!=this.maxPriorityFeePerGas,r=null!=this.accessList,n=null!=this.#ie||this.#ae;null!=this.maxFeePerGas&&null!=this.maxPriorityFeePerGas&&assert(this.maxFeePerGas>=this.maxPriorityFeePerGas,"priorityFee cannot be more than maxFee","BAD_DATA",{value:this}),assert(!t||0!==this.type&&1!==this.type,"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas","BAD_DATA",{value:this}),assert(0!==this.type||!r,"legacy transaction cannot have accessList","BAD_DATA",{value:this});const s=[];return null!=this.type?s.push(this.type):t?s.push(2):e?(s.push(1),r||s.push(0)):r?(s.push(1),s.push(2)):(n&&this.to||(s.push(0),s.push(1),s.push(2)),s.push(3)),s.sort(),s}isLegacy(){return 0===this.type}isBerlin(){return 1===this.type}isLondon(){return 2===this.type}isCancun(){return 3===this.type}clone(){return Transaction.from(this)}toJSON(){const e=e=>null==e?null:e.toString();return{type:this.type,to:this.to,data:this.data,nonce:this.nonce,gasLimit:e(this.gasLimit),gasPrice:e(this.gasPrice),maxPriorityFeePerGas:e(this.maxPriorityFeePerGas),maxFeePerGas:e(this.maxFeePerGas),value:e(this.value),chainId:e(this.chainId),sig:this.signature?this.signature.toJSON():null,accessList:this.accessList}}static from(e){if(null==e)return new Transaction;if("string"==typeof e){const t=getBytes(e);if(t[0]>=127)return Transaction.from(_parseLegacy(t));switch(t[0]){case 1:return Transaction.from(_parseEip2930(t));case 2:return Transaction.from(_parseEip1559(t));case 3:return Transaction.from(_parseEip4844(t))}assert(!1,"unsupported transaction type","UNSUPPORTED_OPERATION",{operation:"from"})}const t=new Transaction;return null!=e.type&&(t.type=e.type),null!=e.to&&(t.to=e.to),null!=e.nonce&&(t.nonce=e.nonce),null!=e.gasLimit&&(t.gasLimit=e.gasLimit),null!=e.gasPrice&&(t.gasPrice=e.gasPrice),null!=e.maxPriorityFeePerGas&&(t.maxPriorityFeePerGas=e.maxPriorityFeePerGas),null!=e.maxFeePerGas&&(t.maxFeePerGas=e.maxFeePerGas),null!=e.maxFeePerBlobGas&&(t.maxFeePerBlobGas=e.maxFeePerBlobGas),null!=e.data&&(t.data=e.data),null!=e.value&&(t.value=e.value),null!=e.chainId&&(t.chainId=e.chainId),null!=e.signature&&(t.signature=Signature.from(e.signature)),null!=e.accessList&&(t.accessList=e.accessList),null!=e.blobVersionedHashes&&(t.blobVersionedHashes=e.blobVersionedHashes),null!=e.kzg&&(t.kzg=e.kzg),null!=e.blobs&&(t.blobs=e.blobs),null!=e.hash&&(assertArgument(t.isSigned(),"unsigned transaction cannot define '.hash'","tx",e),assertArgument(t.hash===e.hash,"hash mismatch","tx",e)),null!=e.from&&(assertArgument(t.isSigned(),"unsigned transaction cannot define '.from'","tx",e),assertArgument(t.from.toLowerCase()===(e.from||"").toLowerCase(),"from mismatch","tx",e)),t}}function hashMessage(e){return"string"==typeof e&&(e=toUtf8Bytes(e)),keccak256(concat([toUtf8Bytes(MessagePrefix),toUtf8Bytes(String(e.length)),e]))}function verifyMessage(e,t){return recoverAddress(hashMessage(e),t)}const regexBytes=new RegExp("^bytes([0-9]+)$"),regexNumber=new RegExp("^(u?int)([0-9]*)$"),regexArray=new RegExp("^(.*)\\[([0-9]*)\\]$");function _pack(e,t,r){switch(e){case"address":return getBytes(r?zeroPadValue(t,32):getAddress(t));case"string":return toUtf8Bytes(t);case"bytes":return getBytes(t);case"bool":return t=t?"0x01":"0x00",getBytes(r?zeroPadValue(t,32):t)}let n=e.match(regexNumber);if(n){let s="int"===n[1],i=parseInt(n[2]||"256");return assertArgument((!n[2]||n[2]===String(i))&&i%8==0&&0!==i&&i<=256,"invalid number type","type",e),r&&(i=256),s&&(t=toTwos(t,i)),getBytes(zeroPadValue(toBeArray(t),i/8))}if(n=e.match(regexBytes),n){const s=parseInt(n[1]);return assertArgument(String(s)===n[1]&&0!==s&&s<=32,"invalid bytes type","type",e),assertArgument(dataLength(t)===s,`invalid value for ${e}`,"value",t),r?getBytes(zeroPadBytes(t,32)):t}if(n=e.match(regexArray),n&&Array.isArray(t)){const r=n[1];assertArgument(parseInt(n[2]||String(t.length))===t.length,`invalid array length for ${e}`,"value",t);const s=[];return t.forEach((function(e){s.push(_pack(r,e,!0))})),getBytes(concat(s))}assertArgument(!1,"invalid type","type",e)}function solidityPacked(e,t){assertArgument(e.length===t.length,"wrong number of values; expected ${ types.length }","values",t);const r=[];return e.forEach((function(e,n){r.push(_pack(e,t[n]))})),hexlify(concat(r))}function solidityPackedKeccak256(e,t){return keccak256(solidityPacked(e,t))}function solidityPackedSha256(e,t){return sha256(solidityPacked(e,t))}const padding=new Uint8Array(32);padding.fill(0);const BN__1=BigInt(-1),BN_0$3=BigInt(0),BN_1$1=BigInt(1),BN_MAX_UINT256=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function hexPadRight(e){const t=getBytes(e),r=t.length%32;return r?concat([t,padding.slice(r)]):hexlify(t)}const hexTrue=toBeHex(BN_1$1,32),hexFalse=toBeHex(BN_0$3,32),domainFieldTypes={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},domainFieldNames=["name","version","chainId","verifyingContract","salt"];function checkString(e){return function(t){return assertArgument("string"==typeof t,`invalid domain value for ${JSON.stringify(e)}`,`domain.${e}`,t),t}}const domainChecks={name:checkString("name"),version:checkString("version"),chainId:function(e){const t=getBigInt(e,"domain.chainId");return assertArgument(t>=0,"invalid chain ID","domain.chainId",e),Number.isSafeInteger(t)?Number(t):toQuantity(t)},verifyingContract:function(e){try{return getAddress(e).toLowerCase()}catch(e){}assertArgument(!1,'invalid domain value "verifyingContract"',"domain.verifyingContract",e)},salt:function(e){const t=getBytes(e,"domain.salt");return assertArgument(32===t.length,'invalid domain value "salt"',"domain.salt",e),hexlify(t)}};function getBaseEncoder(e){{const t=e.match(/^(u?)int(\d+)$/);if(t){const r=""===t[1],n=parseInt(t[2]);assertArgument(n%8==0&&0!==n&&n<=256&&t[2]===String(n),"invalid numeric width","type",e);const s=mask(BN_MAX_UINT256,r?n-1:n),i=r?(s+BN_1$1)*BN__1:BN_0$3;return function(t){const n=getBigInt(t,"value");return assertArgument(n>=i&&n<=s,`value out-of-bounds for ${e}`,"value",n),toBeHex(r?toTwos(n,256):n,32)}}}{const t=e.match(/^bytes(\d+)$/);if(t){const r=parseInt(t[1]);return assertArgument(0!==r&&r<=32&&t[1]===String(r),"invalid bytes width","type",e),function(t){return assertArgument(getBytes(t).length===r,`invalid length for ${e}`,"value",t),hexPadRight(t)}}}switch(e){case"address":return function(e){return zeroPadValue(getAddress(e),32)};case"bool":return function(e){return e?hexTrue:hexFalse};case"bytes":return function(e){return keccak256(e)};case"string":return function(e){return id(e)}}return null}function encodeType(e,t){return`${e}(${t.map((({name:e,type:t})=>t+" "+e)).join(",")})`}function splitArray(e){const t=e.match(/^([^\x5b]*)((\x5b\d*\x5d)*)(\x5b(\d*)\x5d)$/);return t?{base:t[1],index:t[2]+t[4],array:{base:t[1],prefix:t[1]+t[2],count:t[5]?parseInt(t[5]):-1}}:{base:e}}class TypedDataEncoder{primaryType;#ue;get types(){return JSON.parse(this.#ue)}#he;#de;constructor(e){this.#he=new Map,this.#de=new Map;const t=new Map,r=new Map,n=new Map,s={};Object.keys(e).forEach((i=>{s[i]=e[i].map((({name:t,type:r})=>{let{base:n,index:s}=splitArray(r);return"int"!==n||e.int||(n="int256"),"uint"!==n||e.uint||(n="uint256"),{name:t,type:n+(s||"")}})),t.set(i,new Set),r.set(i,[]),n.set(i,new Set)})),this.#ue=JSON.stringify(s);for(const n in s){const i=new Set;for(const a of s[n]){assertArgument(!i.has(a.name),`duplicate variable name ${JSON.stringify(a.name)} in ${JSON.stringify(n)}`,"types",e),i.add(a.name);const s=splitArray(a.type).base;assertArgument(s!==n,`circular type reference to ${JSON.stringify(s)}`,"types",e);getBaseEncoder(s)||(assertArgument(r.has(s),`unknown type ${JSON.stringify(s)}`,"types",e),r.get(s).push(n),t.get(n).add(s))}}const i=Array.from(r.keys()).filter((e=>0===r.get(e).length));assertArgument(0!==i.length,"missing primary type","types",e),assertArgument(1===i.length,`ambiguous primary types or unused types: ${i.map((e=>JSON.stringify(e))).join(", ")}`,"types",e),defineProperties(this,{primaryType:i[0]}),function s(i,a){assertArgument(!a.has(i),`circular type reference to ${JSON.stringify(i)}`,"types",e),a.add(i);for(const e of t.get(i))if(r.has(e)){s(e,a);for(const t of a)n.get(t).add(e)}a.delete(i)}(this.primaryType,new Set);for(const[e,t]of n){const r=Array.from(t);r.sort(),this.#he.set(e,encodeType(e,s[e])+r.map((e=>encodeType(e,s[e]))).join(""))}}getEncoder(e){let t=this.#de.get(e);return t||(t=this.#fe(e),this.#de.set(e,t)),t}#fe(e){{const t=getBaseEncoder(e);if(t)return t}const t=splitArray(e).array;if(t){const e=t.prefix,r=this.getEncoder(e);return n=>{assertArgument(-1===t.count||t.count===n.length,`array length mismatch; expected length ${t.count}`,"value",n);let s=n.map(r);return this.#he.has(e)&&(s=s.map(keccak256)),keccak256(concat(s))}}const r=this.types[e];if(r){const t=id(this.#he.get(e));return e=>{const n=r.map((({name:t,type:r})=>{const n=this.getEncoder(r)(e[t]);return this.#he.has(r)?keccak256(n):n}));return n.unshift(t),concat(n)}}assertArgument(!1,`unknown type: ${e}`,"type",e)}encodeType(e){const t=this.#he.get(e);return assertArgument(t,`unknown type: ${JSON.stringify(e)}`,"name",e),t}encodeData(e,t){return this.getEncoder(e)(t)}hashStruct(e,t){return keccak256(this.encodeData(e,t))}encode(e){return this.encodeData(this.primaryType,e)}hash(e){return this.hashStruct(this.primaryType,e)}_visit(e,t,r){if(getBaseEncoder(e))return r(e,t);const n=splitArray(e).array;if(n)return assertArgument(-1===n.count||n.count===t.length,`array length mismatch; expected length ${n.count}`,"value",t),t.map((e=>this._visit(n.prefix,e,r)));const s=this.types[e];if(s)return s.reduce(((e,{name:n,type:s})=>(e[n]=this._visit(s,t[n],r),e)),{});assertArgument(!1,`unknown type: ${e}`,"type",e)}visit(e,t){return this._visit(this.primaryType,e,t)}static from(e){return new TypedDataEncoder(e)}static getPrimaryType(e){return TypedDataEncoder.from(e).primaryType}static hashStruct(e,t,r){return TypedDataEncoder.from(t).hashStruct(e,r)}static hashDomain(e){const t=[];for(const r in e){if(null==e[r])continue;const n=domainFieldTypes[r];assertArgument(n,`invalid typed-data domain key: ${JSON.stringify(r)}`,"domain",e),t.push({name:r,type:n})}return t.sort(((e,t)=>domainFieldNames.indexOf(e.name)-domainFieldNames.indexOf(t.name))),TypedDataEncoder.hashStruct("EIP712Domain",{EIP712Domain:t},e)}static encode(e,t,r){return concat(["0x1901",TypedDataEncoder.hashDomain(e),TypedDataEncoder.from(t).hash(r)])}static hash(e,t,r){return keccak256(TypedDataEncoder.encode(e,t,r))}static async resolveNames(e,t,r,n){e=Object.assign({},e);for(const t in e)null==e[t]&&delete e[t];const s={};e.verifyingContract&&!isHexString(e.verifyingContract,20)&&(s[e.verifyingContract]="0x");const i=TypedDataEncoder.from(t);i.visit(r,((e,t)=>("address"!==e||isHexString(t,20)||(s[t]="0x"),t)));for(const e in s)s[e]=await n(e);return e.verifyingContract&&s[e.verifyingContract]&&(e.verifyingContract=s[e.verifyingContract]),{domain:e,value:r=i.visit(r,((e,t)=>"address"===e&&s[t]?s[t]:t))}}static getPayload(e,t,r){TypedDataEncoder.hashDomain(e);const n={},s=[];domainFieldNames.forEach((t=>{const r=e[t];null!=r&&(n[t]=domainChecks[t](r),s.push({name:t,type:domainFieldTypes[t]}))}));const i=TypedDataEncoder.from(t);t=i.types;const a=Object.assign({},t);return assertArgument(null==a.EIP712Domain,"types must not contain EIP712Domain type","types.EIP712Domain",t),a.EIP712Domain=s,i.encode(r),{types:a,domain:n,primaryType:i.primaryType,message:i.visit(r,((e,t)=>{if(e.match(/^bytes(\d*)/))return hexlify(getBytes(t));if(e.match(/^u?int/))return getBigInt(t).toString();switch(e){case"address":return t.toLowerCase();case"bool":return!!t;case"string":return assertArgument("string"==typeof t,"invalid string","value",t),t}assertArgument(!1,"unsupported type","type",e)}))}}}function verifyTypedData(e,t,r,n){return recoverAddress(TypedDataEncoder.hash(e,t,r),n)}function setify(e){const t=new Set;return e.forEach((e=>t.add(e))),Object.freeze(t)}const _kwVisibDeploy="external public payable override",KwVisibDeploy=setify(_kwVisibDeploy.split(" ")),_kwVisib="constant external internal payable private public pure view override",KwVisib=setify(_kwVisib.split(" ")),_kwTypes="constructor error event fallback function receive struct",KwTypes=setify(_kwTypes.split(" ")),_kwModifiers="calldata memory storage payable indexed",KwModifiers=setify(_kwModifiers.split(" ")),_kwOther="tuple returns",_keywords=[_kwTypes,_kwModifiers,_kwOther,_kwVisib].join(" "),Keywords=setify(_keywords.split(" ")),SimpleTokens={"(":"OPEN_PAREN",")":"CLOSE_PAREN","[":"OPEN_BRACKET","]":"CLOSE_BRACKET",",":"COMMA","@":"AT"},regexWhitespacePrefix=new RegExp("^(\\s*)"),regexNumberPrefix=new RegExp("^([0-9]+)"),regexIdPrefix=new RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)"),regexId=new RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)$"),regexType=new RegExp("^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$");class TokenString{#U;#ge;get offset(){return this.#U}get length(){return this.#ge.length-this.#U}constructor(e){this.#U=0,this.#ge=e.slice()}clone(){return new TokenString(this.#ge)}reset(){this.#U=0}#pe(e=0,t=0){return new TokenString(this.#ge.slice(e,t).map((t=>Object.freeze(Object.assign({},t,{match:t.match-e,linkBack:t.linkBack-e,linkNext:t.linkNext-e})))))}popKeyword(e){const t=this.peek();if("KEYWORD"!==t.type||!e.has(t.text))throw new Error(`expected keyword ${t.text}`);return this.pop().text}popType(e){if(this.peek().type!==e){const t=this.peek();throw new Error(`expected ${e}; got ${t.type} ${JSON.stringify(t.text)}`)}return this.pop().text}popParen(){const e=this.peek();if("OPEN_PAREN"!==e.type)throw new Error("bad start");const t=this.#pe(this.#U+1,e.match+1);return this.#U=e.match+1,t}popParams(){const e=this.peek();if("OPEN_PAREN"!==e.type)throw new Error("bad start");const t=[];for(;this.#U<e.match-1;){const e=this.peek().linkNext;t.push(this.#pe(this.#U+1,e)),this.#U=e}return this.#U=e.match+1,t}peek(){if(this.#U>=this.#ge.length)throw new Error("out-of-bounds");return this.#ge[this.#U]}peekKeyword(e){const t=this.peekType("KEYWORD");return null!=t&&e.has(t)?t:null}peekType(e){if(0===this.length)return null;const t=this.peek();return t.type===e?t.text:null}pop(){const e=this.peek();return this.#U++,e}toString(){const e=[];for(let t=this.#U;t<this.#ge.length;t++){const r=this.#ge[t];e.push(`${r.type}:${r.text}`)}return`<TokenString ${e.join(" ")}>`}}function lex(e){const t=[],r=t=>{const r=i<e.length?JSON.stringify(e[i]):"$EOI";throw new Error(`invalid token ${r} at ${i}: ${t}`)};let n=[],s=[],i=0;for(;i<e.length;){let a=e.substring(i),o=a.match(regexWhitespacePrefix);o&&(i+=o[1].length,a=e.substring(i));const c={depth:n.length,linkBack:-1,linkNext:-1,match:-1,type:"",text:"",offset:i,value:-1};t.push(c);let l=SimpleTokens[a[0]]||"";if(l){if(c.type=l,c.text=a[0],i++,"OPEN_PAREN"===l)n.push(t.length-1),s.push(t.length-1);else if("CLOSE_PAREN"==l)0===n.length&&r("no matching open bracket"),c.match=n.pop(),t[c.match].match=t.length-1,c.depth--,c.linkBack=s.pop(),t[c.linkBack].linkNext=t.length-1;else if("COMMA"===l)c.linkBack=s.pop(),t[c.linkBack].linkNext=t.length-1,s.push(t.length-1);else if("OPEN_BRACKET"===l)c.type="BRACKET";else if("CLOSE_BRACKET"===l){let e=t.pop().text;if(t.length>0&&"NUMBER"===t[t.length-1].type){const r=t.pop().text;e=r+e,t[t.length-1].value=getNumber(r)}if(0===t.length||"BRACKET"!==t[t.length-1].type)throw new Error("missing opening bracket");t[t.length-1].text+=e}}else if(o=a.match(regexIdPrefix),o){if(c.text=o[1],i+=c.text.length,Keywords.has(c.text)){c.type="KEYWORD";continue}if(c.text.match(regexType)){c.type="TYPE";continue}c.type="ID"}else{if(o=a.match(regexNumberPrefix),!o)throw new Error(`unexpected token ${JSON.stringify(a[0])} at position ${i}`);c.text=o[1],c.type="NUMBER",i+=c.text.length}}return new TokenString(t.map((e=>Object.freeze(e))))}function allowSingle(e,t){let r=[];for(const n in t.keys())e.has(n)&&r.push(n);if(r.length>1)throw new Error(`conflicting types: ${r.join(", ")}`)}function consumeName(e,t){if(t.peekKeyword(KwTypes)){const r=t.pop().text;if(r!==e)throw new Error(`expected ${e}, got ${r}`)}return t.popType("ID")}function consumeKeywords(e,t){const r=new Set;for(;;){const n=e.peekType("KEYWORD");if(null==n||t&&!t.has(n))break;if(e.pop(),r.has(n))throw new Error(`duplicate keywords: ${JSON.stringify(n)}`);r.add(n)}return Object.freeze(r)}function consumeMutability(e){let t=consumeKeywords(e,KwVisib);return allowSingle(t,setify("constant payable nonpayable".split(" "))),allowSingle(t,setify("pure view payable nonpayable".split(" "))),t.has("view")?"view":t.has("pure")?"pure":t.has("payable")?"payable":t.has("nonpayable")?"nonpayable":t.has("constant")?"view":"nonpayable"}function consumeParams(e,t){return e.popParams().map((e=>ParamType.from(e,t)))}function consumeGas(e){if(e.peekType("AT")){if(e.pop(),e.peekType("NUMBER"))return getBigInt(e.pop().text);throw new Error("invalid gas")}return null}function consumeEoi(e){if(e.length)throw new Error(`unexpected tokens at offset ${e.offset}: ${e.toString()}`)}const regexArrayType=new RegExp(/^(.*)\[([0-9]*)\]$/);function verifyBasicType(e){const t=e.match(regexType);if(assertArgument(t,"invalid type","type",e),"uint"===e)return"uint256";if("int"===e)return"int256";if(t[2]){const r=parseInt(t[2]);assertArgument(0!==r&&r<=32,"invalid bytes length","type",e)}else if(t[3]){const r=parseInt(t[3]);assertArgument(0!==r&&r<=256&&r%8==0,"invalid numeric width","type",e)}return e}const _guard$2={},internal$1=Symbol.for("_ethers_internal"),ParamTypeInternal="_ParamTypeInternal",ErrorFragmentInternal="_ErrorInternal",EventFragmentInternal="_EventInternal",ConstructorFragmentInternal="_ConstructorInternal",FallbackFragmentInternal="_FallbackInternal",FunctionFragmentInternal="_FunctionInternal",StructFragmentInternal="_StructInternal";class ParamType{name;type;baseType;indexed;components;arrayLength;arrayChildren;constructor(e,t,r,n,s,i,a,o){if(assertPrivate(e,_guard$2,"ParamType"),Object.defineProperty(this,internal$1,{value:ParamTypeInternal}),i&&(i=Object.freeze(i.slice())),"array"===n){if(null==a||null==o)throw new Error("")}else if(null!=a||null!=o)throw new Error("");if("tuple"===n){if(null==i)throw new Error("")}else if(null!=i)throw new Error("");defineProperties(this,{name:t,type:r,baseType:n,indexed:s,components:i,arrayLength:a,arrayChildren:o})}format(e){if(null==e&&(e="sighash"),"json"===e){const t=this.name||"";if(this.isArray()){const e=JSON.parse(this.arrayChildren.format("json"));return e.name=t,e.type+=`[${this.arrayLength<0?"":String(this.arrayLength)}]`,JSON.stringify(e)}const r={type:"tuple"===this.baseType?"tuple":this.type,name:t};return"boolean"==typeof this.indexed&&(r.indexed=this.indexed),this.isTuple()&&(r.components=this.components.map((t=>JSON.parse(t.format(e))))),JSON.stringify(r)}let t="";return this.isArray()?(t+=this.arrayChildren.format(e),t+=`[${this.arrayLength<0?"":String(this.arrayLength)}]`):this.isTuple()?t+="("+this.components.map((t=>t.format(e))).join("full"===e?", ":",")+")":t+=this.type,"sighash"!==e&&(!0===this.indexed&&(t+=" indexed"),"full"===e&&this.name&&(t+=" "+this.name)),t}isArray(){return"array"===this.baseType}isTuple(){return"tuple"===this.baseType}isIndexable(){return null!=this.indexed}walk(e,t){if(this.isArray()){if(!Array.isArray(e))throw new Error("invalid array value");if(-1!==this.arrayLength&&e.length!==this.arrayLength)throw new Error("array is wrong length");const r=this;return e.map((e=>r.arrayChildren.walk(e,t)))}if(this.isTuple()){if(!Array.isArray(e))throw new Error("invalid tuple value");if(e.length!==this.components.length)throw new Error("array is wrong length");const r=this;return e.map(((e,n)=>r.components[n].walk(e,t)))}return t(this.type,e)}#me(e,t,r,n){if(this.isArray()){if(!Array.isArray(t))throw new Error("invalid array value");if(-1!==this.arrayLength&&t.length!==this.arrayLength)throw new Error("array is wrong length");const s=this.arrayChildren,i=t.slice();return i.forEach(((t,n)=>{s.#me(e,t,r,(e=>{i[n]=e}))})),void n(i)}if(this.isTuple()){const s=this.components;let i;if(Array.isArray(t))i=t.slice();else{if(null==t||"object"!=typeof t)throw new Error("invalid tuple value");i=s.map((e=>{if(!e.name)throw new Error("cannot use object value with unnamed components");if(!(e.name in t))throw new Error(`missing value for component ${e.name}`);return t[e.name]}))}if(i.length!==this.components.length)throw new Error("array is wrong length");return i.forEach(((t,n)=>{s[n].#me(e,t,r,(e=>{i[n]=e}))})),void n(i)}const s=r(this.type,t);s.then?e.push(async function(){n(await s)}()):n(s)}async walkAsync(e,t){const r=[],n=[e];return this.#me(r,e,t,(e=>{n[0]=e})),r.length&&await Promise.all(r),n[0]}static from(e,t){if(ParamType.isParamType(e))return e;if("string"==typeof e)try{return ParamType.from(lex(e),t)}catch(t){assertArgument(!1,"invalid param type","obj",e)}else if(e instanceof TokenString){let r="",n="",s=null;consumeKeywords(e,setify(["tuple"])).has("tuple")||e.peekType("OPEN_PAREN")?(n="tuple",s=e.popParams().map((e=>ParamType.from(e))),r=`tuple(${s.map((e=>e.format())).join(",")})`):(r=verifyBasicType(e.popType("TYPE")),n=r);let i=null,a=null;for(;e.length&&e.peekType("BRACKET");){const t=e.pop();i=new ParamType(_guard$2,"",r,n,null,s,a,i),a=t.value,r+=t.text,n="array",s=null}let o=null;if(consumeKeywords(e,KwModifiers).has("indexed")){if(!t)throw new Error("");o=!0}const c=e.peekType("ID")?e.pop().text:"";if(e.length)throw new Error("leftover tokens");return new ParamType(_guard$2,c,r,n,o,s,a,i)}const r=e.name;assertArgument(!r||"string"==typeof r&&r.match(regexId),"invalid name","obj.name",r);let n=e.indexed;null!=n&&(assertArgument(t,"parameter cannot be indexed","obj.indexed",e.indexed),n=!!n);let s=e.type,i=s.match(regexArrayType);if(i){const t=parseInt(i[2]||"-1"),a=ParamType.from({type:i[1],components:e.components});return new ParamType(_guard$2,r||"",s,"array",n,null,t,a)}if("tuple"===s||s.startsWith("tuple(")||s.startsWith("(")){const t=null!=e.components?e.components.map((e=>ParamType.from(e))):null;return new ParamType(_guard$2,r||"",s,"tuple",n,t,null,null)}return s=verifyBasicType(e.type),new ParamType(_guard$2,r||"",s,s,n,null,null,null)}static isParamType(e){return e&&e[internal$1]===ParamTypeInternal}}class Fragment{type;inputs;constructor(e,t,r){assertPrivate(e,_guard$2,"Fragment"),defineProperties(this,{type:t,inputs:r=Object.freeze(r.slice())})}static from(e){if("string"==typeof e){try{Fragment.from(JSON.parse(e))}catch(e){}return Fragment.from(lex(e))}if(e instanceof TokenString){switch(e.peekKeyword(KwTypes)){case"constructor":return ConstructorFragment.from(e);case"error":return ErrorFragment.from(e);case"event":return EventFragment.from(e);case"fallback":case"receive":return FallbackFragment.from(e);case"function":return FunctionFragment.from(e);case"struct":return StructFragment.from(e)}}else if("object"==typeof e){switch(e.type){case"constructor":return ConstructorFragment.from(e);case"error":return ErrorFragment.from(e);case"event":return EventFragment.from(e);case"fallback":case"receive":return FallbackFragment.from(e);case"function":return FunctionFragment.from(e);case"struct":return StructFragment.from(e)}assert(!1,`unsupported type: ${e.type}`,"UNSUPPORTED_OPERATION",{operation:"Fragment.from"})}assertArgument(!1,"unsupported frgament object","obj",e)}static isConstructor(e){return ConstructorFragment.isFragment(e)}static isError(e){return ErrorFragment.isFragment(e)}static isEvent(e){return EventFragment.isFragment(e)}static isFunction(e){return FunctionFragment.isFragment(e)}static isStruct(e){return StructFragment.isFragment(e)}}class NamedFragment extends Fragment{name;constructor(e,t,r,n){super(e,t,n),assertArgument("string"==typeof r&&r.match(regexId),"invalid identifier","name",r),n=Object.freeze(n.slice()),defineProperties(this,{name:r})}}function joinParams(e,t){return"("+t.map((t=>t.format(e))).join("full"===e?", ":",")+")"}class ErrorFragment extends NamedFragment{constructor(e,t,r){super(e,"error",t,r),Object.defineProperty(this,internal$1,{value:"_ErrorInternal"})}get selector(){return id(this.format("sighash")).substring(0,10)}format(e){if(null==e&&(e="sighash"),"json"===e)return JSON.stringify({type:"error",name:this.name,inputs:this.inputs.map((t=>JSON.parse(t.format(e))))});const t=[];return"sighash"!==e&&t.push("error"),t.push(this.name+joinParams(e,this.inputs)),t.join(" ")}static from(e){if(ErrorFragment.isFragment(e))return e;if("string"==typeof e)return ErrorFragment.from(lex(e));if(e instanceof TokenString){const t=consumeName("error",e),r=consumeParams(e);return consumeEoi(e),new ErrorFragment(_guard$2,t,r)}return new ErrorFragment(_guard$2,e.name,e.inputs?e.inputs.map(ParamType.from):[])}static isFragment(e){return e&&"_ErrorInternal"===e[internal$1]}}class EventFragment extends NamedFragment{anonymous;constructor(e,t,r,n){super(e,"event",t,r),Object.defineProperty(this,internal$1,{value:"_EventInternal"}),defineProperties(this,{anonymous:n})}get topicHash(){return id(this.format("sighash"))}format(e){if(null==e&&(e="sighash"),"json"===e)return JSON.stringify({type:"event",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map((t=>JSON.parse(t.format(e))))});const t=[];return"sighash"!==e&&t.push("event"),t.push(this.name+joinParams(e,this.inputs)),"sighash"!==e&&this.anonymous&&t.push("anonymous"),t.join(" ")}static getTopicHash(e,t){t=(t||[]).map((e=>ParamType.from(e)));return new EventFragment(_guard$2,e,t,!1).topicHash}static from(e){if(EventFragment.isFragment(e))return e;if("string"==typeof e)try{return EventFragment.from(lex(e))}catch(t){assertArgument(!1,"invalid event fragment","obj",e)}else if(e instanceof TokenString){const t=consumeName("event",e),r=consumeParams(e,!0),n=!!consumeKeywords(e,setify(["anonymous"])).has("anonymous");return consumeEoi(e),new EventFragment(_guard$2,t,r,n)}return new EventFragment(_guard$2,e.name,e.inputs?e.inputs.map((e=>ParamType.from(e,!0))):[],!!e.anonymous)}static isFragment(e){return e&&"_EventInternal"===e[internal$1]}}class ConstructorFragment extends Fragment{payable;gas;constructor(e,t,r,n,s){super(e,t,r),Object.defineProperty(this,internal$1,{value:"_ConstructorInternal"}),defineProperties(this,{payable:n,gas:s})}format(e){if(assert(null!=e&&"sighash"!==e,"cannot format a constructor for sighash","UNSUPPORTED_OPERATION",{operation:"format(sighash)"}),"json"===e)return JSON.stringify({type:"constructor",stateMutability:this.payable?"payable":"undefined",payable:this.payable,gas:null!=this.gas?this.gas:void 0,inputs:this.inputs.map((t=>JSON.parse(t.format(e))))});const t=[`constructor${joinParams(e,this.inputs)}`];return this.payable&&t.push("payable"),null!=this.gas&&t.push(`@${this.gas.toString()}`),t.join(" ")}static from(e){if(ConstructorFragment.isFragment(e))return e;if("string"==typeof e)try{return ConstructorFragment.from(lex(e))}catch(t){assertArgument(!1,"invalid constuctor fragment","obj",e)}else if(e instanceof TokenString){consumeKeywords(e,setify(["constructor"]));const t=consumeParams(e),r=!!consumeKeywords(e,KwVisibDeploy).has("payable"),n=consumeGas(e);return consumeEoi(e),new ConstructorFragment(_guard$2,"constructor",t,r,n)}return new ConstructorFragment(_guard$2,"constructor",e.inputs?e.inputs.map(ParamType.from):[],!!e.payable,null!=e.gas?e.gas:null)}static isFragment(e){return e&&"_ConstructorInternal"===e[internal$1]}}class FallbackFragment extends Fragment{payable;constructor(e,t,r){super(e,"fallback",t),Object.defineProperty(this,internal$1,{value:"_FallbackInternal"}),defineProperties(this,{payable:r})}format(e){const t=0===this.inputs.length?"receive":"fallback";if("json"===e){const e=this.payable?"payable":"nonpayable";return JSON.stringify({type:t,stateMutability:e})}return`${t}()${this.payable?" payable":""}`}static from(e){if(FallbackFragment.isFragment(e))return e;if("string"==typeof e)try{return FallbackFragment.from(lex(e))}catch(t){assertArgument(!1,"invalid fallback fragment","obj",e)}else if(e instanceof TokenString){const t=e.toString();assertArgument(e.peekKeyword(setify(["fallback","receive"])),"type must be fallback or receive","obj",t);if("receive"===e.popKeyword(setify(["fallback","receive"]))){const t=consumeParams(e);return assertArgument(0===t.length,"receive cannot have arguments","obj.inputs",t),consumeKeywords(e,setify(["payable"])),consumeEoi(e),new FallbackFragment(_guard$2,[],!0)}let r=consumeParams(e);r.length?assertArgument(1===r.length&&"bytes"===r[0].type,"invalid fallback inputs","obj.inputs",r.map((e=>e.format("minimal"))).join(", ")):r=[ParamType.from("bytes")];const n=consumeMutability(e);if(assertArgument("nonpayable"===n||"payable"===n,"fallback cannot be constants","obj.stateMutability",n),consumeKeywords(e,setify(["returns"])).has("returns")){const t=consumeParams(e);assertArgument(1===t.length&&"bytes"===t[0].type,"invalid fallback outputs","obj.outputs",t.map((e=>e.format("minimal"))).join(", "))}return consumeEoi(e),new FallbackFragment(_guard$2,r,"payable"===n)}if("receive"===e.type)return new FallbackFragment(_guard$2,[],!0);if("fallback"===e.type){const t=[ParamType.from("bytes")],r="payable"===e.stateMutability;return new FallbackFragment(_guard$2,t,r)}assertArgument(!1,"invalid fallback description","obj",e)}static isFragment(e){return e&&"_FallbackInternal"===e[internal$1]}}class FunctionFragment extends NamedFragment{constant;outputs;stateMutability;payable;gas;constructor(e,t,r,n,s,i){super(e,"function",t,n),Object.defineProperty(this,internal$1,{value:"_FunctionInternal"});defineProperties(this,{constant:"view"===r||"pure"===r,gas:i,outputs:s=Object.freeze(s.slice()),payable:"payable"===r,stateMutability:r})}get selector(){return id(this.format("sighash")).substring(0,10)}format(e){if(null==e&&(e="sighash"),"json"===e)return JSON.stringify({type:"function",name:this.name,constant:this.constant,stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:null!=this.gas?this.gas:void 0,inputs:this.inputs.map((t=>JSON.parse(t.format(e)))),outputs:this.outputs.map((t=>JSON.parse(t.format(e))))});const t=[];return"sighash"!==e&&t.push("function"),t.push(this.name+joinParams(e,this.inputs)),"sighash"!==e&&("nonpayable"!==this.stateMutability&&t.push(this.stateMutability),this.outputs&&this.outputs.length&&(t.push("returns"),t.push(joinParams(e,this.outputs))),null!=this.gas&&t.push(`@${this.gas.toString()}`)),t.join(" ")}static getSelector(e,t){t=(t||[]).map((e=>ParamType.from(e)));return new FunctionFragment(_guard$2,e,"view",t,[],null).selector}static from(e){if(FunctionFragment.isFragment(e))return e;if("string"==typeof e)try{return FunctionFragment.from(lex(e))}catch(t){assertArgument(!1,"invalid function fragment","obj",e)}else if(e instanceof TokenString){const t=consumeName("function",e),r=consumeParams(e),n=consumeMutability(e);let s=[];consumeKeywords(e,setify(["returns"])).has("returns")&&(s=consumeParams(e));const i=consumeGas(e);return consumeEoi(e),new FunctionFragment(_guard$2,t,n,r,s,i)}let t=e.stateMutability;return null==t&&(t="payable","boolean"==typeof e.constant?(t="view",e.constant||(t="payable","boolean"!=typeof e.payable||e.payable||(t="nonpayable"))):"boolean"!=typeof e.payable||e.payable||(t="nonpayable")),new FunctionFragment(_guard$2,e.name,t,e.inputs?e.inputs.map(ParamType.from):[],e.outputs?e.outputs.map(ParamType.from):[],null!=e.gas?e.gas:null)}static isFragment(e){return e&&"_FunctionInternal"===e[internal$1]}}class StructFragment extends NamedFragment{constructor(e,t,r){super(e,"struct",t,r),Object.defineProperty(this,internal$1,{value:"_StructInternal"})}format(){throw new Error("@TODO")}static from(e){if("string"==typeof e)try{return StructFragment.from(lex(e))}catch(t){assertArgument(!1,"invalid struct fragment","obj",e)}else if(e instanceof TokenString){const t=consumeName("struct",e),r=consumeParams(e);return consumeEoi(e),new StructFragment(_guard$2,t,r)}return new StructFragment(_guard$2,e.name,e.inputs?e.inputs.map(ParamType.from):[])}static isFragment(e){return e&&"_StructInternal"===e[internal$1]}}const PanicReasons$1=new Map;PanicReasons$1.set(0,"GENERIC_PANIC"),PanicReasons$1.set(1,"ASSERT_FALSE"),PanicReasons$1.set(17,"OVERFLOW"),PanicReasons$1.set(18,"DIVIDE_BY_ZERO"),PanicReasons$1.set(33,"ENUM_RANGE_ERROR"),PanicReasons$1.set(34,"BAD_STORAGE_DATA"),PanicReasons$1.set(49,"STACK_UNDERFLOW"),PanicReasons$1.set(50,"ARRAY_RANGE_ERROR"),PanicReasons$1.set(65,"OUT_OF_MEMORY"),PanicReasons$1.set(81,"UNINITIALIZED_FUNCTION_CALL");const paramTypeBytes=new RegExp(/^bytes([0-9]*)$/),paramTypeNumber=new RegExp(/^(u?int)([0-9]*)$/);let defaultCoder=null,defaultMaxInflation=1024;function getBuiltinCallException(e,t,r,n){let s="missing revert data",i=null;let a=null;if(r){s="execution reverted";const e=getBytes(r);if(r=hexlify(r),0===e.length)s+=" (no data present; likely require(false) occurred",i="require(false)";else if(e.length%32!=4)s+=" (could not decode reason; invalid data length)";else if("0x08c379a0"===hexlify(e.slice(0,4)))try{i=n.decode(["string"],e.slice(4))[0],a={signature:"Error(string)",name:"Error",args:[i]},s+=`: ${JSON.stringify(i)}`}catch(e){s+=" (could not decode reason; invalid string data)"}else if("0x4e487b71"===hexlify(e.slice(0,4)))try{const t=Number(n.decode(["uint256"],e.slice(4))[0]);a={signature:"Panic(uint256)",name:"Panic",args:[t]},i=`Panic due to ${PanicReasons$1.get(t)||"UNKNOWN"}(${t})`,s+=`: ${i}`}catch(e){s+=" (could not decode panic code)"}else s+=" (unknown custom error)"}const o={to:t.to?getAddress(t.to):null,data:t.data||"0x"};return t.from&&(o.from=getAddress(t.from)),makeError(s,"CALL_EXCEPTION",{action:e,data:r,reason:i,transaction:o,invocation:null,revert:a})}class AbiCoder{#ye(e){if(e.isArray())return new ArrayCoder(this.#ye(e.arrayChildren),e.arrayLength,e.name);if(e.isTuple())return new TupleCoder(e.components.map((e=>this.#ye(e))),e.name);switch(e.baseType){case"address":return new AddressCoder(e.name);case"bool":return new BooleanCoder(e.name);case"string":return new StringCoder(e.name);case"bytes":return new BytesCoder(e.name);case"":return new NullCoder(e.name)}let t=e.type.match(paramTypeNumber);if(t){let r=parseInt(t[2]||"256");return assertArgument(0!==r&&r<=256&&r%8==0,"invalid "+t[1]+" bit length","param",e),new NumberCoder(r/8,"int"===t[1],e.name)}if(t=e.type.match(paramTypeBytes),t){let r=parseInt(t[1]);return assertArgument(0!==r&&r<=32,"invalid bytes length","param",e),new FixedBytesCoder(r,e.name)}assertArgument(!1,"invalid type","type",e.type)}getDefaultValue(e){const t=e.map((e=>this.#ye(ParamType.from(e))));return new TupleCoder(t,"_").defaultValue()}encode(e,t){assertArgumentCount(t.length,e.length,"types/values length mismatch");const r=e.map((e=>this.#ye(ParamType.from(e)))),n=new TupleCoder(r,"_"),s=new Writer;return n.encode(s,t),s.data}decode(e,t,r){const n=e.map((e=>this.#ye(ParamType.from(e))));return new TupleCoder(n,"_").decode(new Reader(t,r,defaultMaxInflation))}static _setDefaultMaxInflation(e){assertArgument("number"==typeof e&&Number.isInteger(e),"invalid defaultMaxInflation factor","value",e),defaultMaxInflation=e}static defaultAbiCoder(){return null==defaultCoder&&(defaultCoder=new AbiCoder),defaultCoder}static getBuiltinCallException(e,t,r){return getBuiltinCallException(e,t,r,AbiCoder.defaultAbiCoder())}}function encodeBytes32String(e){const t=toUtf8Bytes(e);if(t.length>31)throw new Error("bytes32 string must be less than 32 bytes");return zeroPadBytes(t,32)}function decodeBytes32String(e){const t=getBytes(e,"bytes");if(32!==t.length)throw new Error("invalid bytes32 - not 32 bytes long");if(0!==t[31])throw new Error("invalid bytes32 string - no null terminator");let r=31;for(;0===t[r-1];)r--;return toUtf8String(t.slice(0,r))}class LogDescription{fragment;name;signature;topic;args;constructor(e,t,r){const n=e.name,s=e.format();defineProperties(this,{fragment:e,name:n,signature:s,topic:t,args:r})}}class TransactionDescription{fragment;name;args;signature;selector;value;constructor(e,t,r,n){const s=e.name,i=e.format();defineProperties(this,{fragment:e,name:s,args:r,signature:i,selector:t,value:n})}}class ErrorDescription{fragment;name;args;signature;selector;constructor(e,t,r){const n=e.name,s=e.format();defineProperties(this,{fragment:e,name:n,args:r,signature:s,selector:t})}}class Indexed{hash;_isIndexed;static isIndexed(e){return!(!e||!e._isIndexed)}constructor(e){defineProperties(this,{hash:e,_isIndexed:!0})}}const PanicReasons={0:"generic panic",1:"assert(false)",17:"arithmetic overflow",18:"division or modulo by zero",33:"enum overflow",34:"invalid encoded storage byte array accessed",49:"out-of-bounds array access; popping on an empty array",50:"out-of-bounds access of an array or bytesN",65:"out of memory",81:"uninitialized function"},BuiltinErrors={"0x08c379a0":{signature:"Error(string)",name:"Error",inputs:["string"],reason:e=>`reverted with reason string ${JSON.stringify(e)}`},"0x4e487b71":{signature:"Panic(uint256)",name:"Panic",inputs:["uint256"],reason:e=>{let t="unknown panic code";return e>=0&&e<=255&&PanicReasons[e.toString()]&&(t=PanicReasons[e.toString()]),`reverted with panic code 0x${e.toString(16)} (${t})`}}};class Interface{fragments;deploy;fallback;receive;#be;#we;#Ae;#ve;constructor(e){let t=[];t="string"==typeof e?JSON.parse(e):e,this.#Ae=new Map,this.#be=new Map,this.#we=new Map;const r=[];for(const e of t)try{r.push(Fragment.from(e))}catch(t){console.log(`[Warning] Invalid Fragment ${JSON.stringify(e)}:`,t.message)}defineProperties(this,{fragments:Object.freeze(r)});let n=null,s=!1;this.#ve=this.getAbiCoder(),this.fragments.forEach(((e,t)=>{let r;switch(e.type){case"constructor":return this.deploy?void console.log("duplicate definition - constructor"):void defineProperties(this,{deploy:e});case"fallback":return void(0===e.inputs.length?s=!0:(assertArgument(!n||e.payable!==n.payable,"conflicting fallback fragments",`fragments[${t}]`,e),n=e,s=n.payable));case"function":r=this.#Ae;break;case"event":r=this.#we;break;case"error":r=this.#be;break;default:return}const i=e.format();r.has(i)||r.set(i,e)})),this.deploy||defineProperties(this,{deploy:ConstructorFragment.from("constructor()")}),defineProperties(this,{fallback:n,receive:s})}format(e){const t=e?"minimal":"full",r=this.fragments.map((e=>e.format(t)));return r}formatJson(){const e=this.fragments.map((e=>e.format("json")));return JSON.stringify(e.map((e=>JSON.parse(e))))}getAbiCoder(){return AbiCoder.defaultAbiCoder()}#Ee(e,t,r){if(isHexString(e)){const t=e.toLowerCase();for(const e of this.#Ae.values())if(t===e.selector)return e;return null}if(-1===e.indexOf("(")){const n=[];for(const[t,r]of this.#Ae)t.split("(")[0]===e&&n.push(r);if(t){const e=t.length>0?t[t.length-1]:null;let r=t.length,s=!0;Typed.isTyped(e)&&"overrides"===e.type&&(s=!1,r--);for(let e=n.length-1;e>=0;e--){const t=n[e].inputs.length;t===r||s&&t===r-1||n.splice(e,1)}for(let e=n.length-1;e>=0;e--){const r=n[e].inputs;for(let s=0;s<t.length;s++)if(Typed.isTyped(t[s])){if(s>=r.length){if("overrides"===t[s].type)continue;n.splice(e,1);break}if(t[s].type!==r[s].baseType){n.splice(e,1);break}}}}if(1===n.length&&t&&t.length!==n[0].inputs.length){const e=t[t.length-1];(null==e||Array.isArray(e)||"object"!=typeof e)&&n.splice(0,1)}if(0===n.length)return null;if(n.length>1&&r){assertArgument(!1,`ambiguous function description (i.e. matches ${n.map((e=>JSON.stringify(e.format()))).join(", ")})`,"key",e)}return n[0]}const n=this.#Ae.get(FunctionFragment.from(e).format());return n||null}getFunctionName(e){const t=this.#Ee(e,null,!1);return assertArgument(t,"no matching function","key",e),t.name}hasFunction(e){return!!this.#Ee(e,null,!1)}getFunction(e,t){return this.#Ee(e,t||null,!0)}forEachFunction(e){const t=Array.from(this.#Ae.keys());t.sort(((e,t)=>e.localeCompare(t)));for(let r=0;r<t.length;r++){const n=t[r];e(this.#Ae.get(n),r)}}#ke(e,t,r){if(isHexString(e)){const t=e.toLowerCase();for(const e of this.#we.values())if(t===e.topicHash)return e;return null}if(-1===e.indexOf("(")){const n=[];for(const[t,r]of this.#we)t.split("(")[0]===e&&n.push(r);if(t){for(let e=n.length-1;e>=0;e--)n[e].inputs.length<t.length&&n.splice(e,1);for(let e=n.length-1;e>=0;e--){const r=n[e].inputs;for(let s=0;s<t.length;s++)if(Typed.isTyped(t[s])&&t[s].type!==r[s].baseType){n.splice(e,1);break}}}if(0===n.length)return null;if(n.length>1&&r){assertArgument(!1,`ambiguous event description (i.e. matches ${n.map((e=>JSON.stringify(e.format()))).join(", ")})`,"key",e)}return n[0]}const n=this.#we.get(EventFragment.from(e).format());return n||null}getEventName(e){const t=this.#ke(e,null,!1);return assertArgument(t,"no matching event","key",e),t.name}hasEvent(e){return!!this.#ke(e,null,!1)}getEvent(e,t){return this.#ke(e,t||null,!0)}forEachEvent(e){const t=Array.from(this.#we.keys());t.sort(((e,t)=>e.localeCompare(t)));for(let r=0;r<t.length;r++){const n=t[r];e(this.#we.get(n),r)}}getError(e,t){if(isHexString(e)){const t=e.toLowerCase();if(BuiltinErrors[t])return ErrorFragment.from(BuiltinErrors[t].signature);for(const e of this.#be.values())if(t===e.selector)return e;return null}if(-1===e.indexOf("(")){const t=[];for(const[r,n]of this.#be)r.split("(")[0]===e&&t.push(n);if(0===t.length)return"Error"===e?ErrorFragment.from("error Error(string)"):"Panic"===e?ErrorFragment.from("error Panic(uint256)"):null;if(t.length>1){assertArgument(!1,`ambiguous error description (i.e. ${t.map((e=>JSON.stringify(e.format()))).join(", ")})`,"name",e)}return t[0]}if("Error(string)"===(e=ErrorFragment.from(e).format()))return ErrorFragment.from("error Error(string)");if("Panic(uint256)"===e)return ErrorFragment.from("error Panic(uint256)");const r=this.#be.get(e);return r||null}forEachError(e){const t=Array.from(this.#be.keys());t.sort(((e,t)=>e.localeCompare(t)));for(let r=0;r<t.length;r++){const n=t[r];e(this.#be.get(n),r)}}_decodeParams(e,t){return this.#ve.decode(e,t)}_encodeParams(e,t){return this.#ve.encode(e,t)}encodeDeploy(e){return this._encodeParams(this.deploy.inputs,e||[])}decodeErrorResult(e,t){if("string"==typeof e){const t=this.getError(e);assertArgument(t,"unknown error","fragment",e),e=t}return assertArgument(dataSlice(t,0,4)===e.selector,`data signature does not match error ${e.name}.`,"data",t),this._decodeParams(e.inputs,dataSlice(t,4))}encodeErrorResult(e,t){if("string"==typeof e){const t=this.getError(e);assertArgument(t,"unknown error","fragment",e),e=t}return concat([e.selector,this._encodeParams(e.inputs,t||[])])}decodeFunctionData(e,t){if("string"==typeof e){const t=this.getFunction(e);assertArgument(t,"unknown function","fragment",e),e=t}return assertArgument(dataSlice(t,0,4)===e.selector,`data signature does not match function ${e.name}.`,"data",t),this._decodeParams(e.inputs,dataSlice(t,4))}encodeFunctionData(e,t){if("string"==typeof e){const t=this.getFunction(e);assertArgument(t,"unknown function","fragment",e),e=t}return concat([e.selector,this._encodeParams(e.inputs,t||[])])}decodeFunctionResult(e,t){if("string"==typeof e){const t=this.getFunction(e);assertArgument(t,"unknown function","fragment",e),e=t}let r="invalid length for result data";const n=getBytesCopy(t);if(n.length%32==0)try{return this.#ve.decode(e.outputs,n)}catch(e){r="could not decode result data"}assert(!1,r,"BAD_DATA",{value:hexlify(n),info:{method:e.name,signature:e.format()}})}makeError(e,t){const r=getBytes(e,"data"),n=AbiCoder.getBuiltinCallException("call",t,r);if(n.message.startsWith("execution reverted (unknown custom error)")){const e=hexlify(r.slice(0,4)),t=this.getError(e);if(t)try{const e=this.#ve.decode(t.inputs,r.slice(4));n.revert={name:t.name,signature:t.format(),args:e},n.reason=n.revert.signature,n.message=`execution reverted: ${n.reason}`}catch(e){n.message="execution reverted (coult not decode custom error)"}}const s=this.parseTransaction(t);return s&&(n.invocation={method:s.name,signature:s.signature,args:s.args}),n}encodeFunctionResult(e,t){if("string"==typeof e){const t=this.getFunction(e);assertArgument(t,"unknown function","fragment",e),e=t}return hexlify(this.#ve.encode(e.outputs,t||[]))}encodeFilterTopics(e,t){if("string"==typeof e){const t=this.getEvent(e);assertArgument(t,"unknown event","eventFragment",e),e=t}assert(t.length<=e.inputs.length,`too many arguments for ${e.format()}`,"UNEXPECTED_ARGUMENT",{count:t.length,expectedCount:e.inputs.length});const r=[];e.anonymous||r.push(e.topicHash);const n=(e,t)=>"string"===e.type?id(t):"bytes"===e.type?keccak256(hexlify(t)):("bool"===e.type&&"boolean"==typeof t?t=t?"0x01":"0x00":e.type.match(/^u?int/)?t=toBeHex(t):e.type.match(/^bytes/)?t=zeroPadBytes(t,32):"address"===e.type&&this.#ve.encode(["address"],[t]),zeroPadValue(hexlify(t),32));for(t.forEach(((t,s)=>{const i=e.inputs[s];i.indexed?null==t?r.push(null):"array"===i.baseType||"tuple"===i.baseType?assertArgument(!1,"filtering with tuples or arrays not supported","contract."+i.name,t):Array.isArray(t)?r.push(t.map((e=>n(i,e)))):r.push(n(i,t)):assertArgument(null==t,"cannot filter non-indexed parameters; must be null","contract."+i.name,t)}));r.length&&null===r[r.length-1];)r.pop();return r}encodeEventLog(e,t){if("string"==typeof e){const t=this.getEvent(e);assertArgument(t,"unknown event","eventFragment",e),e=t}const r=[],n=[],s=[];return e.anonymous||r.push(e.topicHash),assertArgument(t.length===e.inputs.length,"event arguments/values mismatch","values",t),e.inputs.forEach(((e,i)=>{const a=t[i];if(e.indexed)if("string"===e.type)r.push(id(a));else if("bytes"===e.type)r.push(keccak256(a));else{if("tuple"===e.baseType||"array"===e.baseType)throw new Error("not implemented");r.push(this.#ve.encode([e.type],[a]))}else n.push(e),s.push(a)})),{data:this.#ve.encode(n,s),topics:r}}decodeEventLog(e,t,r){if("string"==typeof e){const t=this.getEvent(e);assertArgument(t,"unknown event","eventFragment",e),e=t}if(null!=r&&!e.anonymous){const t=e.topicHash;assertArgument(isHexString(r[0],32)&&r[0].toLowerCase()===t,"fragment/topic mismatch","topics[0]",r[0]),r=r.slice(1)}const n=[],s=[],i=[];e.inputs.forEach(((e,t)=>{e.indexed?"string"===e.type||"bytes"===e.type||"tuple"===e.baseType||"array"===e.baseType?(n.push(ParamType.from({type:"bytes32",name:e.name})),i.push(!0)):(n.push(e),i.push(!1)):(s.push(e),i.push(!1))}));const a=null!=r?this.#ve.decode(n,concat(r)):null,o=this.#ve.decode(s,t,!0),c=[],l=[];let u=0,h=0;return e.inputs.forEach(((e,t)=>{let r=null;if(e.indexed)if(null==a)r=new Indexed(null);else if(i[t])r=new Indexed(a[h++]);else try{r=a[h++]}catch(e){r=e}else try{r=o[u++]}catch(e){r=e}c.push(r),l.push(e.name||null)})),Result.fromItems(c,l)}parseTransaction(e){const t=getBytes(e.data,"tx.data"),r=getBigInt(null!=e.value?e.value:0,"tx.value"),n=this.getFunction(hexlify(t.slice(0,4)));if(!n)return null;const s=this.#ve.decode(n.inputs,t.slice(4));return new TransactionDescription(n,n.selector,s,r)}parseCallResult(e){throw new Error("@TODO")}parseLog(e){const t=this.getEvent(e.topics[0]);return!t||t.anonymous?null:new LogDescription(t,t.topicHash,this.decodeEventLog(t,e.data,e.topics))}parseError(e){const t=hexlify(e),r=this.getError(dataSlice(t,0,4));if(!r)return null;const n=this.#ve.decode(r.inputs,dataSlice(t,4));return new ErrorDescription(r,r.selector,n)}static from(e){return e instanceof Interface?e:"string"==typeof e?new Interface(JSON.parse(e)):"function"==typeof e.formatJson?new Interface(e.formatJson()):"function"==typeof e.format?new Interface(e.format("json")):new Interface(e)}}const BN_0$2=BigInt(0);function getValue(e){return null==e?null:e}function toJson(e){return null==e?null:e.toString()}class FeeData{gasPrice;maxFeePerGas;maxPriorityFeePerGas;constructor(e,t,r){defineProperties(this,{gasPrice:getValue(e),maxFeePerGas:getValue(t),maxPriorityFeePerGas:getValue(r)})}toJSON(){const{gasPrice:e,maxFeePerGas:t,maxPriorityFeePerGas:r}=this;return{_type:"FeeData",gasPrice:toJson(e),maxFeePerGas:toJson(t),maxPriorityFeePerGas:toJson(r)}}}function copyRequest(e){const t={};e.to&&(t.to=e.to),e.from&&(t.from=e.from),e.data&&(t.data=hexlify(e.data));const r="chainId,gasLimit,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,value".split(/,/);for(const n of r)n in e&&null!=e[n]&&(t[n]=getBigInt(e[n],`request.${n}`));const n="type,nonce".split(/,/);for(const r of n)r in e&&null!=e[r]&&(t[r]=getNumber(e[r],`request.${r}`));return e.accessList&&(t.accessList=accessListify(e.accessList)),"blockTag"in e&&(t.blockTag=e.blockTag),"enableCcipRead"in e&&(t.enableCcipRead=!!e.enableCcipRead),"customData"in e&&(t.customData=e.customData),"blobVersionedHashes"in e&&e.blobVersionedHashes&&(t.blobVersionedHashes=e.blobVersionedHashes.slice()),"kzg"in e&&(t.kzg=e.kzg),"blobs"in e&&e.blobs&&(t.blobs=e.blobs.map((e=>isBytesLike(e)?hexlify(e):Object.assign({},e)))),t}class Block{provider;number;hash;timestamp;parentHash;parentBeaconBlockRoot;nonce;difficulty;gasLimit;gasUsed;stateRoot;receiptsRoot;blobGasUsed;excessBlobGas;miner;prevRandao;extraData;baseFeePerGas;#Be;constructor(e,t){this.#Be=e.transactions.map((e=>"string"!=typeof e?new TransactionResponse(e,t):e)),defineProperties(this,{provider:t,hash:getValue(e.hash),number:e.number,timestamp:e.timestamp,parentHash:e.parentHash,parentBeaconBlockRoot:e.parentBeaconBlockRoot,nonce:e.nonce,difficulty:e.difficulty,gasLimit:e.gasLimit,gasUsed:e.gasUsed,blobGasUsed:e.blobGasUsed,excessBlobGas:e.excessBlobGas,miner:e.miner,prevRandao:getValue(e.prevRandao),extraData:e.extraData,baseFeePerGas:getValue(e.baseFeePerGas),stateRoot:e.stateRoot,receiptsRoot:e.receiptsRoot})}get transactions(){return this.#Be.map((e=>"string"==typeof e?e:e.hash))}get prefetchedTransactions(){const e=this.#Be.slice();return 0===e.length?[]:(assert("object"==typeof e[0],"transactions were not prefetched with block request","UNSUPPORTED_OPERATION",{operation:"transactionResponses()"}),e)}toJSON(){const{baseFeePerGas:e,difficulty:t,extraData:r,gasLimit:n,gasUsed:s,hash:i,miner:a,prevRandao:o,nonce:c,number:l,parentHash:u,parentBeaconBlockRoot:h,stateRoot:d,receiptsRoot:f,timestamp:g,transactions:p}=this;return{_type:"Block",baseFeePerGas:toJson(e),difficulty:toJson(t),extraData:r,gasLimit:toJson(n),gasUsed:toJson(s),blobGasUsed:toJson(this.blobGasUsed),excessBlobGas:toJson(this.excessBlobGas),hash:i,miner:a,prevRandao:o,nonce:c,number:l,parentHash:u,timestamp:g,parentBeaconBlockRoot:h,stateRoot:d,receiptsRoot:f,transactions:p}}[Symbol.iterator](){let e=0;const t=this.transactions;return{next:()=>e<this.length?{value:t[e++],done:!1}:{value:void 0,done:!0}}}get length(){return this.#Be.length}get date(){return null==this.timestamp?null:new Date(1e3*this.timestamp)}async getTransaction(e){let t;if("number"==typeof e)t=this.#Be[e];else{const r=e.toLowerCase();for(const e of this.#Be){if("string"==typeof e){if(e!==r)continue;t=e;break}if(e.hash!==r){t=e;break}}}if(null==t)throw new Error("no such tx");return"string"==typeof t?await this.provider.getTransaction(t):t}getPrefetchedTransaction(e){const t=this.prefetchedTransactions;if("number"==typeof e)return t[e];e=e.toLowerCase();for(const r of t)if(r.hash===e)return r;assertArgument(!1,"no matching transaction","indexOrHash",e)}isMined(){return!!this.hash}isLondon(){return!!this.baseFeePerGas}orphanedEvent(){if(!this.isMined())throw new Error("");return createOrphanedBlockFilter(this)}}class Log{provider;transactionHash;blockHash;blockNumber;removed;address;data;topics;index;transactionIndex;constructor(e,t){this.provider=t;const r=Object.freeze(e.topics.slice());defineProperties(this,{transactionHash:e.transactionHash,blockHash:e.blockHash,blockNumber:e.blockNumber,removed:e.removed,address:e.address,data:e.data,topics:r,index:e.index,transactionIndex:e.transactionIndex})}toJSON(){const{address:e,blockHash:t,blockNumber:r,data:n,index:s,removed:i,topics:a,transactionHash:o,transactionIndex:c}=this;return{_type:"log",address:e,blockHash:t,blockNumber:r,data:n,index:s,removed:i,topics:a,transactionHash:o,transactionIndex:c}}async getBlock(){const e=await this.provider.getBlock(this.blockHash);return assert(!!e,"failed to find transaction","UNKNOWN_ERROR",{}),e}async getTransaction(){const e=await this.provider.getTransaction(this.transactionHash);return assert(!!e,"failed to find transaction","UNKNOWN_ERROR",{}),e}async getTransactionReceipt(){const e=await this.provider.getTransactionReceipt(this.transactionHash);return assert(!!e,"failed to find transaction receipt","UNKNOWN_ERROR",{}),e}removedEvent(){return createRemovedLogFilter(this)}}class TransactionReceipt{provider;to;from;contractAddress;hash;index;blockHash;blockNumber;logsBloom;gasUsed;blobGasUsed;cumulativeGasUsed;gasPrice;blobGasPrice;type;status;root;#Pe;constructor(e,t){this.#Pe=Object.freeze(e.logs.map((e=>new Log(e,t))));let r=BN_0$2;null!=e.effectiveGasPrice?r=e.effectiveGasPrice:null!=e.gasPrice&&(r=e.gasPrice),defineProperties(this,{provider:t,to:e.to,from:e.from,contractAddress:e.contractAddress,hash:e.hash,index:e.index,blockHash:e.blockHash,blockNumber:e.blockNumber,logsBloom:e.logsBloom,gasUsed:e.gasUsed,cumulativeGasUsed:e.cumulativeGasUsed,blobGasUsed:e.blobGasUsed,gasPrice:r,blobGasPrice:e.blobGasPrice,type:e.type,status:e.status,root:e.root})}get logs(){return this.#Pe}toJSON(){const{to:e,from:t,contractAddress:r,hash:n,index:s,blockHash:i,blockNumber:a,logsBloom:o,logs:c,status:l,root:u}=this;return{_type:"TransactionReceipt",blockHash:i,blockNumber:a,contractAddress:r,cumulativeGasUsed:toJson(this.cumulativeGasUsed),from:t,gasPrice:toJson(this.gasPrice),blobGasUsed:toJson(this.blobGasUsed),blobGasPrice:toJson(this.blobGasPrice),gasUsed:toJson(this.gasUsed),hash:n,index:s,logs:c,logsBloom:o,root:u,status:l,to:e}}get length(){return this.logs.length}[Symbol.iterator](){let e=0;return{next:()=>e<this.length?{value:this.logs[e++],done:!1}:{value:void 0,done:!0}}}get fee(){return this.gasUsed*this.gasPrice}async getBlock(){const e=await this.provider.getBlock(this.blockHash);if(null==e)throw new Error("TODO");return e}async getTransaction(){const e=await this.provider.getTransaction(this.hash);if(null==e)throw new Error("TODO");return e}async getResult(){return await this.provider.getTransactionResult(this.hash)}async confirmations(){return await this.provider.getBlockNumber()-this.blockNumber+1}removedEvent(){return createRemovedTransactionFilter(this)}reorderedEvent(e){return assert(!e||e.isMined(),"unmined 'other' transction cannot be orphaned","UNSUPPORTED_OPERATION",{operation:"reorderedEvent(other)"}),createReorderedTransactionFilter(this,e)}}class TransactionResponse{provider;blockNumber;blockHash;index;hash;type;to;from;nonce;gasLimit;gasPrice;maxPriorityFeePerGas;maxFeePerGas;maxFeePerBlobGas;data;value;chainId;signature;accessList;blobVersionedHashes;#Ne;constructor(e,t){this.provider=t,this.blockNumber=null!=e.blockNumber?e.blockNumber:null,this.blockHash=null!=e.blockHash?e.blockHash:null,this.hash=e.hash,this.index=e.index,this.type=e.type,this.from=e.from,this.to=e.to||null,this.gasLimit=e.gasLimit,this.nonce=e.nonce,this.data=e.data,this.value=e.value,this.gasPrice=e.gasPrice,this.maxPriorityFeePerGas=null!=e.maxPriorityFeePerGas?e.maxPriorityFeePerGas:null,this.maxFeePerGas=null!=e.maxFeePerGas?e.maxFeePerGas:null,this.maxFeePerBlobGas=null!=e.maxFeePerBlobGas?e.maxFeePerBlobGas:null,this.chainId=e.chainId,this.signature=e.signature,this.accessList=null!=e.accessList?e.accessList:null,this.blobVersionedHashes=null!=e.blobVersionedHashes?e.blobVersionedHashes:null,this.#Ne=-1}toJSON(){const{blockNumber:e,blockHash:t,index:r,hash:n,type:s,to:i,from:a,nonce:o,data:c,signature:l,accessList:u,blobVersionedHashes:h}=this;return{_type:"TransactionResponse",accessList:u,blockNumber:e,blockHash:t,blobVersionedHashes:h,chainId:toJson(this.chainId),data:c,from:a,gasLimit:toJson(this.gasLimit),gasPrice:toJson(this.gasPrice),hash:n,maxFeePerGas:toJson(this.maxFeePerGas),maxPriorityFeePerGas:toJson(this.maxPriorityFeePerGas),maxFeePerBlobGas:toJson(this.maxFeePerBlobGas),nonce:o,signature:l,to:i,index:r,type:s,value:toJson(this.value)}}async getBlock(){let e=this.blockNumber;if(null==e){const t=await this.getTransaction();t&&(e=t.blockNumber)}if(null==e)return null;const t=this.provider.getBlock(e);if(null==t)throw new Error("TODO");return t}async getTransaction(){return this.provider.getTransaction(this.hash)}async confirmations(){if(null==this.blockNumber){const{tx:e,blockNumber:t}=await resolveProperties({tx:this.getTransaction(),blockNumber:this.provider.getBlockNumber()});return null==e||null==e.blockNumber?0:t-e.blockNumber+1}return await this.provider.getBlockNumber()-this.blockNumber+1}async wait(e,t){const r=null==e?1:e,n=null==t?0:t;let s=this.#Ne,i=-1,a=-1===s;const o=async()=>{if(a)return null;const{blockNumber:e,nonce:t}=await resolveProperties({blockNumber:this.provider.getBlockNumber(),nonce:this.provider.getTransactionCount(this.from)});if(t<this.nonce)return void(s=e);if(a)return null;const n=await this.getTransaction();if(!n||null==n.blockNumber)for(-1===i&&(i=s-3,i<this.#Ne&&(i=this.#Ne));i<=e;){if(a)return null;const t=await this.provider.getBlock(i,!0);if(null==t)return;for(const e of t)if(e===this.hash)return;for(let n=0;n<t.length;n++){const i=await t.getTransaction(n);if(i.from===this.from&&i.nonce===this.nonce){if(a)return null;const t=await this.provider.getTransactionReceipt(i.hash);if(null==t)return;if(e-t.blockNumber+1<r)return;let n="replaced";i.data===this.data&&i.to===this.to&&i.value===this.value?n="repriced":"0x"===i.data&&i.from===i.to&&i.value===BN_0$2&&(n="cancelled"),assert(!1,"transaction was replaced","TRANSACTION_REPLACED",{cancelled:"replaced"===n||"cancelled"===n,reason:n,replacement:i.replaceableTransaction(s),hash:i.hash,receipt:t})}}i++}},c=e=>{if(null==e||0!==e.status)return e;assert(!1,"transaction execution reverted","CALL_EXCEPTION",{action:"sendTransaction",data:null,reason:null,invocation:null,revert:null,transaction:{to:e.to,from:e.from,data:""},receipt:e})},l=await this.provider.getTransactionReceipt(this.hash);if(0===r)return c(l);if(l){if(await l.confirmations()>=r)return c(l)}else if(await o(),0===r)return null;const u=new Promise(((e,t)=>{const i=[],l=()=>{i.forEach((e=>e()))};if(i.push((()=>{a=!0})),n>0){const e=setTimeout((()=>{l(),t(makeError("wait for transaction timeout","TIMEOUT"))}),n);i.push((()=>{clearTimeout(e)}))}const u=async n=>{if(await n.confirmations()>=r){l();try{e(c(n))}catch(e){t(e)}}};if(i.push((()=>{this.provider.off(this.hash,u)})),this.provider.on(this.hash,u),s>=0){const e=async()=>{try{await o()}catch(e){if(isError(e,"TRANSACTION_REPLACED"))return l(),void t(e)}a||this.provider.once("block",e)};i.push((()=>{this.provider.off("block",e)})),this.provider.once("block",e)}}));return await u}isMined(){return null!=this.blockHash}isLegacy(){return 0===this.type}isBerlin(){return 1===this.type}isLondon(){return 2===this.type}isCancun(){return 3===this.type}removedEvent(){return assert(this.isMined(),"unmined transaction canot be orphaned","UNSUPPORTED_OPERATION",{operation:"removeEvent()"}),createRemovedTransactionFilter(this)}reorderedEvent(e){return assert(this.isMined(),"unmined transaction canot be orphaned","UNSUPPORTED_OPERATION",{operation:"removeEvent()"}),assert(!e||e.isMined(),"unmined 'other' transaction canot be orphaned","UNSUPPORTED_OPERATION",{operation:"removeEvent()"}),createReorderedTransactionFilter(this,e)}replaceableTransaction(e){assertArgument(Number.isInteger(e)&&e>=0,"invalid startBlock","startBlock",e);const t=new TransactionResponse(this,this.provider);return t.#Ne=e,t}}function createOrphanedBlockFilter(e){return{orphan:"drop-block",hash:e.hash,number:e.number}}function createReorderedTransactionFilter(e,t){return{orphan:"reorder-transaction",tx:e,other:t}}function createRemovedTransactionFilter(e){return{orphan:"drop-transaction",tx:e}}function createRemovedLogFilter(e){return{orphan:"drop-log",log:{transactionHash:e.transactionHash,blockHash:e.blockHash,blockNumber:e.blockNumber,address:e.address,data:e.data,topics:Object.freeze(e.topics.slice()),index:e.index}}}class EventLog extends Log{interface;fragment;args;constructor(e,t,r){super(e,e.provider);defineProperties(this,{args:t.decodeEventLog(r,e.data,e.topics),fragment:r,interface:t})}get eventName(){return this.fragment.name}get eventSignature(){return this.fragment.format()}}class UndecodedEventLog extends Log{error;constructor(e,t){super(e,e.provider),defineProperties(this,{error:t})}}class ContractTransactionReceipt extends TransactionReceipt{#_e;constructor(e,t,r){super(r,t),this.#_e=e}get logs(){return super.logs.map((e=>{const t=e.topics.length?this.#_e.getEvent(e.topics[0]):null;if(t)try{return new EventLog(e,this.#_e,t)}catch(t){return new UndecodedEventLog(e,t)}return e}))}}class ContractTransactionResponse extends TransactionResponse{#_e;constructor(e,t,r){super(r,t),this.#_e=e}async wait(e,t){const r=await super.wait(e,t);return null==r?null:new ContractTransactionReceipt(this.#_e,this.provider,r)}}class ContractUnknownEventPayload extends EventPayload{log;constructor(e,t,r,n){super(e,t,r),defineProperties(this,{log:n})}async getBlock(){return await this.log.getBlock()}async getTransaction(){return await this.log.getTransaction()}async getTransactionReceipt(){return await this.log.getTransactionReceipt()}}class ContractEventPayload extends ContractUnknownEventPayload{constructor(e,t,r,n,s){super(e,t,r,new EventLog(s,e.interface,n));defineProperties(this,{args:e.interface.decodeEventLog(n,this.log.data,this.log.topics),fragment:n})}get eventName(){return this.fragment.name}get eventSignature(){return this.fragment.format()}}const BN_0$1=BigInt(0);function canCall(e){return e&&"function"==typeof e.call}function canEstimate(e){return e&&"function"==typeof e.estimateGas}function canResolve(e){return e&&"function"==typeof e.resolveName}function canSend(e){return e&&"function"==typeof e.sendTransaction}function getResolver(e){if(null!=e){if(canResolve(e))return e;if(e.provider)return e.provider}}class PreparedTopicFilter{#Se;fragment;constructor(e,t,r){if(defineProperties(this,{fragment:t}),t.inputs.length<r.length)throw new Error("too many arguments");const n=getRunner(e.runner,"resolveName"),s=canResolve(n)?n:null;this.#Se=async function(){const n=await Promise.all(t.inputs.map(((e,t)=>null==r[t]?null:e.walkAsync(r[t],((e,t)=>"address"===e?Array.isArray(t)?Promise.all(t.map((e=>resolveAddress(e,s)))):resolveAddress(t,s):t)))));return e.interface.encodeFilterTopics(t,n)}()}getTopicFilter(){return this.#Se}}function getRunner(e,t){return null==e?null:"function"==typeof e[t]?e:e.provider&&"function"==typeof e.provider[t]?e.provider:null}function getProvider(e){return null==e?null:e.provider||null}async function copyOverrides(e,t){const r=Typed.dereference(e,"overrides");assertArgument("object"==typeof r,"invalid overrides parameter","overrides",e);const n=copyRequest(r);return assertArgument(null==n.to||(t||[]).indexOf("to")>=0,"cannot override to","overrides.to",n.to),assertArgument(null==n.data||(t||[]).indexOf("data")>=0,"cannot override data","overrides.data",n.data),n.from&&(n.from=n.from),n}async function resolveArgs(e,t,r){const n=getRunner(e,"resolveName"),s=canResolve(n)?n:null;return await Promise.all(t.map(((e,t)=>e.walkAsync(r[t],((e,t)=>(t=Typed.dereference(t,e),"address"===e?resolveAddress(t,s):t))))))}function buildWrappedFallback(e){const t=async function(t){const r=await copyOverrides(t,["data"]);r.to=await e.getAddress(),r.from&&(r.from=await resolveAddress(r.from,getResolver(e.runner)));const n=e.interface,s=getBigInt(r.value||BN_0$1,"overrides.value")===BN_0$1,i="0x"===(r.data||"0x");!n.fallback||n.fallback.payable||!n.receive||i||s||assertArgument(!1,"cannot send data to receive or send value to non-payable fallback","overrides",t),assertArgument(n.fallback||i,"cannot send data to receive-only contract","overrides.data",r.data);return assertArgument(n.receive||n.fallback&&n.fallback.payable||s,"cannot send value to non-payable fallback","overrides.value",r.value),assertArgument(n.fallback||i,"cannot send data to receive-only contract","overrides.data",r.data),r},r=async function(r){const n=e.runner;assert(canSend(n),"contract runner does not support sending transactions","UNSUPPORTED_OPERATION",{operation:"sendTransaction"});const s=await n.sendTransaction(await t(r)),i=getProvider(e.runner);return new ContractTransactionResponse(e.interface,i,s)},n=async e=>await r(e);return defineProperties(n,{_contract:e,estimateGas:async function(r){const n=getRunner(e.runner,"estimateGas");return assert(canEstimate(n),"contract runner does not support gas estimation","UNSUPPORTED_OPERATION",{operation:"estimateGas"}),await n.estimateGas(await t(r))},populateTransaction:t,send:r,staticCall:async function(r){const n=getRunner(e.runner,"call");assert(canCall(n),"contract runner does not support calling","UNSUPPORTED_OPERATION",{operation:"call"});const s=await t(r);try{return await n.call(s)}catch(t){if(isCallException(t)&&t.data)throw e.interface.makeError(t.data,s);throw t}}}),n}function buildWrappedMethod(e,t){const r=function(...r){const n=e.interface.getFunction(t,r);return assert(n,"no matching fragment","UNSUPPORTED_OPERATION",{operation:"fragment",info:{key:t,args:r}}),n},n=async function(...t){const n=r(...t);let s={};if(n.inputs.length+1===t.length&&(s=await copyOverrides(t.pop()),s.from&&(s.from=await resolveAddress(s.from,getResolver(e.runner)))),n.inputs.length!==t.length)throw new Error("internal error: fragment inputs doesn't match arguments; should not happen");const i=await resolveArgs(e.runner,n.inputs,t);return Object.assign({},s,await resolveProperties({to:e.getAddress(),data:e.interface.encodeFunctionData(n,i)}))},s=async function(...e){const t=await a(...e);return 1===t.length?t[0]:t},i=async function(...t){const r=e.runner;assert(canSend(r),"contract runner does not support sending transactions","UNSUPPORTED_OPERATION",{operation:"sendTransaction"});const s=await r.sendTransaction(await n(...t)),i=getProvider(e.runner);return new ContractTransactionResponse(e.interface,i,s)},a=async function(...t){const s=getRunner(e.runner,"call");assert(canCall(s),"contract runner does not support calling","UNSUPPORTED_OPERATION",{operation:"call"});const i=await n(...t);let a="0x";try{a=await s.call(i)}catch(t){if(isCallException(t)&&t.data)throw e.interface.makeError(t.data,i);throw t}const o=r(...t);return e.interface.decodeFunctionResult(o,a)},o=async(...e)=>r(...e).constant?await s(...e):await i(...e);return defineProperties(o,{name:e.interface.getFunctionName(t),_contract:e,_key:t,getFragment:r,estimateGas:async function(...t){const r=getRunner(e.runner,"estimateGas");return assert(canEstimate(r),"contract runner does not support gas estimation","UNSUPPORTED_OPERATION",{operation:"estimateGas"}),await r.estimateGas(await n(...t))},populateTransaction:n,send:i,staticCall:s,staticCallResult:a}),Object.defineProperty(o,"fragment",{configurable:!1,enumerable:!0,get:()=>{const r=e.interface.getFunction(t);return assert(r,"no matching fragment","UNSUPPORTED_OPERATION",{operation:"fragment",info:{key:t}}),r}}),o}function buildWrappedEvent(e,t){const r=function(...r){const n=e.interface.getEvent(t,r);return assert(n,"no matching fragment","UNSUPPORTED_OPERATION",{operation:"fragment",info:{key:t,args:r}}),n},n=function(...t){return new PreparedTopicFilter(e,r(...t),t)};return defineProperties(n,{name:e.interface.getEventName(t),_contract:e,_key:t,getFragment:r}),Object.defineProperty(n,"fragment",{configurable:!1,enumerable:!0,get:()=>{const r=e.interface.getEvent(t);return assert(r,"no matching fragment","UNSUPPORTED_OPERATION",{operation:"fragment",info:{key:t}}),r}}),n}const internal=Symbol.for("_ethersInternal_contract"),internalValues=new WeakMap;function setInternal(e,t){internalValues.set(e[internal],t)}function getInternal(e){return internalValues.get(e[internal])}function isDeferred(e){return e&&"object"==typeof e&&"getTopicFilter"in e&&"function"==typeof e.getTopicFilter&&e.fragment}async function getSubInfo(e,t){let r,n=null;if(Array.isArray(t)){const n=function(t){if(isHexString(t,32))return t;const r=e.interface.getEvent(t);return assertArgument(r,"unknown fragment","name",t),r.topicHash};r=t.map((e=>null==e?null:Array.isArray(e)?e.map(n):n(e)))}else"*"===t?r=[null]:"string"==typeof t?isHexString(t,32)?r=[t]:(n=e.interface.getEvent(t),assertArgument(n,"unknown fragment","event",t),r=[n.topicHash]):isDeferred(t)?r=await t.getTopicFilter():"fragment"in t?(n=t.fragment,r=[n.topicHash]):assertArgument(!1,"unknown event name","event",t);r=r.map((e=>{if(null==e)return null;if(Array.isArray(e)){const t=Array.from(new Set(e.map((e=>e.toLowerCase()))).values());return 1===t.length?t[0]:(t.sort(),t)}return e.toLowerCase()}));return{fragment:n,tag:r.map((e=>null==e?"null":Array.isArray(e)?e.join("|"):e)).join("&"),topics:r}}async function hasSub(e,t){const{subs:r}=getInternal(e);return r.get((await getSubInfo(e,t)).tag)||null}async function getSub(e,t,r){const n=getProvider(e.runner);assert(n,"contract runner does not support subscribing","UNSUPPORTED_OPERATION",{operation:t});const{fragment:s,tag:i,topics:a}=await getSubInfo(e,r),{addr:o,subs:c}=getInternal(e);let l=c.get(i);if(!l){const t={address:o||e,topics:a},u=t=>{let n=s;if(null==n)try{n=e.interface.getEvent(t.topics[0])}catch(e){}if(n){const i=n,a=s?e.interface.decodeEventLog(s,t.data,t.topics):[];emit(e,r,a,(n=>new ContractEventPayload(e,n,r,i,t)))}else emit(e,r,[],(n=>new ContractUnknownEventPayload(e,n,r,t)))};let h=[];l={tag:i,listeners:[],start:()=>{h.length||h.push(n.on(t,u))},stop:async()=>{if(0==h.length)return;let e=h;h=[],await Promise.all(e),n.off(t,u)}},c.set(i,l)}return l}let lastEmit=Promise.resolve();async function _emit(e,t,r,n){await lastEmit;const s=await hasSub(e,t);if(!s)return!1;const i=s.listeners.length;return s.listeners=s.listeners.filter((({listener:t,once:s})=>{const i=Array.from(r);n&&i.push(n(s?null:t));try{t.call(e,...i)}catch(e){}return!s})),0===s.listeners.length&&(s.stop(),getInternal(e).subs.delete(s.tag)),i>0}async function emit(e,t,r,n){try{await lastEmit}catch(e){}const s=_emit(e,t,r,n);return lastEmit=s,await s}const passProperties=["then"];class BaseContract{target;interface;runner;filters;[internal];fallback;constructor(e,t,r,n){assertArgument("string"==typeof e||isAddressable(e),"invalid value for Contract target","target",e),null==r&&(r=null);const s=Interface.from(t);let i;defineProperties(this,{target:e,runner:r,interface:s}),Object.defineProperty(this,internal,{value:{}});let a=null,o=null;if(n){const e=getProvider(r);o=new ContractTransactionResponse(this.interface,e,n)}let c=new Map;if("string"==typeof e)if(isHexString(e))a=e,i=Promise.resolve(e);else{const t=getRunner(r,"resolveName");if(!canResolve(t))throw makeError("contract runner does not support name resolution","UNSUPPORTED_OPERATION",{operation:"resolveName"});i=t.resolveName(e).then((t=>{if(null==t)throw makeError("an ENS name used for a contract target must be correctly configured","UNCONFIGURED_NAME",{value:e});return getInternal(this).addr=t,t}))}else i=e.getAddress().then((e=>{if(null==e)throw new Error("TODO");return getInternal(this).addr=e,e}));setInternal(this,{addrPromise:i,addr:a,deployTx:o,subs:c});const l=new Proxy({},{get:(e,t,r)=>{if("symbol"==typeof t||passProperties.indexOf(t)>=0)return Reflect.get(e,t,r);try{return this.getEvent(t)}catch(e){if(!isError(e,"INVALID_ARGUMENT")||"key"!==e.argument)throw e}},has:(e,t)=>passProperties.indexOf(t)>=0?Reflect.has(e,t):Reflect.has(e,t)||this.interface.hasEvent(String(t))});return defineProperties(this,{filters:l}),defineProperties(this,{fallback:s.receive||s.fallback?buildWrappedFallback(this):null}),new Proxy(this,{get:(e,t,r)=>{if("symbol"==typeof t||t in e||passProperties.indexOf(t)>=0)return Reflect.get(e,t,r);try{return e.getFunction(t)}catch(e){if(!isError(e,"INVALID_ARGUMENT")||"key"!==e.argument)throw e}},has:(e,t)=>"symbol"==typeof t||t in e||passProperties.indexOf(t)>=0?Reflect.has(e,t):e.interface.hasFunction(t)})}connect(e){return new BaseContract(this.target,this.interface,e)}attach(e){return new BaseContract(e,this.interface,this.runner)}async getAddress(){return await getInternal(this).addrPromise}async getDeployedCode(){const e=getProvider(this.runner);assert(e,"runner does not support .provider","UNSUPPORTED_OPERATION",{operation:"getDeployedCode"});const t=await e.getCode(await this.getAddress());return"0x"===t?null:t}async waitForDeployment(){const e=this.deploymentTransaction();if(e)return await e.wait(),this;if(null!=await this.getDeployedCode())return this;const t=getProvider(this.runner);return assert(null!=t,"contract runner does not support .provider","UNSUPPORTED_OPERATION",{operation:"waitForDeployment"}),new Promise(((e,r)=>{const n=async()=>{try{if(null!=await this.getDeployedCode())return e(this);t.once("block",n)}catch(e){r(e)}};n()}))}deploymentTransaction(){return getInternal(this).deployTx}getFunction(e){"string"!=typeof e&&(e=e.format());return buildWrappedMethod(this,e)}getEvent(e){return"string"!=typeof e&&(e=e.format()),buildWrappedEvent(this,e)}async queryTransaction(e){throw new Error("@TODO")}async queryFilter(e,t,r){null==t&&(t=0),null==r&&(r="latest");const{addr:n,addrPromise:s}=getInternal(this),i=n||await s,{fragment:a,topics:o}=await getSubInfo(this,e),c={address:i,topics:o,fromBlock:t,toBlock:r},l=getProvider(this.runner);return assert(l,"contract runner does not have a provider","UNSUPPORTED_OPERATION",{operation:"queryFilter"}),(await l.getLogs(c)).map((e=>{let t=a;if(null==t)try{t=this.interface.getEvent(e.topics[0])}catch(e){}if(t)try{return new EventLog(e,this.interface,t)}catch(t){return new UndecodedEventLog(e,t)}return new Log(e,l)}))}async on(e,t){const r=await getSub(this,"on",e);return r.listeners.push({listener:t,once:!1}),r.start(),this}async once(e,t){const r=await getSub(this,"once",e);return r.listeners.push({listener:t,once:!0}),r.start(),this}async emit(e,...t){return await emit(this,e,t,null)}async listenerCount(e){if(e){const t=await hasSub(this,e);return t?t.listeners.length:0}const{subs:t}=getInternal(this);let r=0;for(const{listeners:e}of t.values())r+=e.length;return r}async listeners(e){if(e){const t=await hasSub(this,e);return t?t.listeners.map((({listener:e})=>e)):[]}const{subs:t}=getInternal(this);let r=[];for(const{listeners:e}of t.values())r=r.concat(e.map((({listener:e})=>e)));return r}async off(e,t){const r=await hasSub(this,e);if(!r)return this;if(t){const e=r.listeners.map((({listener:e})=>e)).indexOf(t);e>=0&&r.listeners.splice(e,1)}return null!=t&&0!==r.listeners.length||(r.stop(),getInternal(this).subs.delete(r.tag)),this}async removeAllListeners(e){if(e){const t=await hasSub(this,e);if(!t)return this;t.stop(),getInternal(this).subs.delete(t.tag)}else{const{subs:e}=getInternal(this);for(const{tag:t,stop:r}of e.values())r(),e.delete(t)}return this}async addListener(e,t){return await this.on(e,t)}async removeListener(e,t){return await this.off(e,t)}static buildClass(e){return class extends BaseContract{constructor(t,r=null){super(t,e,r)}}}static from(e,t,r){null==r&&(r=null);return new this(e,t,r)}}function _ContractBase(){return BaseContract}class Contract extends(_ContractBase()){}class ContractFactory{interface;bytecode;runner;constructor(e,t,r){const n=Interface.from(e);t instanceof Uint8Array||("object"==typeof t&&(t=t.object),t.startsWith("0x")||(t="0x"+t)),defineProperties(this,{bytecode:t=hexlify(getBytes(t)),interface:n,runner:r||null})}attach(e){return new BaseContract(e,this.interface,this.runner)}async getDeployTransaction(...e){let t={};const r=this.interface.deploy;if(r.inputs.length+1===e.length&&(t=await copyOverrides(e.pop())),r.inputs.length!==e.length)throw new Error("incorrect number of arguments to constructor");const n=await resolveArgs(this.runner,r.inputs,e),s=concat([this.bytecode,this.interface.encodeDeploy(n)]);return Object.assign({},t,{data:s})}async deploy(...e){const t=await this.getDeployTransaction(...e);assert(this.runner&&"function"==typeof this.runner.sendTransaction,"factory runner does not support sending transactions","UNSUPPORTED_OPERATION",{operation:"sendTransaction"});const r=await this.runner.sendTransaction(t),n=getCreateAddress(r);return new BaseContract(n,this.interface,this.runner,r)}connect(e){return new ContractFactory(this.interface,this.bytecode,e)}static fromSolidity(e,t){assertArgument(null!=e,"bad compiler output","output",e),"string"==typeof e&&(e=JSON.parse(e));const r=e.abi;let n="";return e.bytecode?n=e.bytecode:e.evm&&e.evm.bytecode&&(n=e.evm.bytecode),new this(r,n,t)}}function getIpfsLink(e){return e.match(/^ipfs:\/\/ipfs\//i)?e=e.substring(12):e.match(/^ipfs:\/\//i)?e=e.substring(7):assertArgument(!1,"unsupported IPFS format","link",e),`https://gateway.ipfs.io/ipfs/${e}`}class MulticoinProviderPlugin{name;constructor(e){defineProperties(this,{name:e})}connect(e){return this}supportsCoinType(e){return!1}async encodeAddress(e,t){throw new Error("unsupported coin")}async decodeAddress(e,t){throw new Error("unsupported coin")}}const matcherIpfs=new RegExp("^(ipfs)://(.*)$","i"),matchers=[new RegExp("^(https)://(.*)$","i"),new RegExp("^(data):(.*)$","i"),matcherIpfs,new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$","i")];class EnsResolver{provider;address;name;#xe;#Te;constructor(e,t,r){defineProperties(this,{provider:e,address:t,name:r}),this.#xe=null,this.#Te=new Contract(t,["function supportsInterface(bytes4) view returns (bool)","function resolve(bytes, bytes) view returns (bytes)","function addr(bytes32) view returns (address)","function addr(bytes32, uint) view returns (bytes)","function text(bytes32, string) view returns (string)","function contenthash(bytes32) view returns (bytes)"],e)}async supportsWildcard(){return null==this.#xe&&(this.#xe=(async()=>{try{return await this.#Te.supportsInterface("0x9061b923")}catch(e){if(isError(e,"CALL_EXCEPTION"))return!1;throw this.#xe=null,e}})()),await this.#xe}async#Ce(e,t){t=(t||[]).slice();const r=this.#Te.interface;t.unshift(namehash(this.name));let n=null;await this.supportsWildcard()&&(n=r.getFunction(e),assert(n,"missing fragment","UNKNOWN_ERROR",{info:{funcName:e}}),t=[dnsEncode(this.name,255),r.encodeFunctionData(n,t)],e="resolve(bytes,bytes)"),t.push({enableCcipRead:!0});try{const s=await this.#Te[e](...t);return n?r.decodeFunctionResult(n,s)[0]:s}catch(e){if(!isError(e,"CALL_EXCEPTION"))throw e}return null}async getAddress(e){if(null==e&&(e=60),60===e)try{const e=await this.#Ce("addr(bytes32)");return null==e||e===ZeroAddress?null:e}catch(e){if(isError(e,"CALL_EXCEPTION"))return null;throw e}if(e>=0&&e<2147483648){let t=e+2147483648;const r=await this.#Ce("addr(bytes32,uint)",[t]);if(isHexString(r,20))return getAddress(r)}let t=null;for(const r of this.provider.plugins)if(r instanceof MulticoinProviderPlugin&&r.supportsCoinType(e)){t=r;break}if(null==t)return null;const r=await this.#Ce("addr(bytes32,uint)",[e]);if(null==r||"0x"===r)return null;const n=await t.decodeAddress(e,r);if(null!=n)return n;assert(!1,"invalid coin data","UNSUPPORTED_OPERATION",{operation:`getAddress(${e})`,info:{coinType:e,data:r}})}async getText(e){const t=await this.#Ce("text(bytes32,string)",[e]);return null==t||"0x"===t?null:t}async getContentHash(){const e=await this.#Ce("contenthash(bytes32)");if(null==e||"0x"===e)return null;const t=e.match(/^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(t){const e="e3010170"===t[1]?"ipfs":"ipns",r=parseInt(t[4],16);if(t[5].length===2*r)return`${e}://${encodeBase58("0x"+t[2])}`}const r=e.match(/^0xe40101fa011b20([0-9a-f]*)$/);if(r&&64===r[1].length)return`bzz://${r[1]}`;assert(!1,"invalid or unsupported content hash data","UNSUPPORTED_OPERATION",{operation:"getContentHash()",info:{data:e}})}async getAvatar(){return(await this._getAvatar()).url}async _getAvatar(){const e=[{type:"name",value:this.name}];try{const t=await this.getText("avatar");if(null==t)return e.push({type:"!avatar",value:""}),{url:null,linkage:e};e.push({type:"avatar",value:t});for(let r=0;r<matchers.length;r++){const n=t.match(matchers[r]);if(null==n)continue;const s=n[1].toLowerCase();switch(s){case"https":case"data":return e.push({type:"url",value:t}),{linkage:e,url:t};case"ipfs":{const r=getIpfsLink(t);return e.push({type:"ipfs",value:t}),e.push({type:"url",value:r}),{linkage:e,url:r}}case"erc721":case"erc1155":{const r="erc721"===s?"tokenURI(uint256)":"uri(uint256)";e.push({type:s,value:t});const i=await this.getAddress();if(null==i)return e.push({type:"!owner",value:""}),{url:null,linkage:e};const a=(n[2]||"").split("/");if(2!==a.length)return e.push({type:`!${s}caip`,value:n[2]||""}),{url:null,linkage:e};const o=a[1],c=new Contract(a[0],["function tokenURI(uint) view returns (string)","function ownerOf(uint) view returns (address)","function uri(uint) view returns (string)","function balanceOf(address, uint256) view returns (uint)"],this.provider);if("erc721"===s){const t=await c.ownerOf(o);if(i!==t)return e.push({type:"!owner",value:t}),{url:null,linkage:e};e.push({type:"owner",value:t})}else if("erc1155"===s){const t=await c.balanceOf(i,o);if(!t)return e.push({type:"!balance",value:"0"}),{url:null,linkage:e};e.push({type:"balance",value:t.toString()})}let l=await c[r](o);if(null==l||"0x"===l)return e.push({type:"!metadata-url",value:""}),{url:null,linkage:e};e.push({type:"metadata-url-base",value:l}),"erc1155"===s&&(l=l.replace("{id}",toBeHex(o,32).substring(2)),e.push({type:"metadata-url-expanded",value:l})),l.match(/^ipfs:/i)&&(l=getIpfsLink(l)),e.push({type:"metadata-url",value:l});let u={};const h=await new FetchRequest(l).send();h.assertOk();try{u=h.bodyJson}catch(t){try{e.push({type:"!metadata",value:h.bodyText})}catch(t){const r=h.body;return r&&e.push({type:"!metadata",value:hexlify(r)}),{url:null,linkage:e}}return{url:null,linkage:e}}if(!u)return e.push({type:"!metadata",value:""}),{url:null,linkage:e};e.push({type:"metadata",value:JSON.stringify(u)});let d=u.image;if("string"!=typeof d)return e.push({type:"!imageUrl",value:""}),{url:null,linkage:e};if(d.match(/^(https:\/\/|data:)/i));else{if(null==d.match(matcherIpfs))return e.push({type:"!imageUrl-ipfs",value:d}),{url:null,linkage:e};e.push({type:"imageUrl-ipfs",value:d}),d=getIpfsLink(d)}return e.push({type:"url",value:d}),{linkage:e,url:d}}}}}catch(e){}return{linkage:e,url:null}}static async getEnsAddress(e){const t=await e.getNetwork(),r=t.getPlugin("org.ethers.plugins.network.Ens");return assert(r,"network does not support ENS","UNSUPPORTED_OPERATION",{operation:"getEnsAddress",info:{network:t}}),r.address}static async#Ie(e,t){const r=await EnsResolver.getEnsAddress(e);try{const n=new Contract(r,["function resolver(bytes32) view returns (address)"],e),s=await n.resolver(namehash(t),{enableCcipRead:!0});return s===ZeroAddress?null:s}catch(e){throw e}return null}static async fromName(e,t){let r=t;for(;;){if(""===r||"."===r)return null;if("eth"!==t&&"eth"===r)return null;const n=await EnsResolver.#Ie(e,r);if(null!=n){const s=new EnsResolver(e,n,t);return r===t||await s.supportsWildcard()?s:null}r=r.split(".").slice(1).join(".")}}}const BN_0=BigInt(0);function allowNull(e,t){return function(r){return null==r?t:e(r)}}function arrayOf(e,t){return r=>{if(t&&null==r)return null;if(!Array.isArray(r))throw new Error("not an array");return r.map((t=>e(t)))}}function object(e,t){return r=>{const n={};for(const s in e){let i=s;if(t&&s in t&&!(i in r))for(const e of t[s])if(e in r){i=e;break}try{const t=e[s](r[i]);void 0!==t&&(n[s]=t)}catch(e){assert(!1,`invalid value for value.${s} (${e instanceof Error?e.message:"not-an-error"})`,"BAD_DATA",{value:r})}}return n}}function formatBoolean(e){switch(e){case!0:case"true":return!0;case!1:case"false":return!1}assertArgument(!1,`invalid boolean; ${JSON.stringify(e)}`,"value",e)}function formatData(e){return assertArgument(isHexString(e,!0),"invalid data","value",e),e}function formatHash(e){return assertArgument(isHexString(e,32),"invalid hash","value",e),e}const _formatLog=object({address:getAddress,blockHash:formatHash,blockNumber:getNumber,data:formatData,index:getNumber,removed:allowNull(formatBoolean,!1),topics:arrayOf(formatHash),transactionHash:formatHash,transactionIndex:getNumber},{index:["logIndex"]});function formatLog(e){return _formatLog(e)}const _formatBlock=object({hash:allowNull(formatHash),parentHash:formatHash,parentBeaconBlockRoot:allowNull(formatHash,null),number:getNumber,timestamp:getNumber,nonce:allowNull(formatData),difficulty:getBigInt,gasLimit:getBigInt,gasUsed:getBigInt,stateRoot:allowNull(formatHash,null),receiptsRoot:allowNull(formatHash,null),blobGasUsed:allowNull(getBigInt,null),excessBlobGas:allowNull(getBigInt,null),miner:allowNull(getAddress),prevRandao:allowNull(formatHash,null),extraData:formatData,baseFeePerGas:allowNull(getBigInt)},{prevRandao:["mixHash"]});function formatBlock(e){const t=_formatBlock(e);return t.transactions=e.transactions.map((e=>"string"==typeof e?e:formatTransactionResponse(e))),t}const _formatReceiptLog=object({transactionIndex:getNumber,blockNumber:getNumber,transactionHash:formatHash,address:getAddress,topics:arrayOf(formatHash),data:formatData,index:getNumber,blockHash:formatHash},{index:["logIndex"]});function formatReceiptLog(e){return _formatReceiptLog(e)}const _formatTransactionReceipt=object({to:allowNull(getAddress,null),from:allowNull(getAddress,null),contractAddress:allowNull(getAddress,null),index:getNumber,root:allowNull(hexlify),gasUsed:getBigInt,blobGasUsed:allowNull(getBigInt,null),logsBloom:allowNull(formatData),blockHash:formatHash,hash:formatHash,logs:arrayOf(formatReceiptLog),blockNumber:getNumber,cumulativeGasUsed:getBigInt,effectiveGasPrice:allowNull(getBigInt),blobGasPrice:allowNull(getBigInt,null),status:allowNull(getNumber),type:allowNull(getNumber,0)},{effectiveGasPrice:["gasPrice"],hash:["transactionHash"],index:["transactionIndex"]});function formatTransactionReceipt(e){return _formatTransactionReceipt(e)}function formatTransactionResponse(e){e.to&&getBigInt(e.to)===BN_0&&(e.to="0x0000000000000000000000000000000000000000");const t=object({hash:formatHash,index:allowNull(getNumber,void 0),type:e=>"0x"===e||null==e?0:getNumber(e),accessList:allowNull(accessListify,null),blobVersionedHashes:allowNull(arrayOf(formatHash,!0),null),blockHash:allowNull(formatHash,null),blockNumber:allowNull(getNumber,null),transactionIndex:allowNull(getNumber,null),from:getAddress,gasPrice:allowNull(getBigInt),maxPriorityFeePerGas:allowNull(getBigInt),maxFeePerGas:allowNull(getBigInt),maxFeePerBlobGas:allowNull(getBigInt,null),gasLimit:getBigInt,to:allowNull(getAddress,null),value:getBigInt,nonce:getNumber,data:formatData,creates:allowNull(getAddress,null),chainId:allowNull(getBigInt,null)},{data:["input"],gasLimit:["gas"],index:["transactionIndex"]})(e);if(null==t.to&&null==t.creates&&(t.creates=getCreateAddress(t)),1!==e.type&&2!==e.type||null!=e.accessList||(t.accessList=[]),e.signature?t.signature=Signature.from(e.signature):t.signature=Signature.from(e),null==t.chainId){const e=t.signature.legacyChainId;null!=e&&(t.chainId=e)}return t.blockHash&&getBigInt(t.blockHash)===BN_0&&(t.blockHash=null),t}const EnsAddress="0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";class NetworkPlugin{name;constructor(e){defineProperties(this,{name:e})}clone(){return new NetworkPlugin(this.name)}}class GasCostPlugin extends NetworkPlugin{effectiveBlock;txBase;txCreate;txDataZero;txDataNonzero;txAccessListStorageKey;txAccessListAddress;constructor(e,t){null==e&&(e=0),super(`org.ethers.network.plugins.GasCost#${e||0}`);const r={effectiveBlock:e};function n(e,n){let s=(t||{})[e];null==s&&(s=n),assertArgument("number"==typeof s,`invalud value for ${e}`,"costs",t),r[e]=s}n("txBase",21e3),n("txCreate",32e3),n("txDataZero",4),n("txDataNonzero",16),n("txAccessListStorageKey",1900),n("txAccessListAddress",2400),defineProperties(this,r)}clone(){return new GasCostPlugin(this.effectiveBlock,this)}}class EnsPlugin extends NetworkPlugin{address;targetNetwork;constructor(e,t){super("org.ethers.plugins.network.Ens"),defineProperties(this,{address:e||EnsAddress,targetNetwork:null==t?1:t})}clone(){return new EnsPlugin(this.address,this.targetNetwork)}}class FeeDataNetworkPlugin extends NetworkPlugin{#Re;get feeDataFunc(){return this.#Re}constructor(e){super("org.ethers.plugins.network.FeeData"),this.#Re=e}async getFeeData(e){return await this.#Re(e)}clone(){return new FeeDataNetworkPlugin(this.#Re)}}class FetchUrlFeeDataNetworkPlugin extends NetworkPlugin{#c;#Fe;get url(){return this.#c}get processFunc(){return this.#Fe}constructor(e,t){super("org.ethers.plugins.network.FetchUrlFeeDataPlugin"),this.#c=e,this.#Fe=t}clone(){return this}}const Networks=new Map;class Network{#Oe;#re;#Ue;constructor(e,t){this.#Oe=e,this.#re=getBigInt(t),this.#Ue=new Map}toJSON(){return{name:this.name,chainId:String(this.chainId)}}get name(){return this.#Oe}set name(e){this.#Oe=e}get chainId(){return this.#re}set chainId(e){this.#re=getBigInt(e,"chainId")}matches(e){if(null==e)return!1;if("string"==typeof e){try{return this.chainId===getBigInt(e)}catch(e){}return this.name===e}if("number"==typeof e||"bigint"==typeof e){try{return this.chainId===getBigInt(e)}catch(e){}return!1}if("object"==typeof e){if(null!=e.chainId){try{return this.chainId===getBigInt(e.chainId)}catch(e){}return!1}return null!=e.name&&this.name===e.name}return!1}get plugins(){return Array.from(this.#Ue.values())}attachPlugin(e){if(this.#Ue.get(e.name))throw new Error(`cannot replace existing plugin: ${e.name} `);return this.#Ue.set(e.name,e.clone()),this}getPlugin(e){return this.#Ue.get(e)||null}getPlugins(e){return this.plugins.filter((t=>t.name.split("#")[0]===e))}clone(){const e=new Network(this.name,this.chainId);return this.plugins.forEach((t=>{e.attachPlugin(t.clone())})),e}computeIntrinsicGas(e){const t=this.getPlugin("org.ethers.plugins.network.GasCost")||new GasCostPlugin;let r=t.txBase;if(null==e.to&&(r+=t.txCreate),e.data)for(let n=2;n<e.data.length;n+=2)"00"===e.data.substring(n,n+2)?r+=t.txDataZero:r+=t.txDataNonzero;if(e.accessList){const n=accessListify(e.accessList);for(const e in n)r+=t.txAccessListAddress+t.txAccessListStorageKey*n[e].storageKeys.length}return r}static from(e){if(injectCommonNetworks(),null==e)return Network.from("mainnet");if("number"==typeof e&&(e=BigInt(e)),"string"==typeof e||"bigint"==typeof e){const t=Networks.get(e);if(t)return t();if("bigint"==typeof e)return new Network("unknown",e);assertArgument(!1,"unknown network","network",e)}if("function"==typeof e.clone){return e.clone()}if("object"==typeof e){assertArgument("string"==typeof e.name&&"number"==typeof e.chainId,"invalid network object name or chainId","network",e);const t=new Network(e.name,e.chainId);return(e.ensAddress||null!=e.ensNetwork)&&t.attachPlugin(new EnsPlugin(e.ensAddress,e.ensNetwork)),t}assertArgument(!1,"invalid network","network",e)}static register(e,t){"number"==typeof e&&(e=BigInt(e));const r=Networks.get(e);r&&assertArgument(!1,`conflicting network for ${JSON.stringify(r.name)}`,"nameOrChainId",e),Networks.set(e,t)}}function parseUnits(e,t){const r=String(e);if(!r.match(/^[0-9.]+$/))throw new Error(`invalid gwei value: ${e}`);const n=r.split(".");if(1===n.length&&n.push(""),2!==n.length)throw new Error(`invalid gwei value: ${e}`);for(;n[1].length<t;)n[1]+="0";if(n[1].length>9){let e=BigInt(n[1].substring(0,9));n[1].substring(9).match(/^0+$/)||e++,n[1]=e.toString()}return BigInt(n[0]+n[1])}function getGasStationPlugin(e){return new FetchUrlFeeDataNetworkPlugin(e,(async(e,t,r)=>{let n;r.setHeader("User-Agent","ethers");try{const[t,s]=await Promise.all([r.send(),e()]);n=t;const i=n.bodyJson.standard;return{gasPrice:s.gasPrice,maxFeePerGas:parseUnits(i.maxFee,9),maxPriorityFeePerGas:parseUnits(i.maxPriorityFee,9)}}catch(e){assert(!1,`error encountered with polygon gas station (${JSON.stringify(r.url)})`,"SERVER_ERROR",{request:r,response:n,error:e})}}))}let injected=!1;function injectCommonNetworks(){function e(e,t,r){const n=function(){const n=new Network(e,t);return null!=r.ensNetwork&&n.attachPlugin(new EnsPlugin(null,r.ensNetwork)),n.attachPlugin(new GasCostPlugin),(r.plugins||[]).forEach((e=>{n.attachPlugin(e)})),n};Network.register(e,n),Network.register(t,n),r.altNames&&r.altNames.forEach((e=>{Network.register(e,n)}))}injected||(injected=!0,e("mainnet",1,{ensNetwork:1,altNames:["homestead"]}),e("ropsten",3,{ensNetwork:3}),e("rinkeby",4,{ensNetwork:4}),e("goerli",5,{ensNetwork:5}),e("kovan",42,{ensNetwork:42}),e("sepolia",11155111,{ensNetwork:11155111}),e("holesky",17e3,{ensNetwork:17e3}),e("classic",61,{}),e("classicKotti",6,{}),e("arbitrum",42161,{ensNetwork:1}),e("arbitrum-goerli",421613,{}),e("arbitrum-sepolia",421614,{}),e("base",8453,{ensNetwork:1}),e("base-goerli",84531,{}),e("base-sepolia",84532,{}),e("bnb",56,{ensNetwork:1}),e("bnbt",97,{}),e("linea",59144,{ensNetwork:1}),e("linea-goerli",59140,{}),e("linea-sepolia",59141,{}),e("matic",137,{ensNetwork:1,plugins:[getGasStationPlugin("https://gasstation.polygon.technology/v2")]}),e("matic-amoy",80002,{}),e("matic-mumbai",80001,{altNames:["maticMumbai","maticmum"],plugins:[getGasStationPlugin("https://gasstation-testnet.polygon.technology/v2")]}),e("optimism",10,{ensNetwork:1,plugins:[]}),e("optimism-goerli",420,{}),e("optimism-sepolia",11155420,{}),e("xdai",100,{ensNetwork:1}))}function copy$2(e){return JSON.parse(JSON.stringify(e))}class PollingBlockSubscriber{#Le;#De;#Me;#He;constructor(e){this.#Le=e,this.#De=null,this.#Me=4e3,this.#He=-2}get pollingInterval(){return this.#Me}set pollingInterval(e){this.#Me=e}async#Ge(){try{const e=await this.#Le.getBlockNumber();if(-2===this.#He)return void(this.#He=e);if(e!==this.#He){for(let t=this.#He+1;t<=e;t++){if(null==this.#De)return;await this.#Le.emit("block",t)}this.#He=e}}catch(e){}null!=this.#De&&(this.#De=this.#Le._setTimeout(this.#Ge.bind(this),this.#Me))}start(){this.#De||(this.#De=this.#Le._setTimeout(this.#Ge.bind(this),this.#Me),this.#Ge())}stop(){this.#De&&(this.#Le._clearTimeout(this.#De),this.#De=null)}pause(e){this.stop(),e&&(this.#He=-2)}resume(){this.start()}}class OnBlockSubscriber{#Le;#Ge;#$e;constructor(e){this.#Le=e,this.#$e=!1,this.#Ge=e=>{this._poll(e,this.#Le)}}async _poll(e,t){throw new Error("sub-classes must override this")}start(){this.#$e||(this.#$e=!0,this.#Ge(-2),this.#Le.on("block",this.#Ge))}stop(){this.#$e&&(this.#$e=!1,this.#Le.off("block",this.#Ge))}pause(e){this.stop()}resume(){this.start()}}class PollingBlockTagSubscriber extends OnBlockSubscriber{#Ve;#Ke;constructor(e,t){super(e),this.#Ve=t,this.#Ke=-2}pause(e){e&&(this.#Ke=-2),super.pause(e)}async _poll(e,t){const r=await t.getBlock(this.#Ve);null!=r&&(-2===this.#Ke?this.#Ke=r.number:r.number>this.#Ke&&(t.emit(this.#Ve,r.number),this.#Ke=r.number))}}class PollingOrphanSubscriber extends OnBlockSubscriber{#Se;constructor(e,t){super(e),this.#Se=copy$2(t)}async _poll(e,t){throw new Error("@TODO")}}class PollingTransactionSubscriber extends OnBlockSubscriber{#Je;constructor(e,t){super(e),this.#Je=t}async _poll(e,t){const r=await t.getTransactionReceipt(this.#Je);r&&t.emit(this.#Je,r)}}class PollingEventSubscriber{#Le;#Se;#De;#$e;#He;constructor(e,t){this.#Le=e,this.#Se=copy$2(t),this.#De=this.#Ge.bind(this),this.#$e=!1,this.#He=-2}async#Ge(e){if(-2===this.#He)return;const t=copy$2(this.#Se);t.fromBlock=this.#He+1,t.toBlock=e;const r=await this.#Le.getLogs(t);if(0!==r.length)for(const e of r)this.#Le.emit(this.#Se,e),this.#He=e.blockNumber;else this.#He<e-60&&(this.#He=e-60)}start(){this.#$e||(this.#$e=!0,-2===this.#He&&this.#Le.getBlockNumber().then((e=>{this.#He=e})),this.#Le.on("block",this.#De))}stop(){this.#$e&&(this.#$e=!1,this.#Le.off("block",this.#De))}pause(e){this.stop(),e&&(this.#He=-2)}resume(){this.start()}}const BN_2$1=BigInt(2),MAX_CCIP_REDIRECTS=10;function isPromise$1(e){return e&&"function"==typeof e.then}function getTag(e,t){return e+":"+JSON.stringify(t,((e,t)=>{if(null==t)return"null";if("bigint"==typeof t)return`bigint:${t.toString()}`;if("string"==typeof t)return t.toLowerCase();if("object"==typeof t&&!Array.isArray(t)){const e=Object.keys(t);return e.sort(),e.reduce(((e,r)=>(e[r]=t[r],e)),{})}return t}))}class UnmanagedSubscriber{name;constructor(e){defineProperties(this,{name:e})}start(){}stop(){}pause(e){}resume(){}}function copy$1(e){return JSON.parse(JSON.stringify(e))}function concisify(e){return(e=Array.from(new Set(e).values())).sort(),e}async function getSubscription(e,t){if(null==e)throw new Error("invalid event");if(Array.isArray(e)&&(e={topics:e}),"string"==typeof e)switch(e){case"block":case"debug":case"error":case"finalized":case"network":case"pending":case"safe":return{type:e,tag:e}}if(isHexString(e,32)){const t=e.toLowerCase();return{type:"transaction",tag:getTag("tx",{hash:t}),hash:t}}if(e.orphan){const t=e;return{type:"orphan",tag:getTag("orphan",t),filter:copy$1(t)}}if(e.address||e.topics){const r=e,n={topics:(r.topics||[]).map((e=>null==e?null:Array.isArray(e)?concisify(e.map((e=>e.toLowerCase()))):e.toLowerCase()))};if(r.address){const e=[],s=[],i=r=>{isHexString(r)?e.push(r):s.push((async()=>{e.push(await resolveAddress(r,t))})())};Array.isArray(r.address)?r.address.forEach(i):i(r.address),s.length&&await Promise.all(s),n.address=concisify(e.map((e=>e.toLowerCase())))}return{filter:n,tag:getTag("event",n),type:"event"}}assertArgument(!1,"unknown ProviderEvent","event",e)}function getTime$1(){return(new Date).getTime()}const defaultOptions$1={cacheTimeout:250,pollingInterval:4e3};class AbstractProvider{#Qe;#Ue;#je;#ze;#qe;#We;#Ze;#Ye;#Xe;#et;#tt;#j;constructor(e,t){if(this.#j=Object.assign({},defaultOptions$1,t||{}),"any"===e)this.#We=!0,this.#qe=null;else if(e){const t=Network.from(e);this.#We=!1,this.#qe=Promise.resolve(t),setTimeout((()=>{this.emit("network",t,null)}),0)}else this.#We=!1,this.#qe=null;this.#Ye=-1,this.#Ze=new Map,this.#Qe=new Map,this.#Ue=new Map,this.#je=null,this.#ze=!1,this.#Xe=1,this.#et=new Map,this.#tt=!1}get pollingInterval(){return this.#j.pollingInterval}get provider(){return this}get plugins(){return Array.from(this.#Ue.values())}attachPlugin(e){if(this.#Ue.get(e.name))throw new Error(`cannot replace existing plugin: ${e.name} `);return this.#Ue.set(e.name,e.connect(this)),this}getPlugin(e){return this.#Ue.get(e)||null}get disableCcipRead(){return this.#tt}set disableCcipRead(e){this.#tt=!!e}async#rt(e){const t=this.#j.cacheTimeout;if(t<0)return await this._perform(e);const r=getTag(e.method,e);let n=this.#Ze.get(r);return n||(n=this._perform(e),this.#Ze.set(r,n),setTimeout((()=>{this.#Ze.get(r)===n&&this.#Ze.delete(r)}),t)),await n}async ccipReadFetch(e,t,r){if(this.disableCcipRead||0===r.length||null==e.to)return null;const n=e.to.toLowerCase(),s=t.toLowerCase(),i=[];for(let t=0;t<r.length;t++){const a=r[t],o=a.replace("{sender}",n).replace("{data}",s),c=new FetchRequest(o);-1===a.indexOf("{data}")&&(c.body={data:s,sender:n}),this.emit("debug",{action:"sendCcipReadFetchRequest",request:c,index:t,urls:r});let l,u="unknown error";try{l=await c.send()}catch(e){i.push(e.message),this.emit("debug",{action:"receiveCcipReadFetchError",request:c,result:{error:e}});continue}try{const e=l.bodyJson;if(e.data)return this.emit("debug",{action:"receiveCcipReadFetchResult",request:c,result:e}),e.data;e.message&&(u=e.message),this.emit("debug",{action:"receiveCcipReadFetchError",request:c,result:e})}catch(e){}assert(l.statusCode<400||l.statusCode>=500,`response not found during CCIP fetch: ${u}`,"OFFCHAIN_FAULT",{reason:"404_MISSING_RESOURCE",transaction:e,info:{url:a,errorMessage:u}}),i.push(u)}assert(!1,`error encountered during CCIP fetch: ${i.map((e=>JSON.stringify(e))).join(", ")}`,"OFFCHAIN_FAULT",{reason:"500_SERVER_ERROR",transaction:e,info:{urls:r,errorMessages:i}})}_wrapBlock(e,t){return new Block(formatBlock(e),this)}_wrapLog(e,t){return new Log(formatLog(e),this)}_wrapTransactionReceipt(e,t){return new TransactionReceipt(formatTransactionReceipt(e),this)}_wrapTransactionResponse(e,t){return new TransactionResponse(formatTransactionResponse(e),this)}_detectNetwork(){assert(!1,"sub-classes must implement this","UNSUPPORTED_OPERATION",{operation:"_detectNetwork"})}async _perform(e){assert(!1,`unsupported method: ${e.method}`,"UNSUPPORTED_OPERATION",{operation:e.method,info:e})}async getBlockNumber(){const e=getNumber(await this.#rt({method:"getBlockNumber"}),"%response");return this.#Ye>=0&&(this.#Ye=e),e}_getAddress(e){return resolveAddress(e,this)}_getBlockTag(e){if(null==e)return"latest";switch(e){case"earliest":return"0x0";case"finalized":case"latest":case"pending":case"safe":return e}return isHexString(e)?isHexString(e,32)?e:toQuantity(e):("bigint"==typeof e&&(e=getNumber(e,"blockTag")),"number"==typeof e?e>=0?toQuantity(e):this.#Ye>=0?toQuantity(this.#Ye+e):this.getBlockNumber().then((t=>toQuantity(t+e))):void assertArgument(!1,"invalid blockTag","blockTag",e))}_getFilter(e){const t=(e.topics||[]).map((e=>null==e?null:Array.isArray(e)?concisify(e.map((e=>e.toLowerCase()))):e.toLowerCase())),r="blockHash"in e?e.blockHash:void 0,n=(e,n,s)=>{let i;switch(e.length){case 0:break;case 1:i=e[0];break;default:e.sort(),i=e}if(r&&(null!=n||null!=s))throw new Error("invalid filter");const a={};return i&&(a.address=i),t.length&&(a.topics=t),n&&(a.fromBlock=n),s&&(a.toBlock=s),r&&(a.blockHash=r),a};let s,i,a=[];if(e.address)if(Array.isArray(e.address))for(const t of e.address)a.push(this._getAddress(t));else a.push(this._getAddress(e.address));return"fromBlock"in e&&(s=this._getBlockTag(e.fromBlock)),"toBlock"in e&&(i=this._getBlockTag(e.toBlock)),a.filter((e=>"string"!=typeof e)).length||null!=s&&"string"!=typeof s||null!=i&&"string"!=typeof i?Promise.all([Promise.all(a),s,i]).then((e=>n(e[0],e[1],e[2]))):n(a,s,i)}_getTransactionRequest(e){const t=copyRequest(e),r=[];if(["to","from"].forEach((e=>{if(null==t[e])return;const n=resolveAddress(t[e],this);isPromise$1(n)?r.push(async function(){t[e]=await n}()):t[e]=n})),null!=t.blockTag){const e=this._getBlockTag(t.blockTag);isPromise$1(e)?r.push(async function(){t.blockTag=await e}()):t.blockTag=e}return r.length?async function(){return await Promise.all(r),t}():t}async getNetwork(){if(null==this.#qe){const e=(async()=>{try{const e=await this._detectNetwork();return this.emit("network",e,null),e}catch(t){throw this.#qe===e&&(this.#qe=null),t}})();return this.#qe=e,(await e).clone()}const e=this.#qe,[t,r]=await Promise.all([e,this._detectNetwork()]);return t.chainId!==r.chainId&&(this.#We?(this.emit("network",r,t),this.#qe===e&&(this.#qe=Promise.resolve(r))):assert(!1,`network changed: ${t.chainId} => ${r.chainId} `,"NETWORK_ERROR",{event:"changed"})),t.clone()}async getFeeData(){const e=await this.getNetwork(),t=async()=>{const{_block:t,gasPrice:r,priorityFee:n}=await resolveProperties({_block:this.#nt("latest",!1),gasPrice:(async()=>{try{return getBigInt(await this.#rt({method:"getGasPrice"}),"%response")}catch(e){}return null})(),priorityFee:(async()=>{try{return getBigInt(await this.#rt({method:"getPriorityFee"}),"%response")}catch(e){}return null})()});let s=null,i=null;const a=this._wrapBlock(t,e);return a&&a.baseFeePerGas&&(i=null!=n?n:BigInt("1000000000"),s=a.baseFeePerGas*BN_2$1+i),new FeeData(r,s,i)},r=e.getPlugin("org.ethers.plugins.network.FetchUrlFeeDataPlugin");if(r){const e=new FetchRequest(r.url),n=await r.processFunc(t,this,e);return new FeeData(n.gasPrice,n.maxFeePerGas,n.maxPriorityFeePerGas)}return await t()}async estimateGas(e){let t=this._getTransactionRequest(e);return isPromise$1(t)&&(t=await t),getBigInt(await this.#rt({method:"estimateGas",transaction:t}),"%response")}async#st(e,t,r){assert(r<10,"CCIP read exceeded maximum redirections","OFFCHAIN_FAULT",{reason:"TOO_MANY_REDIRECTS",transaction:Object.assign({},e,{blockTag:t,enableCcipRead:!0})});const n=copyRequest(e);try{return hexlify(await this._perform({method:"call",transaction:n,blockTag:t}))}catch(e){if(!this.disableCcipRead&&isCallException(e)&&e.data&&r>=0&&"latest"===t&&null!=n.to&&"0x556f1830"===dataSlice(e.data,0,4)){const s=e.data,i=await resolveAddress(n.to,this);let a;try{a=parseOffchainLookup(dataSlice(e.data,4))}catch(e){assert(!1,e.message,"OFFCHAIN_FAULT",{reason:"BAD_DATA",transaction:n,info:{data:s}})}assert(a.sender.toLowerCase()===i.toLowerCase(),"CCIP Read sender mismatch","CALL_EXCEPTION",{action:"call",data:s,reason:"OffchainLookup",transaction:n,invocation:null,revert:{signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",name:"OffchainLookup",args:a.errorArgs}});const o=await this.ccipReadFetch(n,a.calldata,a.urls);assert(null!=o,"CCIP Read failed to fetch data","OFFCHAIN_FAULT",{reason:"FETCH_FAILED",transaction:n,info:{data:e.data,errorArgs:a.errorArgs}});const c={to:i,data:concat([a.selector,encodeBytes([o,a.extraData])])};this.emit("debug",{action:"sendCcipReadCall",transaction:c});try{const e=await this.#st(c,t,r+1);return this.emit("debug",{action:"receiveCcipReadCallResult",transaction:Object.assign({},c),result:e}),e}catch(e){throw this.emit("debug",{action:"receiveCcipReadCallError",transaction:Object.assign({},c),error:e}),e}}throw e}}async#it(e){const{value:t}=await resolveProperties({network:this.getNetwork(),value:e});return t}async call(e){const{tx:t,blockTag:r}=await resolveProperties({tx:this._getTransactionRequest(e),blockTag:this._getBlockTag(e.blockTag)});return await this.#it(this.#st(t,r,e.enableCcipRead?0:-1))}async#at(e,t,r){let n=this._getAddress(t),s=this._getBlockTag(r);return"string"==typeof n&&"string"==typeof s||([n,s]=await Promise.all([n,s])),await this.#it(this.#rt(Object.assign(e,{address:n,blockTag:s})))}async getBalance(e,t){return getBigInt(await this.#at({method:"getBalance"},e,t),"%response")}async getTransactionCount(e,t){return getNumber(await this.#at({method:"getTransactionCount"},e,t),"%response")}async getCode(e,t){return hexlify(await this.#at({method:"getCode"},e,t))}async getStorage(e,t,r){const n=getBigInt(t,"position");return hexlify(await this.#at({method:"getStorage",position:n},e,r))}async broadcastTransaction(e){const{blockNumber:t,hash:r,network:n}=await resolveProperties({blockNumber:this.getBlockNumber(),hash:this._perform({method:"broadcastTransaction",signedTransaction:e}),network:this.getNetwork()}),s=Transaction.from(e);if(s.hash!==r)throw new Error("@TODO: the returned hash did not match");return this._wrapTransactionResponse(s,n).replaceableTransaction(t)}async#nt(e,t){if(isHexString(e,32))return await this.#rt({method:"getBlock",blockHash:e,includeTransactions:t});let r=this._getBlockTag(e);return"string"!=typeof r&&(r=await r),await this.#rt({method:"getBlock",blockTag:r,includeTransactions:t})}async getBlock(e,t){const{network:r,params:n}=await resolveProperties({network:this.getNetwork(),params:this.#nt(e,!!t)});return null==n?null:this._wrapBlock(n,r)}async getTransaction(e){const{network:t,params:r}=await resolveProperties({network:this.getNetwork(),params:this.#rt({method:"getTransaction",hash:e})});return null==r?null:this._wrapTransactionResponse(r,t)}async getTransactionReceipt(e){const{network:t,params:r}=await resolveProperties({network:this.getNetwork(),params:this.#rt({method:"getTransactionReceipt",hash:e})});if(null==r)return null;if(null==r.gasPrice&&null==r.effectiveGasPrice){const t=await this.#rt({method:"getTransaction",hash:e});if(null==t)throw new Error("report this; could not find tx or effectiveGasPrice");r.effectiveGasPrice=t.gasPrice}return this._wrapTransactionReceipt(r,t)}async getTransactionResult(e){const{result:t}=await resolveProperties({network:this.getNetwork(),result:this.#rt({method:"getTransactionResult",hash:e})});return null==t?null:hexlify(t)}async getLogs(e){let t=this._getFilter(e);isPromise$1(t)&&(t=await t);const{network:r,params:n}=await resolveProperties({network:this.getNetwork(),params:this.#rt({method:"getLogs",filter:t})});return n.map((e=>this._wrapLog(e,r)))}_getProvider(e){assert(!1,"provider cannot connect to target network","UNSUPPORTED_OPERATION",{operation:"_getProvider()"})}async getResolver(e){return await EnsResolver.fromName(this,e)}async getAvatar(e){const t=await this.getResolver(e);return t?await t.getAvatar():null}async resolveName(e){const t=await this.getResolver(e);return t?await t.getAddress():null}async lookupAddress(e){const t=namehash((e=getAddress(e)).substring(2).toLowerCase()+".addr.reverse");try{const r=await EnsResolver.getEnsAddress(this),n=new Contract(r,["function resolver(bytes32) view returns (address)"],this),s=await n.resolver(t);if(null==s||s===ZeroAddress)return null;const i=new Contract(s,["function name(bytes32) view returns (string)"],this),a=await i.name(t);return await this.resolveName(a)!==e?null:a}catch(e){if(isError(e,"BAD_DATA")&&"0x"===e.value)return null;if(isError(e,"CALL_EXCEPTION"))return null;throw e}return null}async waitForTransaction(e,t,r){const n=null!=t?t:1;return 0===n?this.getTransactionReceipt(e):new Promise((async(t,s)=>{let i=null;const a=async r=>{try{const s=await this.getTransactionReceipt(e);if(null!=s&&r-s.blockNumber+1>=n)return t(s),void(i&&(clearTimeout(i),i=null))}catch(e){console.log("EEE",e)}this.once("block",a)};null!=r&&(i=setTimeout((()=>{null!=i&&(i=null,this.off("block",a),s(makeError("timeout","TIMEOUT",{reason:"timeout"})))}),r)),a(await this.getBlockNumber())}))}async waitForBlock(e){assert(!1,"not implemented yet","NOT_IMPLEMENTED",{operation:"waitForBlock"})}_clearTimeout(e){const t=this.#et.get(e);t&&(t.timer&&clearTimeout(t.timer),this.#et.delete(e))}_setTimeout(e,t){null==t&&(t=0);const r=this.#Xe++,n=()=>{this.#et.delete(r),e()};if(this.paused)this.#et.set(r,{timer:null,func:n,time:t});else{const e=setTimeout(n,t);this.#et.set(r,{timer:e,func:n,time:getTime$1()})}return r}_forEachSubscriber(e){for(const t of this.#Qe.values())e(t.subscriber)}_getSubscriber(e){switch(e.type){case"debug":case"error":case"network":return new UnmanagedSubscriber(e.type);case"block":{const e=new PollingBlockSubscriber(this);return e.pollingInterval=this.pollingInterval,e}case"safe":case"finalized":return new PollingBlockTagSubscriber(this,e.type);case"event":return new PollingEventSubscriber(this,e.filter);case"transaction":return new PollingTransactionSubscriber(this,e.hash);case"orphan":return new PollingOrphanSubscriber(this,e.filter)}throw new Error(`unsupported event: ${e.type}`)}_recoverSubscriber(e,t){for(const r of this.#Qe.values())if(r.subscriber===e){r.started&&r.subscriber.stop(),r.subscriber=t,r.started&&t.start(),null!=this.#je&&t.pause(this.#je);break}}async#ot(e,t){let r=await getSubscription(e,this);return"event"===r.type&&t&&t.length>0&&!0===t[0].removed&&(r=await getSubscription({orphan:"drop-log",log:t[0]},this)),this.#Qe.get(r.tag)||null}async#ct(e){const t=await getSubscription(e,this),r=t.tag;let n=this.#Qe.get(r);if(!n){n={subscriber:this._getSubscriber(t),tag:r,addressableMap:new WeakMap,nameMap:new Map,started:!1,listeners:[]},this.#Qe.set(r,n)}return n}async on(e,t){const r=await this.#ct(e);return r.listeners.push({listener:t,once:!1}),r.started||(r.subscriber.start(),r.started=!0,null!=this.#je&&r.subscriber.pause(this.#je)),this}async once(e,t){const r=await this.#ct(e);return r.listeners.push({listener:t,once:!0}),r.started||(r.subscriber.start(),r.started=!0,null!=this.#je&&r.subscriber.pause(this.#je)),this}async emit(e,...t){const r=await this.#ot(e,t);if(!r||0===r.listeners.length)return!1;const n=r.listeners.length;return r.listeners=r.listeners.filter((({listener:r,once:n})=>{const s=new EventPayload(this,n?null:r,e);try{r.call(this,...t,s)}catch(e){}return!n})),0===r.listeners.length&&(r.started&&r.subscriber.stop(),this.#Qe.delete(r.tag)),n>0}async listenerCount(e){if(e){const t=await this.#ot(e);return t?t.listeners.length:0}let t=0;for(const{listeners:e}of this.#Qe.values())t+=e.length;return t}async listeners(e){if(e){const t=await this.#ot(e);return t?t.listeners.map((({listener:e})=>e)):[]}let t=[];for(const{listeners:e}of this.#Qe.values())t=t.concat(e.map((({listener:e})=>e)));return t}async off(e,t){const r=await this.#ot(e);if(!r)return this;if(t){const e=r.listeners.map((({listener:e})=>e)).indexOf(t);e>=0&&r.listeners.splice(e,1)}return t&&0!==r.listeners.length||(r.started&&r.subscriber.stop(),this.#Qe.delete(r.tag)),this}async removeAllListeners(e){if(e){const{tag:t,started:r,subscriber:n}=await this.#ct(e);r&&n.stop(),this.#Qe.delete(t)}else for(const[e,{started:t,subscriber:r}]of this.#Qe)t&&r.stop(),this.#Qe.delete(e);return this}async addListener(e,t){return await this.on(e,t)}async removeListener(e,t){return this.off(e,t)}get destroyed(){return this.#ze}destroy(){this.removeAllListeners();for(const e of this.#et.keys())this._clearTimeout(e);this.#ze=!0}get paused(){return null!=this.#je}set paused(e){!!e!==this.paused&&(this.paused?this.resume():this.pause(!1))}pause(e){if(this.#Ye=-1,null!=this.#je){if(this.#je==!!e)return;assert(!1,"cannot change pause type; resume first","UNSUPPORTED_OPERATION",{operation:"pause"})}this._forEachSubscriber((t=>t.pause(e))),this.#je=!!e;for(const e of this.#et.values())e.timer&&clearTimeout(e.timer),e.time=getTime$1()-e.time}resume(){if(null!=this.#je){this._forEachSubscriber((e=>e.resume())),this.#je=null;for(const e of this.#et.values()){let t=e.time;t<0&&(t=0),e.time=getTime$1(),setTimeout(e.func,t)}}}}function _parseString(e,t){try{const r=_parseBytes(e,t);if(r)return toUtf8String(r)}catch(e){}return null}function _parseBytes(e,t){if("0x"===e)return null;try{const r=getNumber(dataSlice(e,t,t+32)),n=getNumber(dataSlice(e,r,r+32));return dataSlice(e,r+32,r+32+n)}catch(e){}return null}function numPad(e){const t=toBeArray(e);if(t.length>32)throw new Error("internal; should not happen");const r=new Uint8Array(32);return r.set(t,32-t.length),r}function bytesPad(e){if(e.length%32==0)return e;const t=new Uint8Array(32*Math.ceil(e.length/32));return t.set(e),t}const empty=new Uint8Array([]);function encodeBytes(e){const t=[];let r=0;for(let n=0;n<e.length;n++)t.push(empty),r+=32;for(let n=0;n<e.length;n++){const s=getBytes(e[n]);t[n]=numPad(r),t.push(numPad(s.length)),t.push(bytesPad(s)),r+=32+32*Math.ceil(s.length/32)}return concat(t)}const zeros="0x0000000000000000000000000000000000000000000000000000000000000000";function parseOffchainLookup(e){const t={sender:"",urls:[],calldata:"",selector:"",extraData:"",errorArgs:[]};assert(dataLength(e)>=160,"insufficient OffchainLookup data","OFFCHAIN_FAULT",{reason:"insufficient OffchainLookup data"});const r=dataSlice(e,0,32);assert(dataSlice(r,0,12)===dataSlice(zeros,0,12),"corrupt OffchainLookup sender","OFFCHAIN_FAULT",{reason:"corrupt OffchainLookup sender"}),t.sender=dataSlice(r,12);try{const r=[],n=getNumber(dataSlice(e,32,64)),s=getNumber(dataSlice(e,n,n+32)),i=dataSlice(e,n+32);for(let e=0;e<s;e++){const t=_parseString(i,32*e);if(null==t)throw new Error("abort");r.push(t)}t.urls=r}catch(e){assert(!1,"corrupt OffchainLookup urls","OFFCHAIN_FAULT",{reason:"corrupt OffchainLookup urls"})}try{const r=_parseBytes(e,64);if(null==r)throw new Error("abort");t.calldata=r}catch(e){assert(!1,"corrupt OffchainLookup calldata","OFFCHAIN_FAULT",{reason:"corrupt OffchainLookup calldata"})}assert(dataSlice(e,100,128)===dataSlice(zeros,0,28),"corrupt OffchainLookup callbaackSelector","OFFCHAIN_FAULT",{reason:"corrupt OffchainLookup callbaackSelector"}),t.selector=dataSlice(e,96,100);try{const r=_parseBytes(e,128);if(null==r)throw new Error("abort");t.extraData=r}catch(e){assert(!1,"corrupt OffchainLookup extraData","OFFCHAIN_FAULT",{reason:"corrupt OffchainLookup extraData"})}return t.errorArgs="sender,urls,calldata,selector,extraData".split(/,/).map((e=>t[e])),t}function checkProvider(e,t){if(e.provider)return e.provider;assert(!1,"missing provider","UNSUPPORTED_OPERATION",{operation:t})}async function populate(e,t){let r=copyRequest(t);if(null!=r.to&&(r.to=resolveAddress(r.to,e)),null!=r.from){const t=r.from;r.from=Promise.all([e.getAddress(),resolveAddress(t,e)]).then((([e,t])=>(assertArgument(e.toLowerCase()===t.toLowerCase(),"transaction from mismatch","tx.from",t),e)))}else r.from=e.getAddress();return await resolveProperties(r)}class AbstractSigner{provider;constructor(e){defineProperties(this,{provider:e||null})}async getNonce(e){return checkProvider(this,"getTransactionCount").getTransactionCount(await this.getAddress(),e)}async populateCall(e){return await populate(this,e)}async populateTransaction(e){const t=checkProvider(this,"populateTransaction"),r=await populate(this,e);null==r.nonce&&(r.nonce=await this.getNonce("pending")),null==r.gasLimit&&(r.gasLimit=await this.estimateGas(r));const n=await this.provider.getNetwork();if(null!=r.chainId){assertArgument(getBigInt(r.chainId)===n.chainId,"transaction chainId mismatch","tx.chainId",e.chainId)}else r.chainId=n.chainId;const s=null!=r.maxFeePerGas||null!=r.maxPriorityFeePerGas;if(null==r.gasPrice||2!==r.type&&!s?0!==r.type&&1!==r.type||!s||assertArgument(!1,"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","tx",e):assertArgument(!1,"eip-1559 transaction do not support gasPrice","tx",e),2!==r.type&&null!=r.type||null==r.maxFeePerGas||null==r.maxPriorityFeePerGas)if(0===r.type||1===r.type){const e=await t.getFeeData();assert(null!=e.gasPrice,"network does not support gasPrice","UNSUPPORTED_OPERATION",{operation:"getGasPrice"}),null==r.gasPrice&&(r.gasPrice=e.gasPrice)}else{const e=await t.getFeeData();if(null==r.type)if(null!=e.maxFeePerGas&&null!=e.maxPriorityFeePerGas)if(r.type=2,null!=r.gasPrice){const e=r.gasPrice;delete r.gasPrice,r.maxFeePerGas=e,r.maxPriorityFeePerGas=e}else null==r.maxFeePerGas&&(r.maxFeePerGas=e.maxFeePerGas),null==r.maxPriorityFeePerGas&&(r.maxPriorityFeePerGas=e.maxPriorityFeePerGas);else null!=e.gasPrice?(assert(!s,"network does not support EIP-1559","UNSUPPORTED_OPERATION",{operation:"populateTransaction"}),null==r.gasPrice&&(r.gasPrice=e.gasPrice),r.type=0):assert(!1,"failed to get consistent fee data","UNSUPPORTED_OPERATION",{operation:"signer.getFeeData"});else 2!==r.type&&3!==r.type||(null==r.maxFeePerGas&&(r.maxFeePerGas=e.maxFeePerGas),null==r.maxPriorityFeePerGas&&(r.maxPriorityFeePerGas=e.maxPriorityFeePerGas))}else r.type=2;return await resolveProperties(r)}async estimateGas(e){return checkProvider(this,"estimateGas").estimateGas(await this.populateCall(e))}async call(e){return checkProvider(this,"call").call(await this.populateCall(e))}async resolveName(e){const t=checkProvider(this,"resolveName");return await t.resolveName(e)}async sendTransaction(e){const t=checkProvider(this,"sendTransaction"),r=await this.populateTransaction(e);delete r.from;const n=Transaction.from(r);return await t.broadcastTransaction(await this.signTransaction(n))}}class VoidSigner extends AbstractSigner{address;constructor(e,t){super(t),defineProperties(this,{address:e})}async getAddress(){return this.address}connect(e){return new VoidSigner(this.address,e)}#lt(e,t){assert(!1,`VoidSigner cannot sign ${e}`,"UNSUPPORTED_OPERATION",{operation:t})}async signTransaction(e){this.#lt("transactions","signTransaction")}async signMessage(e){this.#lt("messages","signMessage")}async signTypedData(e,t,r){this.#lt("typed-data","signTypedData")}}const shown=new Set;function showThrottleMessage(e){shown.has(e)||(shown.add(e),console.log("========= NOTICE ========="),console.log(`Request-Rate Exceeded for ${e} (this message will not be repeated)`),console.log(""),console.log("The default API keys for each service are provided as a highly-throttled,"),console.log("community resource for low-traffic projects and early prototyping."),console.log(""),console.log("While your application will continue to function, we highly recommended"),console.log("signing up for your own API keys to improve performance, increase your"),console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."),console.log(""),console.log("For more details: https://docs.ethers.org/api-keys/"),console.log("=========================="))}function copy(e){return JSON.parse(JSON.stringify(e))}class FilterIdSubscriber{#Le;#ut;#De;#$e;#ht;#dt;constructor(e){this.#Le=e,this.#ut=null,this.#De=this.#Ge.bind(this),this.#$e=!1,this.#ht=null,this.#dt=!1}_subscribe(e){throw new Error("subclasses must override this")}_emitResults(e,t){throw new Error("subclasses must override this")}_recover(e){throw new Error("subclasses must override this")}async#Ge(e){try{null==this.#ut&&(this.#ut=this._subscribe(this.#Le));let e=null;try{e=await this.#ut}catch(e){if(!isError(e,"UNSUPPORTED_OPERATION")||"eth_newFilter"!==e.operation)throw e}if(null==e)return this.#ut=null,void this.#Le._recoverSubscriber(this,this._recover(this.#Le));const t=await this.#Le.getNetwork();if(this.#ht||(this.#ht=t),this.#ht.chainId!==t.chainId)throw new Error("chaid changed");if(this.#dt)return;const r=await this.#Le.send("eth_getFilterChanges",[e]);await this._emitResults(this.#Le,r)}catch(e){console.log("@TODO",e)}this.#Le.once("block",this.#De)}#ft(){const e=this.#ut;e&&(this.#ut=null,e.then((e=>{this.#Le.destroyed||this.#Le.send("eth_uninstallFilter",[e])})))}start(){this.#$e||(this.#$e=!0,this.#Ge(-2))}stop(){this.#$e&&(this.#$e=!1,this.#dt=!0,this.#ft(),this.#Le.off("block",this.#De))}pause(e){e&&this.#ft(),this.#Le.off("block",this.#De)}resume(){this.start()}}class FilterIdEventSubscriber extends FilterIdSubscriber{#gt;constructor(e,t){super(e),this.#gt=copy(t)}_recover(e){return new PollingEventSubscriber(e,this.#gt)}async _subscribe(e){return await e.send("eth_newFilter",[this.#gt])}async _emitResults(e,t){for(const r of t)e.emit(this.#gt,e._wrapLog(r,e._network))}}class FilterIdPendingSubscriber extends FilterIdSubscriber{async _subscribe(e){return await e.send("eth_newPendingTransactionFilter",[])}async _emitResults(e,t){for(const r of t)e.emit("pending",r)}}const Primitive="bigint,boolean,function,number,string,symbol".split(/,/g);function deepCopy(e){if(null==e||Primitive.indexOf(typeof e)>=0)return e;if("function"==typeof e.getAddress)return e;if(Array.isArray(e))return e.map(deepCopy);if("object"==typeof e)return Object.keys(e).reduce(((t,r)=>(t[r]=e[r],t)),{});throw new Error(`should not happen: ${e} (${typeof e})`)}function stall$3(e){return new Promise((t=>{setTimeout(t,e)}))}function getLowerCase(e){return e?e.toLowerCase():e}function isPollable(e){return e&&"number"==typeof e.pollingInterval}const defaultOptions={polling:!1,staticNetwork:null,batchStallTime:10,batchMaxSize:1<<20,batchMaxCount:100,cacheTimeout:250,pollingInterval:4e3};class JsonRpcSigner extends AbstractSigner{address;constructor(e,t){super(e),defineProperties(this,{address:t=getAddress(t)})}connect(e){assert(!1,"cannot reconnect JsonRpcSigner","UNSUPPORTED_OPERATION",{operation:"signer.connect"})}async getAddress(){return this.address}async populateTransaction(e){return await this.populateCall(e)}async sendUncheckedTransaction(e){const t=deepCopy(e),r=[];if(t.from){const n=t.from;r.push((async()=>{const r=await resolveAddress(n,this.provider);assertArgument(null!=r&&r.toLowerCase()===this.address.toLowerCase(),"from address mismatch","transaction",e),t.from=r})())}else t.from=this.address;if(null==t.gasLimit&&r.push((async()=>{t.gasLimit=await this.provider.estimateGas({...t,from:this.address})})()),null!=t.to){const e=t.to;r.push((async()=>{t.to=await resolveAddress(e,this.provider)})())}r.length&&await Promise.all(r);const n=this.provider.getRpcTransaction(t);return this.provider.send("eth_sendTransaction",[n])}async sendTransaction(e){const t=await this.provider.getBlockNumber(),r=await this.sendUncheckedTransaction(e);return await new Promise(((e,n)=>{const s=[1e3,100];let i=0;const a=async()=>{try{const n=await this.provider.getTransaction(r);if(null!=n)return void e(n.replaceableTransaction(t))}catch(e){if(isError(e,"CANCELLED")||isError(e,"BAD_DATA")||isError(e,"NETWORK_ERROR"))return null==e.info&&(e.info={}),e.info.sendTransactionHash=r,void n(e);if(isError(e,"INVALID_ARGUMENT")&&(i++,null==e.info&&(e.info={}),e.info.sendTransactionHash=r,i>10))return void n(e);this.provider.emit("error",makeError("failed to fetch transation after sending (will try again)","UNKNOWN_ERROR",{error:e}))}this.provider._setTimeout((()=>{a()}),s.pop()||4e3)};a()}))}async signTransaction(e){const t=deepCopy(e);if(t.from){const r=await resolveAddress(t.from,this.provider);assertArgument(null!=r&&r.toLowerCase()===this.address.toLowerCase(),"from address mismatch","transaction",e),t.from=r}else t.from=this.address;const r=this.provider.getRpcTransaction(t);return await this.provider.send("eth_signTransaction",[r])}async signMessage(e){const t="string"==typeof e?toUtf8Bytes(e):e;return await this.provider.send("personal_sign",[hexlify(t),this.address.toLowerCase()])}async signTypedData(e,t,r){const n=deepCopy(r),s=await TypedDataEncoder.resolveNames(e,t,n,(async e=>{const t=await resolveAddress(e);return assertArgument(null!=t,"TypedData does not support null address","value",e),t}));return await this.provider.send("eth_signTypedData_v4",[this.address.toLowerCase(),JSON.stringify(TypedDataEncoder.getPayload(s.domain,t,s.value))])}async unlock(e){return this.provider.send("personal_unlockAccount",[this.address.toLowerCase(),e,null])}async _legacySignMessage(e){const t="string"==typeof e?toUtf8Bytes(e):e;return await this.provider.send("eth_sign",[this.address.toLowerCase(),hexlify(t)])}}class JsonRpcApiProvider extends AbstractProvider{#j;#pt;#mt;#yt;#bt;#ht;#wt;#At(){if(this.#yt)return;const e=1===this._getOption("batchMaxCount")?0:this._getOption("batchStallTime");this.#yt=setTimeout((()=>{this.#yt=null;const e=this.#mt;for(this.#mt=[];e.length;){const t=[e.shift()];for(;e.length&&t.length!==this.#j.batchMaxCount;){t.push(e.shift());if(JSON.stringify(t.map((e=>e.payload))).length>this.#j.batchMaxSize){e.unshift(t.pop());break}}(async()=>{const e=1===t.length?t[0].payload:t.map((e=>e.payload));this.emit("debug",{action:"sendRpcPayload",payload:e});try{const r=await this._send(e);this.emit("debug",{action:"receiveRpcResult",result:r});for(const{resolve:e,reject:n,payload:s}of t){if(this.destroyed){n(makeError("provider destroyed; cancelled request","UNSUPPORTED_OPERATION",{operation:s.method}));continue}const t=r.filter((e=>e.id===s.id))[0];if(null!=t)"error"in t?n(this.getRpcError(s,t)):e(t.result);else{const e=makeError("missing response for request","BAD_DATA",{value:r,info:{payload:s}});this.emit("error",e),n(e)}}}catch(e){this.emit("debug",{action:"receiveRpcError",error:e});for(const{reject:r}of t)r(e)}})()}}),e)}constructor(e,t){super(e,t),this.#pt=1,this.#j=Object.assign({},defaultOptions,t||{}),this.#mt=[],this.#yt=null,this.#ht=null,this.#wt=null;{let e=null;const t=new Promise((t=>{e=t}));this.#bt={promise:t,resolve:e}}const r=this._getOption("staticNetwork");"boolean"==typeof r?(assertArgument(!r||"any"!==e,"staticNetwork cannot be used on special network 'any'","options",t),r&&null!=e&&(this.#ht=Network.from(e))):r&&(assertArgument(null==e||r.matches(e),"staticNetwork MUST match network object","options",t),this.#ht=r)}_getOption(e){return this.#j[e]}get _network(){return assert(this.#ht,"network is not available yet","NETWORK_ERROR"),this.#ht}async _perform(e){if("call"===e.method||"estimateGas"===e.method){let t=e.transaction;if(t&&null!=t.type&&getBigInt(t.type)&&null==t.maxFeePerGas&&null==t.maxPriorityFeePerGas){const r=await this.getFeeData();null==r.maxFeePerGas&&null==r.maxPriorityFeePerGas&&(e=Object.assign({},e,{transaction:Object.assign({},t,{type:void 0})}))}}const t=this.getRpcRequest(e);return null!=t?await this.send(t.method,t.args):super._perform(e)}async _detectNetwork(){const e=this._getOption("staticNetwork");if(e){if(!0!==e)return e;if(this.#ht)return this.#ht}return this.#wt?await this.#wt:this.ready?(this.#wt=(async()=>{try{const e=Network.from(getBigInt(await this.send("eth_chainId",[])));return this.#wt=null,e}catch(e){throw this.#wt=null,e}})(),await this.#wt):(this.#wt=(async()=>{const e={id:this.#pt++,method:"eth_chainId",params:[],jsonrpc:"2.0"};let t;this.emit("debug",{action:"sendRpcPayload",payload:e});try{t=(await this._send(e))[0],this.#wt=null}catch(e){throw this.#wt=null,this.emit("debug",{action:"receiveRpcError",error:e}),e}if(this.emit("debug",{action:"receiveRpcResult",result:t}),"result"in t)return Network.from(getBigInt(t.result));throw this.getRpcError(e,t)})(),await this.#wt)}_start(){null!=this.#bt&&null!=this.#bt.resolve&&(this.#bt.resolve(),this.#bt=null,(async()=>{for(;null==this.#ht&&!this.destroyed;)try{this.#ht=await this._detectNetwork()}catch(e){if(this.destroyed)break;console.log("JsonRpcProvider failed to detect network and cannot start up; retry in 1s (perhaps the URL is wrong or the node is not started)"),this.emit("error",makeError("failed to bootstrap network detection","NETWORK_ERROR",{event:"initial-network-discovery",info:{error:e}})),await stall$3(1e3)}this.#At()})())}async _waitUntilReady(){if(null!=this.#bt)return await this.#bt.promise}_getSubscriber(e){return"pending"===e.type?new FilterIdPendingSubscriber(this):"event"===e.type?this._getOption("polling")?new PollingEventSubscriber(this,e.filter):new FilterIdEventSubscriber(this,e.filter):"orphan"===e.type&&"drop-log"===e.filter.orphan?new UnmanagedSubscriber("orphan"):super._getSubscriber(e)}get ready(){return null==this.#bt}getRpcTransaction(e){const t={};return["chainId","gasLimit","gasPrice","type","maxFeePerGas","maxPriorityFeePerGas","nonce","value"].forEach((r=>{if(null==e[r])return;let n=r;"gasLimit"===r&&(n="gas"),t[n]=toQuantity(getBigInt(e[r],`tx.${r}`))})),["from","to","data"].forEach((r=>{null!=e[r]&&(t[r]=hexlify(e[r]))})),e.accessList&&(t.accessList=accessListify(e.accessList)),e.blobVersionedHashes&&(t.blobVersionedHashes=e.blobVersionedHashes.map((e=>e.toLowerCase()))),t}getRpcRequest(e){switch(e.method){case"chainId":return{method:"eth_chainId",args:[]};case"getBlockNumber":return{method:"eth_blockNumber",args:[]};case"getGasPrice":return{method:"eth_gasPrice",args:[]};case"getPriorityFee":return{method:"eth_maxPriorityFeePerGas",args:[]};case"getBalance":return{method:"eth_getBalance",args:[getLowerCase(e.address),e.blockTag]};case"getTransactionCount":return{method:"eth_getTransactionCount",args:[getLowerCase(e.address),e.blockTag]};case"getCode":return{method:"eth_getCode",args:[getLowerCase(e.address),e.blockTag]};case"getStorage":return{method:"eth_getStorageAt",args:[getLowerCase(e.address),"0x"+e.position.toString(16),e.blockTag]};case"broadcastTransaction":return{method:"eth_sendRawTransaction",args:[e.signedTransaction]};case"getBlock":if("blockTag"in e)return{method:"eth_getBlockByNumber",args:[e.blockTag,!!e.includeTransactions]};if("blockHash"in e)return{method:"eth_getBlockByHash",args:[e.blockHash,!!e.includeTransactions]};break;case"getTransaction":return{method:"eth_getTransactionByHash",args:[e.hash]};case"getTransactionReceipt":return{method:"eth_getTransactionReceipt",args:[e.hash]};case"call":return{method:"eth_call",args:[this.getRpcTransaction(e.transaction),e.blockTag]};case"estimateGas":return{method:"eth_estimateGas",args:[this.getRpcTransaction(e.transaction)]};case"getLogs":return e.filter&&null!=e.filter.address&&(Array.isArray(e.filter.address)?e.filter.address=e.filter.address.map(getLowerCase):e.filter.address=getLowerCase(e.filter.address)),{method:"eth_getLogs",args:[e.filter]}}return null}getRpcError(e,t){const{method:r}=e,{error:n}=t;if("eth_estimateGas"===r&&n.message){const t=n.message;if(!t.match(/revert/i)&&t.match(/insufficient funds/i))return makeError("insufficient funds","INSUFFICIENT_FUNDS",{transaction:e.params[0],info:{payload:e,error:n}})}if("eth_call"===r||"eth_estimateGas"===r){const t=spelunkData(n),s=AbiCoder.getBuiltinCallException("eth_call"===r?"call":"estimateGas",e.params[0],t?t.data:null);return s.info={error:n,payload:e},s}const s=JSON.stringify(spelunkMessage(n));if("string"==typeof n.message&&n.message.match(/user denied|ethers-user-denied/i)){return makeError("user rejected action","ACTION_REJECTED",{action:{eth_sign:"signMessage",personal_sign:"signMessage",eth_signTypedData_v4:"signTypedData",eth_signTransaction:"signTransaction",eth_sendTransaction:"sendTransaction",eth_requestAccounts:"requestAccess",wallet_requestAccounts:"requestAccess"}[r]||"unknown",reason:"rejected",info:{payload:e,error:n}})}if("eth_sendRawTransaction"===r||"eth_sendTransaction"===r){const t=e.params[0];if(s.match(/insufficient funds|base fee exceeds gas limit/i))return makeError("insufficient funds for intrinsic transaction cost","INSUFFICIENT_FUNDS",{transaction:t,info:{error:n}});if(s.match(/nonce/i)&&s.match(/too low/i))return makeError("nonce has already been used","NONCE_EXPIRED",{transaction:t,info:{error:n}});if(s.match(/replacement transaction/i)&&s.match(/underpriced/i))return makeError("replacement fee too low","REPLACEMENT_UNDERPRICED",{transaction:t,info:{error:n}});if(s.match(/only replay-protected/i))return makeError("legacy pre-eip-155 transactions not supported","UNSUPPORTED_OPERATION",{operation:r,info:{transaction:t,info:{error:n}}})}let i=!!s.match(/the method .* does not exist/i);return i||n&&n.details&&n.details.startsWith("Unauthorized method:")&&(i=!0),i?makeError("unsupported operation","UNSUPPORTED_OPERATION",{operation:e.method,info:{error:n,payload:e}}):makeError("could not coalesce error","UNKNOWN_ERROR",{error:n,payload:e})}send(e,t){if(this.destroyed)return Promise.reject(makeError("provider destroyed; cancelled request","UNSUPPORTED_OPERATION",{operation:e}));const r=this.#pt++,n=new Promise(((n,s)=>{this.#mt.push({resolve:n,reject:s,payload:{method:e,params:t,id:r,jsonrpc:"2.0"}})}));return this.#At(),n}async getSigner(e){null==e&&(e=0);const t=this.send("eth_accounts",[]);if("number"==typeof e){const r=await t;if(e>=r.length)throw new Error("no such account");return new JsonRpcSigner(this,r[e])}const{accounts:r}=await resolveProperties({network:this.getNetwork(),accounts:t});e=getAddress(e);for(const t of r)if(getAddress(t)===e)return new JsonRpcSigner(this,e);throw new Error("invalid account")}async listAccounts(){return(await this.send("eth_accounts",[])).map((e=>new JsonRpcSigner(this,e)))}destroy(){this.#yt&&(clearTimeout(this.#yt),this.#yt=null);for(const{payload:e,reject:t}of this.#mt)t(makeError("provider destroyed; cancelled request","UNSUPPORTED_OPERATION",{operation:e.method}));this.#mt=[],super.destroy()}}class JsonRpcApiPollingProvider extends JsonRpcApiProvider{#vt;constructor(e,t){super(e,t);let r=this._getOption("pollingInterval");null==r&&(r=defaultOptions.pollingInterval),this.#vt=r}_getSubscriber(e){const t=super._getSubscriber(e);return isPollable(t)&&(t.pollingInterval=this.#vt),t}get pollingInterval(){return this.#vt}set pollingInterval(e){if(!Number.isInteger(e)||e<0)throw new Error("invalid interval");this.#vt=e,this._forEachSubscriber((e=>{isPollable(e)&&(e.pollingInterval=this.#vt)}))}}class JsonRpcProvider extends JsonRpcApiPollingProvider{#Et;constructor(e,t,r){null==e&&(e="http://localhost:8545"),super(t,r),this.#Et="string"==typeof e?new FetchRequest(e):e.clone()}_getConnection(){return this.#Et.clone()}async send(e,t){return await this._start(),await super.send(e,t)}async _send(e){const t=this._getConnection();t.body=JSON.stringify(e),t.setHeader("content-type","application/json");const r=await t.send();r.assertOk();let n=r.bodyJson;return Array.isArray(n)||(n=[n]),n}}function spelunkData(e){if(null==e)return null;if("string"==typeof e.message&&e.message.match(/revert/i)&&isHexString(e.data))return{message:e.message,data:e.data};if("object"==typeof e){for(const t in e){const r=spelunkData(e[t]);if(r)return r}return null}if("string"==typeof e)try{return spelunkData(JSON.parse(e))}catch(e){}return null}function _spelunkMessage(e,t){if(null!=e){if("string"==typeof e.message&&t.push(e.message),"object"==typeof e)for(const r in e)_spelunkMessage(e[r],t);if("string"==typeof e)try{return _spelunkMessage(JSON.parse(e),t)}catch(e){}}}function spelunkMessage(e){const t=[];return _spelunkMessage(e,t),t}const defaultApiKey$1="9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";function getHost$5(e){switch(e){case"mainnet":return"rpc.ankr.com/eth";case"goerli":return"rpc.ankr.com/eth_goerli";case"sepolia":return"rpc.ankr.com/eth_sepolia";case"arbitrum":return"rpc.ankr.com/arbitrum";case"base":return"rpc.ankr.com/base";case"base-goerli":return"rpc.ankr.com/base_goerli";case"base-sepolia":return"rpc.ankr.com/base_sepolia";case"bnb":return"rpc.ankr.com/bsc";case"bnbt":return"rpc.ankr.com/bsc_testnet_chapel";case"matic":return"rpc.ankr.com/polygon";case"matic-mumbai":return"rpc.ankr.com/polygon_mumbai";case"optimism":return"rpc.ankr.com/optimism";case"optimism-goerli":return"rpc.ankr.com/optimism_testnet";case"optimism-sepolia":return"rpc.ankr.com/optimism_sepolia"}assertArgument(!1,"unsupported network","network",e)}class AnkrProvider extends JsonRpcProvider{apiKey;constructor(e,t){null==e&&(e="mainnet");const r=Network.from(e);null==t&&(t=defaultApiKey$1);const n={polling:!0,staticNetwork:r};super(AnkrProvider.getRequest(r,t),r,n),defineProperties(this,{apiKey:t})}_getProvider(e){try{return new AnkrProvider(e,this.apiKey)}catch(e){}return super._getProvider(e)}static getRequest(e,t){null==t&&(t=defaultApiKey$1);const r=new FetchRequest(`https://${getHost$5(e.name)}/${t}`);return r.allowGzip=!0,t===defaultApiKey$1&&(r.retryFunc=async(e,t,r)=>(showThrottleMessage("AnkrProvider"),!0)),r}getRpcError(e,t){return"eth_sendRawTransaction"===e.method&&t&&t.error&&"INTERNAL_ERROR: could not replace existing tx"===t.error.message&&(t.error.message="replacement transaction underpriced"),super.getRpcError(e,t)}isCommunityResource(){return this.apiKey===defaultApiKey$1}}const defaultApiKey="_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";function getApiKey(e){switch(e){case"mainnet":return"39f1d67cedf8b7831010a665328c9197";case"arbitrum":return"0550c209db33c3abf4cc927e1e18cea1";case"bnb":return"98b5a77e531614387366f6fc5da097f8";case"matic":return"cd9d4d70377471aa7c142ec4a4205249"}assertArgument(!1,"unsupported network","network",e)}const THROTTLE=2e3;function isPromise(e){return e&&"function"==typeof e.then}const skipKeys=["enableCcipRead"];let nextId=1;function getGlobal(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if("undefined"!=typeof global)return global;throw new Error("unable to locate global object")}const _WebSocket=getGlobal().WebSocket;class SocketSubscriber{#Le;#Se;get filter(){return JSON.parse(this.#Se)}#kt;#Bt;#Pt;constructor(e,t){this.#Le=e,this.#Se=JSON.stringify(t),this.#kt=null,this.#Bt=null,this.#Pt=null}start(){this.#kt=this.#Le.send("eth_subscribe",this.filter).then((e=>(this.#Le._register(e,this),e)))}stop(){this.#kt.then((e=>{this.#Le.destroyed||this.#Le.send("eth_unsubscribe",[e])})),this.#kt=null}pause(e){assert(e,"preserve logs while paused not supported by SocketSubscriber yet","UNSUPPORTED_OPERATION",{operation:"pause(false)"}),this.#Bt=!!e}resume(){this.#Bt=null}_handleMessage(e){if(null!=this.#kt&&null===this.#Bt){let t=this.#Pt;t=null==t?this._emit(this.#Le,e):t.then((async()=>{await this._emit(this.#Le,e)})),this.#Pt=t.then((()=>{this.#Pt===t&&(this.#Pt=null)}))}}async _emit(e,t){throw new Error("sub-classes must implemente this; _emit")}}class SocketBlockSubscriber extends SocketSubscriber{constructor(e){super(e,["newHeads"])}async _emit(e,t){e.emit("block",parseInt(t.number))}}class SocketPendingSubscriber extends SocketSubscriber{constructor(e){super(e,["newPendingTransactions"])}async _emit(e,t){e.emit("pending",t)}}class SocketEventSubscriber extends SocketSubscriber{#Nt;get logFilter(){return JSON.parse(this.#Nt)}constructor(e,t){super(e,["logs",t]),this.#Nt=JSON.stringify(t)}async _emit(e,t){e.emit(this.logFilter,e._wrapLog(t,e._network))}}class SocketProvider extends JsonRpcApiProvider{#_t;#Qe;#St;constructor(e,t){const r=Object.assign({},null!=t?t:{});assertArgument(null==r.batchMaxCount||1===r.batchMaxCount,"sockets-based providers do not support batches","options.batchMaxCount",t),r.batchMaxCount=1,null==r.staticNetwork&&(r.staticNetwork=!0),super(e,r),this.#_t=new Map,this.#Qe=new Map,this.#St=new Map}_getSubscriber(e){switch(e.type){case"close":return new UnmanagedSubscriber("close");case"block":return new SocketBlockSubscriber(this);case"pending":return new SocketPendingSubscriber(this);case"event":return new SocketEventSubscriber(this,e.filter);case"orphan":if("drop-log"===e.filter.orphan)return new UnmanagedSubscriber("drop-log")}return super._getSubscriber(e)}_register(e,t){this.#Qe.set(e,t);const r=this.#St.get(e);if(r){for(const e of r)t._handleMessage(e);this.#St.delete(e)}}async _send(e){assertArgument(!Array.isArray(e),"WebSocket does not support batch send","payload",e);const t=new Promise(((t,r)=>{this.#_t.set(e.id,{payload:e,resolve:t,reject:r})}));return await this._waitUntilReady(),await this._write(JSON.stringify(e)),[await t]}async _processMessage(e){const t=JSON.parse(e);if(t&&"object"==typeof t&&"id"in t){const e=this.#_t.get(t.id);if(null==e)return void this.emit("error",makeError("received result for unknown id","UNKNOWN_ERROR",{reasonCode:"UNKNOWN_ID",result:t}));this.#_t.delete(t.id),e.resolve(t)}else{if(!t||"eth_subscription"!==t.method)return void this.emit("error",makeError("received unexpected message","UNKNOWN_ERROR",{reasonCode:"UNEXPECTED_MESSAGE",result:t}));{const e=t.params.subscription,r=this.#Qe.get(e);if(r)r._handleMessage(t.params.result);else{let r=this.#St.get(e);null==r&&(r=[],this.#St.set(e,r)),r.push(t.params.result)}}}}async _write(e){throw new Error("sub-classes must override this")}}class WebSocketProvider extends SocketProvider{#Et;#xt;get websocket(){if(null==this.#xt)throw new Error("websocket closed");return this.#xt}constructor(e,t,r){super(t,r),"string"==typeof e?(this.#Et=()=>new _WebSocket(e),this.#xt=this.#Et()):"function"==typeof e?(this.#Et=e,this.#xt=e()):(this.#Et=null,this.#xt=e),this.websocket.onopen=async()=>{try{await this._start(),this.resume()}catch(e){console.log("failed to start WebsocketProvider",e)}},this.websocket.onmessage=e=>{this._processMessage(e.data)}}async _write(e){this.websocket.send(e)}async destroy(){null!=this.#xt&&(this.#xt.close(),this.#xt=null),super.destroy()}}const defaultProjectId="84842078b09946638c03157f83405213",defaultToken="919b412a057b5e9c9b6dce193c5a60242d6efadb",BN_1=BigInt("1"),BN_2=BigInt("2");function shuffle(e){for(let t=e.length-1;t>0;t--){const r=Math.floor(Math.random()*(t+1)),n=e[t];e[t]=e[r],e[r]=n}}function stall$2(e){return new Promise((t=>{setTimeout(t,e)}))}function getTime(){return(new Date).getTime()}function stringify(e){return JSON.stringify(e,((e,t)=>"bigint"==typeof t?{type:"bigint",value:t.toString()}:t))}const defaultConfig={stallTimeout:400,priority:1,weight:1},defaultState={blockNumber:-2,requests:0,lateResponses:0,errorResponses:0,outOfSync:-1,unsupportedEvents:0,rollingDuration:0,score:0,_network:null,_updateNumber:null,_totalTime:0,_lastFatalError:null,_lastFatalErrorTimestamp:0};async function waitForSync(e,t){for(;(e.blockNumber<0||e.blockNumber<t)&&(e._updateNumber||(e._updateNumber=(async()=>{try{const t=await e.provider.getBlockNumber();t>e.blockNumber&&(e.blockNumber=t)}catch(t){e.blockNumber=-2,e._lastFatalError=t,e._lastFatalErrorTimestamp=getTime()}e._updateNumber=null})()),await e._updateNumber,e.outOfSync++,!e._lastFatalError););}function _normalize(e){if(null==e)return"null";if(Array.isArray(e))return"["+e.map(_normalize).join(",")+"]";if("object"==typeof e&&"function"==typeof e.toJSON)return _normalize(e.toJSON());switch(typeof e){case"boolean":case"symbol":return e.toString();case"bigint":case"number":return BigInt(e).toString();case"string":return JSON.stringify(e);case"object":{const t=Object.keys(e);return t.sort(),"{"+t.map((t=>`${JSON.stringify(t)}:${_normalize(e[t])}`)).join(",")+"}"}}throw console.log("Could not serialize",e),new Error("Hmm...")}function normalizeResult(e){if("error"in e){const t=e.error;return{tag:_normalize(t),value:t}}const t=e.result;return{tag:_normalize(t),value:t}}function checkQuorum(e,t){const r=new Map;for(const{value:e,tag:n,weight:s}of t){const t=r.get(n)||{value:e,weight:0};t.weight+=s,r.set(n,t)}let n=null;for(const t of r.values())t.weight>=e&&(!n||t.weight>n.weight)&&(n=t);if(n)return n.value}function getMedian(e,t){let r=0;const n=new Map;let s=null;const i=[];for(const{value:e,tag:a,weight:o}of t)if(e instanceof Error){const t=n.get(a)||{value:e,weight:0};t.weight+=o,n.set(a,t),(null==s||t.weight>s.weight)&&(s=t)}else i.push(BigInt(e)),r+=o;if(r<e)return s&&s.weight>=e?s.value:void 0;i.sort(((e,t)=>e<t?-1:t>e?1:0));const a=Math.floor(i.length/2);return i.length%2?i[a]:(i[a-1]+i[a]+BN_1)/BN_2}function getAnyResult(e,t){const r=checkQuorum(e,t);if(void 0!==r)return r;for(const e of t)if(e.value)return e.value}function getFuzzyMode(e,t){if(1===e)return getNumber(getMedian(e,t),"%internal");const r=new Map,n=(e,t)=>{const n=r.get(e)||{result:e,weight:0};n.weight+=t,r.set(e,n)};for(const{weight:e,value:r}of t){const t=getNumber(r);n(t-1,e),n(t,e),n(t+1,e)}let s,i=0;for(const{weight:t,result:n}of r.values())t>=e&&(t>i||null!=s&&t===i&&n>s)&&(i=t,s=n);return s}class FallbackProvider extends AbstractProvider{quorum;eventQuorum;eventWorkers;#Tt;#Ct;#It;constructor(e,t,r){super(t,r),this.#Tt=e.map((e=>e instanceof AbstractProvider?Object.assign({provider:e},defaultConfig,defaultState):Object.assign({},defaultConfig,e,defaultState))),this.#Ct=-2,this.#It=null,r&&null!=r.quorum?this.quorum=r.quorum:this.quorum=Math.ceil(this.#Tt.reduce(((e,t)=>e+=t.weight),0)/2),this.eventQuorum=1,this.eventWorkers=1,assertArgument(this.quorum<=this.#Tt.reduce(((e,t)=>e+t.weight),0),"quorum exceed provider weight","quorum",this.quorum)}get providerConfigs(){return this.#Tt.map((e=>{const t=Object.assign({},e);for(const e in t)"_"===e[0]&&delete t[e];return t}))}async _detectNetwork(){return Network.from(getBigInt(await this._perform({method:"chainId"})))}async _translatePerform(e,t){switch(t.method){case"broadcastTransaction":return await e.broadcastTransaction(t.signedTransaction);case"call":return await e.call(Object.assign({},t.transaction,{blockTag:t.blockTag}));case"chainId":return(await e.getNetwork()).chainId;case"estimateGas":return await e.estimateGas(t.transaction);case"getBalance":return await e.getBalance(t.address,t.blockTag);case"getBlock":{const r="blockHash"in t?t.blockHash:t.blockTag;return await e.getBlock(r,t.includeTransactions)}case"getBlockNumber":return await e.getBlockNumber();case"getCode":return await e.getCode(t.address,t.blockTag);case"getGasPrice":return(await e.getFeeData()).gasPrice;case"getPriorityFee":return(await e.getFeeData()).maxPriorityFeePerGas;case"getLogs":return await e.getLogs(t.filter);case"getStorage":return await e.getStorage(t.address,t.position,t.blockTag);case"getTransaction":return await e.getTransaction(t.hash);case"getTransactionCount":return await e.getTransactionCount(t.address,t.blockTag);case"getTransactionReceipt":return await e.getTransactionReceipt(t.hash);case"getTransactionResult":return await e.getTransactionResult(t.hash)}}#Rt(e){const t=Array.from(e).map((e=>e.config)),r=this.#Tt.slice();shuffle(r),r.sort(((e,t)=>e.priority-t.priority));for(const e of r)if(!e._lastFatalError&&-1===t.indexOf(e))return e;return null}#Ft(e,t){const r=this.#Rt(e);if(null==r)return null;const n={config:r,result:null,didBump:!1,perform:null,staller:null},s=getTime();return n.perform=(async()=>{try{r.requests++;const e=await this._translatePerform(r.provider,t);n.result={result:e}}catch(e){r.errorResponses++,n.result={error:e}}const e=getTime()-s;r._totalTime+=e,r.rollingDuration=.95*r.rollingDuration+.05*e,n.perform=null})(),n.staller=(async()=>{await stall$2(r.stallTimeout),n.staller=null})(),e.add(n),n}async#Ot(){let e=this.#It;if(!e){const t=[];this.#Tt.forEach((e=>{t.push((async()=>{await waitForSync(e,0),e._lastFatalError||(e._network=await e.provider.getNetwork())})())})),this.#It=e=(async()=>{await Promise.all(t);let e=null;for(const t of this.#Tt){if(t._lastFatalError)continue;const r=t._network;null==e?e=r.chainId:r.chainId!==e&&assert(!1,"cannot mix providers on different networks","UNSUPPORTED_OPERATION",{operation:"new FallbackProvider"})}})()}await e}async#Ut(e,t){const r=[];for(const t of e)if(null!=t.result){const{tag:e,value:n}=normalizeResult(t.result);r.push({tag:e,value:n,weight:t.config.weight})}if(!(r.reduce(((e,t)=>e+t.weight),0)<this.quorum)){switch(t.method){case"getBlockNumber":{-2===this.#Ct&&(this.#Ct=Math.ceil(getNumber(getMedian(this.quorum,this.#Tt.filter((e=>!e._lastFatalError)).map((e=>({value:e.blockNumber,tag:getNumber(e.blockNumber).toString(),weight:e.weight})))))));const e=getFuzzyMode(this.quorum,r);if(void 0===e)return;return e>this.#Ct&&(this.#Ct=e),this.#Ct}case"getGasPrice":case"getPriorityFee":case"estimateGas":return getMedian(this.quorum,r);case"getBlock":return"blockTag"in t&&"pending"===t.blockTag?getAnyResult(this.quorum,r):checkQuorum(this.quorum,r);case"call":case"chainId":case"getBalance":case"getTransactionCount":case"getCode":case"getStorage":case"getTransaction":case"getTransactionReceipt":case"getLogs":return checkQuorum(this.quorum,r);case"broadcastTransaction":return getAnyResult(this.quorum,r)}assert(!1,"unsupported method","UNSUPPORTED_OPERATION",{operation:`_perform(${stringify(t.method)})`})}}async#Lt(e,t){if(0===e.size)throw new Error("no runners?!");const r=[];let n=0;for(const t of e)t.perform&&r.push(t.perform),t.staller?r.push(t.staller):t.didBump||(t.didBump=!0,n++);const s=await this.#Ut(e,t);if(void 0!==s){if(s instanceof Error)throw s;return s}for(let r=0;r<n;r++)this.#Ft(e,t);return assert(r.length>0,"quorum not met","SERVER_ERROR",{request:"%sub-requests",info:{request:t,results:Array.from(e).map((e=>stringify(e.result)))}}),await Promise.race(r),await this.#Lt(e,t)}async _perform(e){if("broadcastTransaction"===e.method){const t=this.#Tt.map((e=>null)),r=this.#Tt.map((async({provider:r,weight:n},s)=>{try{const i=await r._perform(e);t[s]=Object.assign(normalizeResult({result:i}),{weight:n})}catch(e){t[s]=Object.assign(normalizeResult({error:e}),{weight:n})}}));for(;;){const e=t.filter((e=>null!=e));for(const{value:t}of e)if(!(t instanceof Error))return t;const n=checkQuorum(this.quorum,t.filter((e=>null!=e)));if(isError(n,"INSUFFICIENT_FUNDS"))throw n;const s=r.filter(((e,r)=>null==t[r]));if(0===s.length)break;await Promise.race(s)}const n=getAnyResult(this.quorum,t);if(assert(void 0!==n,"problem multi-broadcasting","SERVER_ERROR",{request:"%sub-requests",info:{request:e,results:t.map(stringify)}}),n instanceof Error)throw n;return n}await this.#Ot();const t=new Set;let r=0;for(;;){const n=this.#Ft(t,e);if(null==n)break;if(r+=n.config.weight,r>=this.quorum)break}const n=await this.#Lt(t,e);for(const e of t)e.perform&&null==e.result&&e.config.lateResponses++;return n}async destroy(){for(const{provider:e}of this.#Tt)e.destroy();super.destroy()}}function isWebSocketLike(e){return e&&"function"==typeof e.send&&"function"==typeof e.close}const Testnets="goerli kovan sepolia classicKotti optimism-goerli arbitrum-goerli matic-mumbai bnbt".split(" ");function getDefaultProvider(e,t){null==t&&(t={});if("string"==typeof e&&e.match(/^https?:/))return new JsonRpcProvider(e);if("string"==typeof e&&e.match(/^wss?:/)||isWebSocketLike(e))return new WebSocketProvider(e);let r=null;try{r=Network.from(e)}catch(e){}const n=[];var s;if("-"!==t[s="publicPolygon"]&&("string"==typeof t.exclusive?s===t.exclusive:!Array.isArray(t.exclusive)||-1!==t.exclusive.indexOf(s))&&r&&("matic"===r.name?n.push(new JsonRpcProvider("https://polygon-rpc.com/",r,{staticNetwork:r})):"matic-amoy"===r.name&&n.push(new JsonRpcProvider("https://rpc-amoy.polygon.technology/",r,{staticNetwork:r}))),assert(n.length,"unsupported default network","UNSUPPORTED_OPERATION",{operation:"getDefaultProvider"}),1===n.length)return n[0];let i=Math.floor(n.length/2);return i>2&&(i=2),r&&-1!==Testnets.indexOf(r.name)&&(i=1),t&&t.quorum&&(i=t.quorum),new FallbackProvider(n,void 0,{quorum:i})}class NonceManager extends AbstractSigner{signer;#Dt;#Mt;constructor(e){super(e.provider),defineProperties(this,{signer:e}),this.#Dt=null,this.#Mt=0}async getAddress(){return this.signer.getAddress()}connect(e){return new NonceManager(this.signer.connect(e))}async getNonce(e){if("pending"===e){null==this.#Dt&&(this.#Dt=super.getNonce("pending"));const e=this.#Mt;return await this.#Dt+e}return super.getNonce(e)}increment(){this.#Mt++}reset(){this.#Mt=0,this.#Dt=null}async sendTransaction(e){const t=this.getNonce("pending");return this.increment(),(e=await this.signer.populateTransaction(e)).nonce=await t,await this.signer.sendTransaction(e)}signTransaction(e){return this.signer.signTransaction(e)}signMessage(e){return this.signer.signMessage(e)}signTypedData(e,t,r){return this.signer.signTypedData(e,t,r)}}class BrowserProvider extends JsonRpcApiPollingProvider{#v;constructor(e,t,r){const n=Object.assign({},null!=r?r:{},{batchMaxCount:1});assertArgument(e&&e.request,"invalid EIP-1193 provider","ethereum",e),super(t,n),this.#v=async(t,r)=>{const n={method:t,params:r};this.emit("debug",{action:"sendEip1193Request",payload:n});try{const t=await e.request(n);return this.emit("debug",{action:"receiveEip1193Result",result:t}),t}catch(e){const t=new Error(e.message);throw t.code=e.code,t.data=e.data,t.payload=n,this.emit("debug",{action:"receiveEip1193Error",error:t}),t}}}async send(e,t){return await this._start(),await super.send(e,t)}async _send(e){assertArgument(!Array.isArray(e),"EIP-1193 does not support batch request","payload",e);try{const t=await this.#v(e.method,e.params||[]);return[{id:e.id,result:t}]}catch(t){return[{id:e.id,error:{code:t.code,data:t.data,message:t.message}}]}}getRpcError(e,t){switch((t=JSON.parse(JSON.stringify(t))).error.code||-1){case 4001:t.error.message=`ethers-user-denied: ${t.error.message}`;break;case 4200:t.error.message=`ethers-unsupported: ${t.error.message}`}return super.getRpcError(e,t)}async hasSigner(e){null==e&&(e=0);const t=await this.send("eth_accounts",[]);return"number"==typeof e?t.length>e:(e=e.toLowerCase(),0!==t.filter((t=>t.toLowerCase()===e)).length)}async getSigner(e){if(null==e&&(e=0),!await this.hasSigner(e))try{await this.#v("eth_requestAccounts",[])}catch(e){const t=e.payload;throw this.getRpcError(t,{id:t.id,error:e})}return await super.getSigner(e)}}const defaultApplicationId="62e1ad51b37b8e00394bda3b";function getHost(e){switch(e){case"mainnet":return"eth-mainnet.gateway.pokt.network";case"goerli":return"eth-goerli.gateway.pokt.network";case"matic":return"poly-mainnet.gateway.pokt.network";case"matic-mumbai":return"polygon-mumbai-rpc.gateway.pokt.network"}assertArgument(!1,"unsupported network","network",e)}class PocketProvider extends JsonRpcProvider{applicationId;applicationSecret;constructor(e,t,r){null==e&&(e="mainnet");const n=Network.from(e);null==t&&(t=defaultApplicationId),null==r&&(r=null);const s={staticNetwork:n};super(PocketProvider.getRequest(n,t,r),n,s),defineProperties(this,{applicationId:t,applicationSecret:r})}_getProvider(e){try{return new PocketProvider(e,this.applicationId,this.applicationSecret)}catch(e){}return super._getProvider(e)}static getRequest(e,t,r){null==t&&(t=defaultApplicationId);const n=new FetchRequest(`https://${getHost(e.name)}/v1/lb/${t}`);return n.allowGzip=!0,r&&n.setCredentials("",r),t===defaultApplicationId&&(n.retryFunc=async(e,t,r)=>(showThrottleMessage("PocketProvider"),!0)),n}isCommunityResource(){return this.applicationId===defaultApplicationId}}const IpcSocketProvider=void 0;class BaseWallet extends AbstractSigner{address;#Ht;constructor(e,t){super(t),assertArgument(e&&"function"==typeof e.sign,"invalid private key","privateKey","[ REDACTED ]"),this.#Ht=e;defineProperties(this,{address:computeAddress(this.signingKey.publicKey)})}get signingKey(){return this.#Ht}get privateKey(){return this.signingKey.privateKey}async getAddress(){return this.address}connect(e){return new BaseWallet(this.#Ht,e)}async signTransaction(e){e=copyRequest(e);const{to:t,from:r}=await resolveProperties({to:e.to?resolveAddress(e.to,this.provider):void 0,from:e.from?resolveAddress(e.from,this.provider):void 0});null!=t&&(e.to=t),null!=r&&(e.from=r),null!=e.from&&(assertArgument(getAddress(e.from)===this.address,"transaction from address mismatch","tx.from",e.from),delete e.from);const n=Transaction.from(e);return n.signature=this.signingKey.sign(n.unsignedHash),n.serialized}async signMessage(e){return this.signMessageSync(e)}signMessageSync(e){return this.signingKey.sign(hashMessage(e)).serialized}async signTypedData(e,t,r){const n=await TypedDataEncoder.resolveNames(e,t,r,(async e=>{assert(null!=this.provider,"cannot resolve ENS names without a provider","UNSUPPORTED_OPERATION",{operation:"resolveName",info:{name:e}});const t=await this.provider.resolveName(e);return assert(null!=t,"unconfigured ENS name","UNCONFIGURED_NAME",{value:e}),t}));return this.signingKey.sign(TypedDataEncoder.hash(n.domain,t,n.value)).serialized}}const subsChrs=" !#$%&'()*+,-./<=>?@[]^_`{|}~",Word=/^[a-z]*$/i;function unfold(e,t){let r=97;return e.reduce(((e,n)=>(n===t?r++:n.match(Word)?e.push(String.fromCharCode(r)+n):(r=97,e.push(n)),e)),[])}function decode(e,t){for(let r=subsChrs.length-1;r>=0;r--)e=e.split(subsChrs[r]).join(t.substring(2*r,2*r+2));const r=[],n=e.replace(/(:|([0-9])|([A-Z][a-z]*))/g,((e,t,n,s)=>{if(n)for(let e=parseInt(n);e>=0;e--)r.push(";");else r.push(t.toLowerCase());return""}));if(n)throw new Error(`leftovers: ${JSON.stringify(n)}`);return unfold(unfold(r,";"),":")}function decodeOwl(e){return assertArgument("0"===e[0],"unsupported auwl data","data",e),decode(e.substring(1+2*subsChrs.length),e.substring(1,1+2*subsChrs.length))}function getUpperMask(e){return(1<<e)-1<<8-e&255}function getLowerMask(e){return(1<<e)-1&255}const _guard$1={};var _AES_key,_AES_Kd,_AES_Ke,__classPrivateFieldGet$2=__$G&&__$G.__classPrivateFieldGet||function(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)},__classPrivateFieldSet$2=__$G&&__$G.__classPrivateFieldSet||function(e,t,r,n,s){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!s)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?s.call(e,r):s?s.value=r:t.set(e,r),r};const numberOfRounds={16:10,24:12,32:14},rcon=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],S=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],Si=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],T1=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],T2=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],T3=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],T4=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],T5=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],T6=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],T7=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],T8=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],U1=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],U2=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],U3=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],U4=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function convertToInt32(e){const t=[];for(let r=0;r<e.length;r+=4)t.push(e[r]<<24|e[r+1]<<16|e[r+2]<<8|e[r+3]);return t}class AES{get key(){return __classPrivateFieldGet$2(this,_AES_key,"f").slice()}constructor(e){if(_AES_key.set(this,void 0),_AES_Kd.set(this,void 0),_AES_Ke.set(this,void 0),!(this instanceof AES))throw Error("AES must be instanitated with `new`");__classPrivateFieldSet$2(this,_AES_key,new Uint8Array(e),"f");const t=numberOfRounds[this.key.length];if(null==t)throw new TypeError("invalid key size (must be 16, 24 or 32 bytes)");__classPrivateFieldSet$2(this,_AES_Ke,[],"f"),__classPrivateFieldSet$2(this,_AES_Kd,[],"f");for(let e=0;e<=t;e++)__classPrivateFieldGet$2(this,_AES_Ke,"f").push([0,0,0,0]),__classPrivateFieldGet$2(this,_AES_Kd,"f").push([0,0,0,0]);const r=4*(t+1),n=this.key.length/4,s=convertToInt32(this.key);let i;for(let e=0;e<n;e++)i=e>>2,__classPrivateFieldGet$2(this,_AES_Ke,"f")[i][e%4]=s[e],__classPrivateFieldGet$2(this,_AES_Kd,"f")[t-i][e%4]=s[e];let a,o=0,c=n;for(;c<r;){if(a=s[n-1],s[0]^=S[a>>16&255]<<24^S[a>>8&255]<<16^S[255&a]<<8^S[a>>24&255]^rcon[o]<<24,o+=1,8!=n)for(let e=1;e<n;e++)s[e]^=s[e-1];else{for(let e=1;e<n/2;e++)s[e]^=s[e-1];a=s[n/2-1],s[n/2]^=S[255&a]^S[a>>8&255]<<8^S[a>>16&255]<<16^S[a>>24&255]<<24;for(let e=n/2+1;e<n;e++)s[e]^=s[e-1]}let e,i,l=0;for(;l<n&&c<r;)e=c>>2,i=c%4,__classPrivateFieldGet$2(this,_AES_Ke,"f")[e][i]=s[l],__classPrivateFieldGet$2(this,_AES_Kd,"f")[t-e][i]=s[l++],c++}for(let e=1;e<t;e++)for(let t=0;t<4;t++)a=__classPrivateFieldGet$2(this,_AES_Kd,"f")[e][t],__classPrivateFieldGet$2(this,_AES_Kd,"f")[e][t]=U1[a>>24&255]^U2[a>>16&255]^U3[a>>8&255]^U4[255&a]}encrypt(e){if(16!=e.length)throw new TypeError("invalid plaintext size (must be 16 bytes)");const t=__classPrivateFieldGet$2(this,_AES_Ke,"f").length-1,r=[0,0,0,0];let n=convertToInt32(e);for(let e=0;e<4;e++)n[e]^=__classPrivateFieldGet$2(this,_AES_Ke,"f")[0][e];for(let e=1;e<t;e++){for(let t=0;t<4;t++)r[t]=T1[n[t]>>24&255]^T2[n[(t+1)%4]>>16&255]^T3[n[(t+2)%4]>>8&255]^T4[255&n[(t+3)%4]]^__classPrivateFieldGet$2(this,_AES_Ke,"f")[e][t];n=r.slice()}const s=new Uint8Array(16);let i=0;for(let e=0;e<4;e++)i=__classPrivateFieldGet$2(this,_AES_Ke,"f")[t][e],s[4*e]=255&(S[n[e]>>24&255]^i>>24),s[4*e+1]=255&(S[n[(e+1)%4]>>16&255]^i>>16),s[4*e+2]=255&(S[n[(e+2)%4]>>8&255]^i>>8),s[4*e+3]=255&(S[255&n[(e+3)%4]]^i);return s}decrypt(e){if(16!=e.length)throw new TypeError("invalid ciphertext size (must be 16 bytes)");const t=__classPrivateFieldGet$2(this,_AES_Kd,"f").length-1,r=[0,0,0,0];let n=convertToInt32(e);for(let e=0;e<4;e++)n[e]^=__classPrivateFieldGet$2(this,_AES_Kd,"f")[0][e];for(let e=1;e<t;e++){for(let t=0;t<4;t++)r[t]=T5[n[t]>>24&255]^T6[n[(t+3)%4]>>16&255]^T7[n[(t+2)%4]>>8&255]^T8[255&n[(t+1)%4]]^__classPrivateFieldGet$2(this,_AES_Kd,"f")[e][t];n=r.slice()}const s=new Uint8Array(16);let i=0;for(let e=0;e<4;e++)i=__classPrivateFieldGet$2(this,_AES_Kd,"f")[t][e],s[4*e]=255&(Si[n[e]>>24&255]^i>>24),s[4*e+1]=255&(Si[n[(e+3)%4]>>16&255]^i>>16),s[4*e+2]=255&(Si[n[(e+2)%4]>>8&255]^i>>8),s[4*e+3]=255&(Si[255&n[(e+1)%4]]^i);return s}}_AES_key=new WeakMap,_AES_Kd=new WeakMap,_AES_Ke=new WeakMap;class ModeOfOperation{constructor(e,t,r){if(r&&!(this instanceof r))throw new Error(`${e} must be instantiated with "new"`);Object.defineProperties(this,{aes:{enumerable:!0,value:new AES(t)},name:{enumerable:!0,value:e}})}}var _CBC_iv,_CBC_lastBlock,__classPrivateFieldSet$1=__$G&&__$G.__classPrivateFieldSet||function(e,t,r,n,s){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!s)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?s.call(e,r):s?s.value=r:t.set(e,r),r},__classPrivateFieldGet$1=__$G&&__$G.__classPrivateFieldGet||function(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)};class CBC extends ModeOfOperation{constructor(e,t){if(super("ECC",e,CBC),_CBC_iv.set(this,void 0),_CBC_lastBlock.set(this,void 0),t){if(t.length%16)throw new TypeError("invalid iv size (must be 16 bytes)");__classPrivateFieldSet$1(this,_CBC_iv,new Uint8Array(t),"f")}else __classPrivateFieldSet$1(this,_CBC_iv,new Uint8Array(16),"f");__classPrivateFieldSet$1(this,_CBC_lastBlock,this.iv,"f")}get iv(){return new Uint8Array(__classPrivateFieldGet$1(this,_CBC_iv,"f"))}encrypt(e){if(e.length%16)throw new TypeError("invalid plaintext size (must be multiple of 16 bytes)");const t=new Uint8Array(e.length);for(let r=0;r<e.length;r+=16){for(let t=0;t<16;t++)__classPrivateFieldGet$1(this,_CBC_lastBlock,"f")[t]^=e[r+t];__classPrivateFieldSet$1(this,_CBC_lastBlock,this.aes.encrypt(__classPrivateFieldGet$1(this,_CBC_lastBlock,"f")),"f"),t.set(__classPrivateFieldGet$1(this,_CBC_lastBlock,"f"),r)}return t}decrypt(e){if(e.length%16)throw new TypeError("invalid ciphertext size (must be multiple of 16 bytes)");const t=new Uint8Array(e.length);for(let r=0;r<e.length;r+=16){const n=this.aes.decrypt(e.subarray(r,r+16));for(let s=0;s<16;s++)t[r+s]=n[s]^__classPrivateFieldGet$1(this,_CBC_lastBlock,"f")[s],__classPrivateFieldGet$1(this,_CBC_lastBlock,"f")[s]=e[r+s]}return t}}_CBC_iv=new WeakMap,_CBC_lastBlock=new WeakMap;var _CTR_remaining,_CTR_remainingIndex,_CTR_counter,__classPrivateFieldSet=__$G&&__$G.__classPrivateFieldSet||function(e,t,r,n,s){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!s)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?s.call(e,r):s?s.value=r:t.set(e,r),r},__classPrivateFieldGet=__$G&&__$G.__classPrivateFieldGet||function(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)};class CTR extends ModeOfOperation{constructor(e,t){super("CTR",e,CTR),_CTR_remaining.set(this,void 0),_CTR_remainingIndex.set(this,void 0),_CTR_counter.set(this,void 0),__classPrivateFieldSet(this,_CTR_counter,new Uint8Array(16),"f"),__classPrivateFieldGet(this,_CTR_counter,"f").fill(0),__classPrivateFieldSet(this,_CTR_remaining,__classPrivateFieldGet(this,_CTR_counter,"f"),"f"),__classPrivateFieldSet(this,_CTR_remainingIndex,16,"f"),null==t&&(t=1),"number"==typeof t?this.setCounterValue(t):this.setCounterBytes(t)}get counter(){return new Uint8Array(__classPrivateFieldGet(this,_CTR_counter,"f"))}setCounterValue(e){if(!Number.isInteger(e)||e<0||e>Number.MAX_SAFE_INTEGER)throw new TypeError("invalid counter initial integer value");for(let t=15;t>=0;--t)__classPrivateFieldGet(this,_CTR_counter,"f")[t]=e%256,e=Math.floor(e/256)}setCounterBytes(e){if(16!==e.length)throw new TypeError("invalid counter initial Uint8Array value length");__classPrivateFieldGet(this,_CTR_counter,"f").set(e)}increment(){for(let e=15;e>=0;e--){if(255!==__classPrivateFieldGet(this,_CTR_counter,"f")[e]){__classPrivateFieldGet(this,_CTR_counter,"f")[e]++;break}__classPrivateFieldGet(this,_CTR_counter,"f")[e]=0}}encrypt(e){var t,r;const n=new Uint8Array(e);for(let e=0;e<n.length;e++)16===__classPrivateFieldGet(this,_CTR_remainingIndex,"f")&&(__classPrivateFieldSet(this,_CTR_remaining,this.aes.encrypt(__classPrivateFieldGet(this,_CTR_counter,"f")),"f"),__classPrivateFieldSet(this,_CTR_remainingIndex,0,"f"),this.increment()),n[e]^=__classPrivateFieldGet(this,_CTR_remaining,"f")[(__classPrivateFieldSet(this,_CTR_remainingIndex,(r=__classPrivateFieldGet(this,_CTR_remainingIndex,"f"),t=r++,r),"f"),t)];return n}decrypt(e){return this.encrypt(e)}}function pkcs7Strip(e){if(e.length<16)throw new TypeError("PKCS#7 invalid length");const t=e[e.length-1];if(t>16)throw new TypeError("PKCS#7 padding byte out of range");const r=e.length-t;for(let n=0;n<t;n++)if(e[r+n]!==t)throw new TypeError("PKCS#7 invalid padding byte");return new Uint8Array(e.subarray(0,r))}function looseArrayify(e){return"string"!=typeof e||e.startsWith("0x")||(e="0x"+e),getBytesCopy(e)}function zpad$1(e,t){for(e=String(e);e.length<t;)e="0"+e;return e}function getPassword(e){return"string"==typeof e?toUtf8Bytes(e,"NFKC"):getBytesCopy(e)}function spelunk(e,t){const r=t.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);assertArgument(null!=r,"invalid path","path",t);const n=r[1],s=r[3],i="!"===r[4];let a=e;for(const e of n.toLowerCase().split(".")){if(Array.isArray(a)){if(!e.match(/^[0-9]+$/))break;a=a[parseInt(e)]}else if("object"==typeof a){let t=null;for(const r in a)if(r.toLowerCase()===e){t=a[r];break}a=t}else a=null;if(null==a)break}if(assertArgument(!i||null!=a,"missing required value","path",n),s&&null!=a){if("int"===s){if("string"==typeof a&&a.match(/^-?[0-9]+$/))return parseInt(a);if(Number.isSafeInteger(a))return a}if("number"===s&&"string"==typeof a&&a.match(/^-?[0-9.]*$/))return parseFloat(a);if("data"===s&&"string"==typeof a)return looseArrayify(a);if("array"===s&&Array.isArray(a))return a;if(s===typeof a)return a;assertArgument(!1,`wrong type found for ${s} `,"path",n)}return a}_CTR_remaining=new WeakMap,_CTR_remainingIndex=new WeakMap,_CTR_counter=new WeakMap;const defaultPath$1="m/44'/60'/0'/0/0";function isKeystoreJson(e){try{const t=JSON.parse(e);if(3===(null!=t.version?parseInt(t.version):0))return!0}catch(e){}return!1}function decrypt(e,t,r){if("aes-128-ctr"===spelunk(e,"crypto.cipher:string")){const n=spelunk(e,"crypto.cipherparams.iv:data!");return hexlify(new CTR(t,n).decrypt(r))}assert(!1,"unsupported cipher","UNSUPPORTED_OPERATION",{operation:"decrypt"})}function getAccount(e,t){const r=getBytes(t),n=spelunk(e,"crypto.ciphertext:data!");assertArgument(hexlify(keccak256(concat([r.slice(16,32),n]))).substring(2)===spelunk(e,"crypto.mac:string!").toLowerCase(),"incorrect password","password","[ REDACTED ]");const s=decrypt(e,r.slice(0,16),n),i=computeAddress(s);if(e.address){let t=e.address.toLowerCase();t.startsWith("0x")||(t="0x"+t),assertArgument(getAddress(t)===i,"keystore address/privateKey mismatch","address",e.address)}const a={address:i,privateKey:s};if("0.1"===spelunk(e,"x-ethers.version:string")){const t=r.slice(32,64),n=spelunk(e,"x-ethers.mnemonicCiphertext:data!"),s=spelunk(e,"x-ethers.mnemonicCounter:data!"),i=new CTR(t,s);a.mnemonic={path:spelunk(e,"x-ethers.path:string")||defaultPath$1,locale:spelunk(e,"x-ethers.locale:string")||"en",entropy:hexlify(getBytes(i.decrypt(n)))}}return a}function getDecryptKdfParams(e){const t=spelunk(e,"crypto.kdf:string");if(t&&"string"==typeof t){if("scrypt"===t.toLowerCase()){const r=spelunk(e,"crypto.kdfparams.salt:data!"),n=spelunk(e,"crypto.kdfparams.n:int!"),s=spelunk(e,"crypto.kdfparams.r:int!"),i=spelunk(e,"crypto.kdfparams.p:int!");assertArgument(n>0&&0==(n&n-1),"invalid kdf.N","kdf.N",n),assertArgument(s>0&&i>0,"invalid kdf","kdf",t);const a=spelunk(e,"crypto.kdfparams.dklen:int!");return assertArgument(32===a,"invalid kdf.dklen","kdf.dflen",a),{name:"scrypt",salt:r,N:n,r:s,p:i,dkLen:64}}if("pbkdf2"===t.toLowerCase()){const t=spelunk(e,"crypto.kdfparams.salt:data!"),r=spelunk(e,"crypto.kdfparams.prf:string!"),n=r.split("-").pop();assertArgument("sha256"===n||"sha512"===n,"invalid kdf.pdf","kdf.pdf",r);const s=spelunk(e,"crypto.kdfparams.c:int!"),i=spelunk(e,"crypto.kdfparams.dklen:int!");return assertArgument(32===i,"invalid kdf.dklen","kdf.dklen",i),{name:"pbkdf2",salt:t,count:s,dkLen:i,algorithm:n}}}assertArgument(!1,"unsupported key-derivation function","kdf",t)}function decryptKeystoreJsonSync(e,t){const r=JSON.parse(e),n=getPassword(t),s=getDecryptKdfParams(r);if("pbkdf2"===s.name){const{salt:e,count:t,dkLen:i,algorithm:a}=s;return getAccount(r,pbkdf2(n,e,t,i,a))}assert("scrypt"===s.name,"cannot be reached","UNKNOWN_ERROR",{params:s});const{salt:i,N:a,r:o,p:c,dkLen:l}=s;return getAccount(r,scryptSync(n,i,a,o,c,l))}function stall$1(e){return new Promise((t=>{setTimeout((()=>{t()}),e)}))}async function decryptKeystoreJson(e,t,r){const n=JSON.parse(e),s=getPassword(t),i=getDecryptKdfParams(n);if("pbkdf2"===i.name){r&&(r(0),await stall$1(0));const{salt:e,count:t,dkLen:a,algorithm:o}=i,c=pbkdf2(s,e,t,a,o);return r&&(r(1),await stall$1(0)),getAccount(n,c)}assert("scrypt"===i.name,"cannot be reached","UNKNOWN_ERROR",{params:i});const{salt:a,N:o,r:c,p:l,dkLen:u}=i;return getAccount(n,await scrypt(s,a,o,c,l,u,r))}function getEncryptKdfParams(e){const t=null!=e.salt?getBytes(e.salt,"options.salt"):randomBytes(32);let r=1<<17,n=8,s=1;return e.scrypt&&(e.scrypt.N&&(r=e.scrypt.N),e.scrypt.r&&(n=e.scrypt.r),e.scrypt.p&&(s=e.scrypt.p)),assertArgument("number"==typeof r&&r>0&&Number.isSafeInteger(r)&&(BigInt(r)&BigInt(r-1))===BigInt(0),"invalid scrypt N parameter","options.N",r),assertArgument("number"==typeof n&&n>0&&Number.isSafeInteger(n),"invalid scrypt r parameter","options.r",n),assertArgument("number"==typeof s&&s>0&&Number.isSafeInteger(s),"invalid scrypt p parameter","options.p",s),{name:"scrypt",dkLen:32,salt:t,N:r,r:n,p:s}}function _encryptKeystore(e,t,r,n){const s=getBytes(r.privateKey,"privateKey"),i=null!=n.iv?getBytes(n.iv,"options.iv"):randomBytes(16);assertArgument(16===i.length,"invalid options.iv length","options.iv",n.iv);const a=null!=n.uuid?getBytes(n.uuid,"options.uuid"):randomBytes(16);assertArgument(16===a.length,"invalid options.uuid length","options.uuid",n.iv);const o=e.slice(0,16),c=e.slice(16,32),l=getBytes(new CTR(o,i).encrypt(s)),u=keccak256(concat([c,l])),h={address:r.address.substring(2).toLowerCase(),id:uuidV4(a),version:3,Crypto:{cipher:"aes-128-ctr",cipherparams:{iv:hexlify(i).substring(2)},ciphertext:hexlify(l).substring(2),kdf:"scrypt",kdfparams:{salt:hexlify(t.salt).substring(2),n:t.N,dklen:32,p:t.p,r:t.r},mac:u.substring(2)}};if(r.mnemonic){const t=null!=n.client?n.client:`ethers/${version}`,s=r.mnemonic.path||defaultPath$1,i=r.mnemonic.locale||"en",a=e.slice(32,64),o=getBytes(r.mnemonic.entropy,"account.mnemonic.entropy"),c=randomBytes(16),l=getBytes(new CTR(a,c).encrypt(o)),u=new Date,d="UTC--"+(u.getUTCFullYear()+"-"+zpad$1(u.getUTCMonth()+1,2)+"-"+zpad$1(u.getUTCDate(),2)+"T"+zpad$1(u.getUTCHours(),2)+"-"+zpad$1(u.getUTCMinutes(),2)+"-"+zpad$1(u.getUTCSeconds(),2)+".0Z")+"--"+h.address;h["x-ethers"]={client:t,gethFilename:d,path:s,locale:i,mnemonicCounter:hexlify(c).substring(2),mnemonicCiphertext:hexlify(l).substring(2),version:"0.1"}}return JSON.stringify(h)}function encryptKeystoreJsonSync(e,t,r){null==r&&(r={});const n=getPassword(t),s=getEncryptKdfParams(r);return _encryptKeystore(getBytes(scryptSync(n,s.salt,s.N,s.r,s.p,64)),s,e,r)}async function encryptKeystoreJson(e,t,r){null==r&&(r={});const n=getPassword(t),s=getEncryptKdfParams(r);return _encryptKeystore(getBytes(await scrypt(n,s.salt,s.N,s.r,s.p,64,r.progressCallback)),s,e,r)}const defaultPath="m/44'/60'/0'/0/0",MasterSecret=new Uint8Array([66,105,116,99,111,105,110,32,115,101,101,100]),HardenedBit=2147483648,N=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Nibbles="0123456789abcdef";function zpad(e,t){let r="";for(;e;)r=Nibbles[e%16]+r,e=Math.trunc(e/16);for(;r.length<2*t;)r="0"+r;return"0x"+r}function encodeBase58Check(e){const t=getBytes(e);return encodeBase58(concat([t,dataSlice(sha256(sha256(t)),0,4)]))}const _guard={};function ser_I(e,t,r,n){const s=new Uint8Array(37);2147483648&e?(assert(null!=n,"cannot derive child of neutered node","UNSUPPORTED_OPERATION",{operation:"deriveChild"}),s.set(getBytes(n),1)):s.set(getBytes(r));for(let t=24;t>=0;t-=8)s[33+(t>>3)]=e>>24-t&255;const i=getBytes(computeHmac("sha512",t,s));return{IL:i.slice(0,32),IR:i.slice(32)}}function derivePath(e,t){const r=t.split("/");assertArgument(r.length>0,"invalid path","path",t),"m"===r[0]&&(assertArgument(0===e.depth,`cannot derive root path (i.e. path starting with "m/") for a node at non-zero depth ${e.depth}`,"path",t),r.shift());let n=e;for(let e=0;e<r.length;e++){const t=r[e];if(t.match(/^[0-9]+'$/)){const r=parseInt(t.substring(0,t.length-1));assertArgument(r<2147483648,"invalid path index",`path[${e}]`,t),n=n.deriveChild(2147483648+r)}else if(t.match(/^[0-9]+$/)){const r=parseInt(t);assertArgument(r<2147483648,"invalid path index",`path[${e}]`,t),n=n.deriveChild(r)}else assertArgument(!1,"invalid path component",`path[${e}]`,t)}return n}function getAccountPath(e){const t=getNumber(e,"index");return assertArgument(t>=0&&t<2147483648,"invalid account index","index",t),`m/44'/60'/${t}'/0/0`}function getIndexedAccountPath(e){const t=getNumber(e,"index");return assertArgument(t>=0&&t<2147483648,"invalid account index","index",t),`m/44'/60'/0'/0/${t}`}function isCrowdsaleJson(e){try{if(JSON.parse(e).encseed)return!0}catch(e){}return!1}function decryptCrowdsaleJson(e,t){const r=JSON.parse(e),n=getPassword(t),s=getAddress(spelunk(r,"ethaddr:string!")),i=looseArrayify(spelunk(r,"encseed:string!"));assertArgument(i&&i.length%16==0,"invalid encseed","json",e);const a=getBytes(pbkdf2(n,n,2e3,32,"sha256")).slice(0,16),o=i.slice(0,16),c=i.slice(16),l=pkcs7Strip(getBytes(new CBC(a,o).decrypt(c)));let u="";for(let e=0;e<l.length;e++)u+=String.fromCharCode(l[e]);return{address:s,privateKey:id(u)}}function stall(e){return new Promise((t=>{setTimeout((()=>{t()}),e)}))}class Wallet extends BaseWallet{constructor(e,t){"string"!=typeof e||e.startsWith("0x")||(e="0x"+e),super("string"==typeof e?new SigningKey(e):e,t)}connect(e){return new Wallet(this.signingKey,e)}async encrypt(e,t){const r={address:this.address,privateKey:this.privateKey};return await encryptKeystoreJson(r,e,{progressCallback:t})}encryptSync(e){return encryptKeystoreJsonSync({address:this.address,privateKey:this.privateKey},e)}static#Gt(e){if(assertArgument(e,"invalid JSON wallet","json","[ REDACTED ]"),"mnemonic"in e&&e.mnemonic&&"en"===e.mnemonic.locale){const t=Mnemonic.fromEntropy(e.mnemonic.entropy),r=HDNodeWallet.fromMnemonic(t,e.mnemonic.path);if(r.address===e.address&&r.privateKey===e.privateKey)return r;console.log("WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key")}const t=new Wallet(e.privateKey);return assertArgument(t.address===e.address,"address/privateKey mismatch","json","[ REDACTED ]"),t}static async fromEncryptedJson(e,t,r){let n=null;return isKeystoreJson(e)?n=await decryptKeystoreJson(e,t,r):isCrowdsaleJson(e)&&(r&&(r(0),await stall(0)),n=decryptCrowdsaleJson(e,t),r&&(r(1),await stall(0))),Wallet.#Gt(n)}static fromEncryptedJsonSync(e,t){let r=null;return isKeystoreJson(e)?r=decryptKeystoreJsonSync(e,t):isCrowdsaleJson(e)?r=decryptCrowdsaleJson(e,t):assertArgument(!1,"invalid JSON wallet","json","[ REDACTED ]"),Wallet.#Gt(r)}static createRandom(e){const t=HDNodeWallet.createRandom();return e?t.connect(e):t}static fromPhrase(e,t){const r=HDNodeWallet.fromPhrase(e);return t?r.connect(t):r}}const Base64=")!@#$%^&*(ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_";function decodeBits(e,t){const r=(1<<e)-1,n=[];let s=0,i=0,a=0;for(let o=0;o<t.length;o++)for(s=s<<6|Base64.indexOf(t[o]),i+=6;i>=e;){const t=s>>i-e;s&=(1<<i-e)-1,i-=e,0===t?a+=r:(n.push(t+a),a=0)}return n}var ethers=Object.freeze({__proto__:null,AbiCoder:AbiCoder,AbstractProvider:AbstractProvider,AbstractSigner:AbstractSigner,AnkrProvider:AnkrProvider,BaseContract:BaseContract,BaseWallet:BaseWallet,Block:Block,BrowserProvider:BrowserProvider,ConstructorFragment:ConstructorFragment,Contract:Contract,ContractEventPayload:ContractEventPayload,ContractFactory:ContractFactory,ContractTransactionReceipt:ContractTransactionReceipt,ContractTransactionResponse:ContractTransactionResponse,ContractUnknownEventPayload:ContractUnknownEventPayload,EnsPlugin:EnsPlugin,EnsResolver:EnsResolver,ErrorDescription:ErrorDescription,ErrorFragment:ErrorFragment,EtherSymbol:"Ξ",EventFragment:EventFragment,EventLog:EventLog,EventPayload:EventPayload,FallbackFragment:FallbackFragment,FallbackProvider:FallbackProvider,FeeData:FeeData,FeeDataNetworkPlugin:FeeDataNetworkPlugin,FetchCancelSignal:FetchCancelSignal,FetchRequest:FetchRequest,FetchResponse:FetchResponse,FetchUrlFeeDataNetworkPlugin:FetchUrlFeeDataNetworkPlugin,FixedNumber:FixedNumber,Fragment:Fragment,FunctionFragment:FunctionFragment,GasCostPlugin:GasCostPlugin,Indexed:Indexed,Interface:Interface,IpcSocketProvider:undefined,JsonRpcApiProvider:JsonRpcApiProvider,JsonRpcProvider:JsonRpcProvider,JsonRpcSigner:JsonRpcSigner,Log:Log,LogDescription:LogDescription,MaxInt256:MaxInt256,MaxUint256:MaxUint256,MessagePrefix:MessagePrefix,MinInt256:MinInt256,MulticoinProviderPlugin:MulticoinProviderPlugin,N:N$1,NamedFragment:NamedFragment,Network:Network,NetworkPlugin:NetworkPlugin,NonceManager:NonceManager,ParamType:ParamType,Result:Result,Signature:Signature,SigningKey:SigningKey,SocketBlockSubscriber:SocketBlockSubscriber,SocketEventSubscriber:SocketEventSubscriber,SocketPendingSubscriber:SocketPendingSubscriber,SocketProvider:SocketProvider,SocketSubscriber:SocketSubscriber,StructFragment:StructFragment,Transaction:Transaction,TransactionDescription:TransactionDescription,TransactionReceipt:TransactionReceipt,TransactionResponse:TransactionResponse,Typed:Typed,TypedDataEncoder:TypedDataEncoder,UndecodedEventLog:UndecodedEventLog,UnmanagedSubscriber:UnmanagedSubscriber,Utf8ErrorFuncs:Utf8ErrorFuncs,VoidSigner:VoidSigner,Wallet:Wallet,WebSocketProvider:WebSocketProvider,WeiPerEther:WeiPerEther,ZeroAddress:ZeroAddress,ZeroHash:ZeroHash,accessListify:accessListify,assert:assert,assertArgument:assertArgument,assertArgumentCount:assertArgumentCount,assertNormalize:assertNormalize,assertPrivate:assertPrivate,checkResultErrors:checkResultErrors,computeAddress:computeAddress,computeHmac:computeHmac,concat:concat,copyRequest:copyRequest,dataLength:dataLength,dataSlice:dataSlice,decodeBase58:decodeBase58,decodeBase64:decodeBase64,decodeBytes32String:decodeBytes32String,decodeRlp:decodeRlp,decryptCrowdsaleJson:decryptCrowdsaleJson,decryptKeystoreJson:decryptKeystoreJson,decryptKeystoreJsonSync:decryptKeystoreJsonSync,defaultPath:defaultPath,defineProperties:defineProperties,dnsEncode:dnsEncode,encodeBase58:encodeBase58,encodeBase64:encodeBase64,encodeBytes32String:encodeBytes32String,encodeRlp:encodeRlp,encryptKeystoreJson:encryptKeystoreJson,encryptKeystoreJsonSync:encryptKeystoreJsonSync,ensNormalize:ensNormalize,formatEther:formatEther,formatUnits:formatUnits,fromTwos:fromTwos,getAccountPath:getAccountPath,getAddress:getAddress,getBigInt:getBigInt,getBytes:getBytes,getBytesCopy:getBytesCopy,getCreate2Address:getCreate2Address,getCreateAddress:getCreateAddress,getDefaultProvider:getDefaultProvider,getIcapAddress:getIcapAddress,getIndexedAccountPath:getIndexedAccountPath,getNumber:getNumber,getUint:getUint,hashMessage:hashMessage,hexlify:hexlify,id:id,isAddress:isAddress,isAddressable:isAddressable,isBytesLike:isBytesLike,isCallException:isCallException,isCrowdsaleJson:isCrowdsaleJson,isError:isError,isHexString:isHexString,isKeystoreJson:isKeystoreJson,isValidName:isValidName,keccak256:keccak256,lock:lock,makeError:makeError,mask:mask,namehash:namehash,parseEther:parseEther,parseUnits:parseUnits$1,pbkdf2:pbkdf2,randomBytes:randomBytes,recoverAddress:recoverAddress,resolveAddress:resolveAddress,resolveProperties:resolveProperties,ripemd160:ripemd160,scrypt:scrypt,scryptSync:scryptSync,sha256:sha256,sha512:sha512,showThrottleMessage:showThrottleMessage,solidityPacked:solidityPacked,solidityPackedKeccak256:solidityPackedKeccak256,solidityPackedSha256:solidityPackedSha256,stripZerosLeft:stripZerosLeft,toBeArray:toBeArray,toBeHex:toBeHex,toBigInt:toBigInt,toNumber:toNumber,toQuantity:toQuantity,toTwos:toTwos,toUtf8Bytes:toUtf8Bytes,toUtf8CodePoints:toUtf8CodePoints,toUtf8String:toUtf8String,uuidV4:uuidV4,verifyMessage:verifyMessage,verifyTypedData:verifyTypedData,version:version,zeroPadBytes:zeroPadBytes,zeroPadValue:zeroPadValue});export{AbiCoder,AbstractProvider,AbstractSigner,Block,BrowserProvider,ConstructorFragment,Contract,ContractEventPayload,ContractFactory,ContractTransactionReceipt,ContractTransactionResponse,ContractUnknownEventPayload,EnsPlugin,EnsResolver,ErrorDescription,ErrorFragment,EtherSymbol,EventFragment,EventLog,EventPayload,FallbackFragment,FallbackProvider,FetchCancelSignal,FetchRequest,FetchResponse,FetchUrlFeeDataNetworkPlugin,FixedNumber,Fragment,FunctionFragment,Indexed,Interface,Log,LogDescription,MaxInt256,MaxUint256,MessagePrefix,MinInt256,MulticoinProviderPlugin,N$1 as N,NamedFragment,Network,NetworkPlugin,NonceManager,ParamType,Result,Signature,SigningKey,SocketBlockSubscriber,SocketEventSubscriber,SocketPendingSubscriber,SocketProvider,SocketSubscriber,StructFragment,Transaction,TransactionDescription,TransactionReceipt,TransactionResponse,Typed,TypedDataEncoder,UndecodedEventLog,UnmanagedSubscriber,Utf8ErrorFuncs,VoidSigner,Wallet,WebSocketProvider,WeiPerEther,ZeroAddress,ZeroHash,accessListify,assert,assertArgument,assertArgumentCount,assertNormalize,assertPrivate,checkResultErrors,computeAddress,computeHmac,concat,copyRequest,dataLength,dataSlice,decodeBase58,decodeBase64,decodeBytes32String,decodeRlp,decryptCrowdsaleJson,decryptKeystoreJson,decryptKeystoreJsonSync,defaultPath,defineProperties,dnsEncode,encodeBase58,encodeBase64,encodeBytes32String,encodeRlp,encryptKeystoreJson,encryptKeystoreJsonSync,ensNormalize,ethers,formatEther,formatUnits,fromTwos,getAccountPath,getAddress,getBigInt,getBytes,getBytesCopy,getCreate2Address,getCreateAddress,getDefaultProvider,getIcapAddress,getIndexedAccountPath,getNumber,getUint,hashMessage,hexlify,id,isAddress,isAddressable,isBytesLike,isCallException,isCrowdsaleJson,isError,isHexString,isKeystoreJson,isValidName,keccak256,lock,makeError,mask,namehash,parseEther,parseUnits$1 as parseUnits,pbkdf2,randomBytes,recoverAddress,resolveAddress,resolveProperties,ripemd160,scrypt,scryptSync,sha256,sha512,showThrottleMessage,solidityPacked,solidityPackedKeccak256,solidityPackedSha256,stripZerosLeft,toBeArray,toBeHex,toBigInt,toNumber,toQuantity,toTwos,toUtf8Bytes,toUtf8CodePoints,toUtf8String,uuidV4,verifyMessage,verifyTypedData,version,zeroPadBytes,zeroPadValue};